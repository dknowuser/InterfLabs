TimeQuest Timing Analyzer report for lab1
Tue Sep 22 11:57:23 2020
Quartus II 64-Bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'clk_divider:divider|out_clk_inner'
 12. Slow Model Setup: 'clk'
 13. Slow Model Hold: 'clk'
 14. Slow Model Hold: 'clk_divider:divider|out_clk_inner'
 15. Slow Model Minimum Pulse Width: 'clk'
 16. Slow Model Minimum Pulse Width: 'clk_divider:divider|out_clk_inner'
 17. Setup Times
 18. Hold Times
 19. Clock to Output Times
 20. Minimum Clock to Output Times
 21. Fast Model Setup Summary
 22. Fast Model Hold Summary
 23. Fast Model Recovery Summary
 24. Fast Model Removal Summary
 25. Fast Model Minimum Pulse Width Summary
 26. Fast Model Setup: 'clk_divider:divider|out_clk_inner'
 27. Fast Model Setup: 'clk'
 28. Fast Model Hold: 'clk'
 29. Fast Model Hold: 'clk_divider:divider|out_clk_inner'
 30. Fast Model Minimum Pulse Width: 'clk'
 31. Fast Model Minimum Pulse Width: 'clk_divider:divider|out_clk_inner'
 32. Setup Times
 33. Hold Times
 34. Clock to Output Times
 35. Minimum Clock to Output Times
 36. Multicorner Timing Analysis Summary
 37. Setup Times
 38. Hold Times
 39. Clock to Output Times
 40. Minimum Clock to Output Times
 41. Setup Transfers
 42. Hold Transfers
 43. Report TCCS
 44. Report RSKM
 45. Unconstrained Paths
 46. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+-----------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                       ;
+--------------------+--------------------------------------------------------------------+
; Quartus II Version ; Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version ;
; Revision Name      ; lab1                                                               ;
; Device Family      ; Cyclone II                                                         ;
; Device Name        ; EP2C5Q208C8                                                        ;
; Timing Models      ; Final                                                              ;
; Delay Model        ; Combined                                                           ;
; Rise/Fall Delays   ; Unavailable                                                        ;
+--------------------+--------------------------------------------------------------------+


+------------------------------------------+
; Parallel Compilation                     ;
+----------------------------+-------------+
; Processors                 ; Number      ;
+----------------------------+-------------+
; Number detected on machine ; 2           ;
; Maximum allowed            ; 2           ;
;                            ;             ;
; Average used               ; 1.00        ;
; Maximum used               ; 1           ;
;                            ;             ;
; Usage by Processor         ; % Time Used ;
;     Processor 1            ; 100.0%      ;
;     Processor 2            ;   0.0%      ;
+----------------------------+-------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                                                                               ;
+-----------------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------------------------------------+
; Clock Name                        ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets                               ;
+-----------------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------------------------------------+
; clk                               ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clk }                               ;
; clk_divider:divider|out_clk_inner ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clk_divider:divider|out_clk_inner } ;
+-----------------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------------------------------------+


+-------------------------------------------------------------------------+
; Slow Model Fmax Summary                                                 ;
+------------+-----------------+-----------------------------------+------+
; Fmax       ; Restricted Fmax ; Clock Name                        ; Note ;
+------------+-----------------+-----------------------------------+------+
; 169.49 MHz ; 169.49 MHz      ; clk_divider:divider|out_clk_inner ;      ;
; 233.75 MHz ; 233.75 MHz      ; clk                               ;      ;
+------------+-----------------+-----------------------------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+------------------------------------------------------------+
; Slow Model Setup Summary                                   ;
+-----------------------------------+--------+---------------+
; Clock                             ; Slack  ; End Point TNS ;
+-----------------------------------+--------+---------------+
; clk_divider:divider|out_clk_inner ; -4.257 ; -120.901      ;
; clk                               ; -3.278 ; -16.441       ;
+-----------------------------------+--------+---------------+


+------------------------------------------------------------+
; Slow Model Hold Summary                                    ;
+-----------------------------------+--------+---------------+
; Clock                             ; Slack  ; End Point TNS ;
+-----------------------------------+--------+---------------+
; clk                               ; -2.598 ; -2.598        ;
; clk_divider:divider|out_clk_inner ; 0.499  ; 0.000         ;
+-----------------------------------+--------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+------------------------------------------------------------+
; Slow Model Minimum Pulse Width Summary                     ;
+-----------------------------------+--------+---------------+
; Clock                             ; Slack  ; End Point TNS ;
+-----------------------------------+--------+---------------+
; clk                               ; -1.777 ; -15.133       ;
; clk_divider:divider|out_clk_inner ; -0.742 ; -56.392       ;
+-----------------------------------+--------+---------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clk_divider:divider|out_clk_inner'                                                                                                                                                 ;
+--------+--------------------------------------+--------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+
; Slack  ; From Node                            ; To Node                              ; Launch Clock                      ; Latch Clock                       ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------------------------+--------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+
; -4.257 ; pulse_generator:pulse_gen|counter[0] ; pulse_generator:pulse_gen|counter[4] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.297      ;
; -4.256 ; pulse_generator:pulse_gen|counter[0] ; pulse_generator:pulse_gen|counter[0] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.296      ;
; -4.166 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|bit_number[1]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.206      ;
; -4.166 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|bit_number[2]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.206      ;
; -4.166 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|bit_number[4]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.206      ;
; -4.166 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|bit_number[5]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.206      ;
; -4.166 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|bit_number[6]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.206      ;
; -4.166 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|bit_number[7]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.206      ;
; -4.166 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|bit_number[8]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.206      ;
; -4.166 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|bit_number[9]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.206      ;
; -4.166 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|bit_number[0]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.206      ;
; -4.166 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|bit_number[3]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.206      ;
; -4.161 ; pulse_generator:pulse_gen|counter[2] ; pulse_generator:pulse_gen|counter[4] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.001      ; 5.202      ;
; -4.160 ; pulse_generator:pulse_gen|counter[2] ; pulse_generator:pulse_gen|counter[0] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.001      ; 5.201      ;
; -4.128 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|bit_number[1]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.168      ;
; -4.128 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|bit_number[2]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.168      ;
; -4.128 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|bit_number[4]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.168      ;
; -4.128 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|bit_number[5]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.168      ;
; -4.128 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|bit_number[6]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.168      ;
; -4.128 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|bit_number[7]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.168      ;
; -4.128 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|bit_number[8]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.168      ;
; -4.128 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|bit_number[9]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.168      ;
; -4.128 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|bit_number[0]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.168      ;
; -4.128 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|bit_number[3]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.168      ;
; -4.083 ; pulse_generator:pulse_gen|counter[3] ; pulse_generator:pulse_gen|counter[4] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.001      ; 5.124      ;
; -4.082 ; pulse_generator:pulse_gen|counter[3] ; pulse_generator:pulse_gen|counter[0] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.001      ; 5.123      ;
; -3.996 ; SPI_controller:spi|bit_number[8]     ; SPI_controller:spi|bit_number[1]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.036      ;
; -3.996 ; SPI_controller:spi|bit_number[8]     ; SPI_controller:spi|bit_number[2]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.036      ;
; -3.996 ; SPI_controller:spi|bit_number[8]     ; SPI_controller:spi|bit_number[4]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.036      ;
; -3.996 ; SPI_controller:spi|bit_number[8]     ; SPI_controller:spi|bit_number[5]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.036      ;
; -3.996 ; SPI_controller:spi|bit_number[8]     ; SPI_controller:spi|bit_number[6]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.036      ;
; -3.996 ; SPI_controller:spi|bit_number[8]     ; SPI_controller:spi|bit_number[7]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.036      ;
; -3.996 ; SPI_controller:spi|bit_number[8]     ; SPI_controller:spi|bit_number[8]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.036      ;
; -3.996 ; SPI_controller:spi|bit_number[8]     ; SPI_controller:spi|bit_number[9]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.036      ;
; -3.996 ; SPI_controller:spi|bit_number[8]     ; SPI_controller:spi|bit_number[0]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.036      ;
; -3.996 ; SPI_controller:spi|bit_number[8]     ; SPI_controller:spi|bit_number[3]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.036      ;
; -3.993 ; pulse_generator:pulse_gen|counter[4] ; pulse_generator:pulse_gen|counter[4] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.033      ;
; -3.992 ; pulse_generator:pulse_gen|counter[4] ; pulse_generator:pulse_gen|counter[0] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.032      ;
; -3.976 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|bit_number[1]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.016      ;
; -3.976 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|bit_number[2]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.016      ;
; -3.976 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|bit_number[4]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.016      ;
; -3.976 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|bit_number[5]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.016      ;
; -3.976 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|bit_number[6]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.016      ;
; -3.976 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|bit_number[7]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.016      ;
; -3.976 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|bit_number[8]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.016      ;
; -3.976 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|bit_number[9]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.016      ;
; -3.976 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|bit_number[0]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.016      ;
; -3.976 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|bit_number[3]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 5.016      ;
; -3.962 ; pulse_generator:pulse_gen|counter[1] ; pulse_generator:pulse_gen|counter[4] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.001      ; 5.003      ;
; -3.961 ; pulse_generator:pulse_gen|counter[1] ; pulse_generator:pulse_gen|counter[0] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.001      ; 5.002      ;
; -3.945 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|inner_data[1]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.985      ;
; -3.945 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|inner_data[2]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.985      ;
; -3.945 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|inner_data[3]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.985      ;
; -3.945 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|inner_data[4]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.985      ;
; -3.945 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|inner_data[5]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.985      ;
; -3.945 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|inner_data[6]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.985      ;
; -3.945 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|inner_data[7]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.985      ;
; -3.945 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|inner_data[8]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.985      ;
; -3.945 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|inner_data[9]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.985      ;
; -3.907 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|inner_data[1]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.947      ;
; -3.907 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|inner_data[2]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.947      ;
; -3.907 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|inner_data[3]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.947      ;
; -3.907 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|inner_data[4]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.947      ;
; -3.907 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|inner_data[5]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.947      ;
; -3.907 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|inner_data[6]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.947      ;
; -3.907 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|inner_data[7]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.947      ;
; -3.907 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|inner_data[8]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.947      ;
; -3.907 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|inner_data[9]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.947      ;
; -3.798 ; SPI_controller:spi|bit_number[6]     ; SPI_controller:spi|bit_number[1]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.838      ;
; -3.798 ; SPI_controller:spi|bit_number[6]     ; SPI_controller:spi|bit_number[2]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.838      ;
; -3.798 ; SPI_controller:spi|bit_number[6]     ; SPI_controller:spi|bit_number[4]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.838      ;
; -3.798 ; SPI_controller:spi|bit_number[6]     ; SPI_controller:spi|bit_number[5]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.838      ;
; -3.798 ; SPI_controller:spi|bit_number[6]     ; SPI_controller:spi|bit_number[6]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.838      ;
; -3.798 ; SPI_controller:spi|bit_number[6]     ; SPI_controller:spi|bit_number[7]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.838      ;
; -3.798 ; SPI_controller:spi|bit_number[6]     ; SPI_controller:spi|bit_number[8]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.838      ;
; -3.798 ; SPI_controller:spi|bit_number[6]     ; SPI_controller:spi|bit_number[9]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.838      ;
; -3.798 ; SPI_controller:spi|bit_number[6]     ; SPI_controller:spi|bit_number[0]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.838      ;
; -3.798 ; SPI_controller:spi|bit_number[6]     ; SPI_controller:spi|bit_number[3]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.838      ;
; -3.755 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|inner_data[1]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.795      ;
; -3.755 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|inner_data[2]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.795      ;
; -3.755 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|inner_data[3]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.795      ;
; -3.755 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|inner_data[4]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.795      ;
; -3.755 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|inner_data[5]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.795      ;
; -3.755 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|inner_data[6]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.795      ;
; -3.755 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|inner_data[7]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.795      ;
; -3.755 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|inner_data[8]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.795      ;
; -3.755 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|inner_data[9]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.795      ;
; -3.737 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|inner_data[0]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.001     ; 4.776      ;
; -3.699 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|inner_data[0]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.001     ; 4.738      ;
; -3.666 ; pulse_generator:pulse_gen|counter[5] ; pulse_generator:pulse_gen|counter[4] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.001      ; 4.707      ;
; -3.665 ; pulse_generator:pulse_gen|counter[5] ; pulse_generator:pulse_gen|counter[0] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.001      ; 4.706      ;
; -3.657 ; SPI_controller:spi|bit_number[0]     ; SPI_controller:spi|bit_number[1]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.697      ;
; -3.657 ; SPI_controller:spi|bit_number[0]     ; SPI_controller:spi|bit_number[2]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.697      ;
; -3.657 ; SPI_controller:spi|bit_number[0]     ; SPI_controller:spi|bit_number[4]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.697      ;
; -3.657 ; SPI_controller:spi|bit_number[0]     ; SPI_controller:spi|bit_number[5]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.697      ;
; -3.657 ; SPI_controller:spi|bit_number[0]     ; SPI_controller:spi|bit_number[6]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.697      ;
; -3.657 ; SPI_controller:spi|bit_number[0]     ; SPI_controller:spi|bit_number[7]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.697      ;
; -3.657 ; SPI_controller:spi|bit_number[0]     ; SPI_controller:spi|bit_number[8]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.697      ;
; -3.657 ; SPI_controller:spi|bit_number[0]     ; SPI_controller:spi|bit_number[9]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.697      ;
; -3.657 ; SPI_controller:spi|bit_number[0]     ; SPI_controller:spi|bit_number[0]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 4.697      ;
+--------+--------------------------------------+--------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clk'                                                                                                                                                   ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                         ; To Node                           ; Launch Clock                      ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+
; -3.278 ; clk_divider:divider|counter[0]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 4.318      ;
; -3.170 ; clk_divider:divider|counter[1]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 4.210      ;
; -3.029 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 4.069      ;
; -3.026 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 4.066      ;
; -2.979 ; clk_divider:divider|counter[2]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 4.019      ;
; -2.921 ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.961      ;
; -2.918 ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.958      ;
; -2.730 ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.770      ;
; -2.727 ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.767      ;
; -2.606 ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.646      ;
; -2.605 ; clk_divider:divider|counter[5]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.645      ;
; -2.601 ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.641      ;
; -2.573 ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.613      ;
; -2.572 ; clk_divider:divider|counter[3]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.612      ;
; -2.568 ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.608      ;
; -2.425 ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.465      ;
; -2.424 ; clk_divider:divider|counter[4]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.464      ;
; -2.420 ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.460      ;
; -2.357 ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.397      ;
; -2.356 ; clk_divider:divider|counter[6]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.396      ;
; -2.352 ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.392      ;
; -1.932 ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.972      ;
; -1.931 ; clk_divider:divider|counter[7]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.971      ;
; -1.927 ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.967      ;
; -1.571 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.611      ;
; -1.485 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.525      ;
; -1.463 ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.503      ;
; -1.399 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.439      ;
; -1.377 ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.417      ;
; -1.343 ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.383      ;
; -1.291 ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.331      ;
; -1.272 ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.312      ;
; -1.257 ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.297      ;
; -1.227 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.267      ;
; -1.202 ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.242      ;
; -1.186 ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.226      ;
; -1.180 ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.220      ;
; -1.119 ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.159      ;
; -1.100 ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.140      ;
; -1.094 ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.134      ;
; -1.082 ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.122      ;
; -1.008 ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.048      ;
; -0.996 ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.036      ;
; -0.951 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.991      ;
; -0.928 ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.968      ;
; -0.910 ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.950      ;
; -0.777 ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.817      ;
; -0.777 ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.817      ;
; -0.723 ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.763      ;
; -0.475 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.515      ;
; -0.444 ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.484      ;
; -0.443 ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.483      ;
; 2.832  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk         ; 0.500        ; 2.793      ; 0.805      ;
; 3.332  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk         ; 1.000        ; 2.793      ; 0.805      ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clk'                                                                                                                                                    ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                         ; To Node                           ; Launch Clock                      ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+
; -2.598 ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk         ; 0.000        ; 2.793      ; 0.805      ;
; -2.098 ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk         ; -0.500       ; 2.793      ; 0.805      ;
; 1.177  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.483      ;
; 1.178  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.484      ;
; 1.209  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.515      ;
; 1.457  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.763      ;
; 1.511  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.817      ;
; 1.511  ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.817      ;
; 1.644  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.950      ;
; 1.662  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.968      ;
; 1.685  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.991      ;
; 1.730  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.036      ;
; 1.742  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.048      ;
; 1.816  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.122      ;
; 1.828  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.134      ;
; 1.834  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.140      ;
; 1.853  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.159      ;
; 1.914  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.220      ;
; 1.920  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.226      ;
; 1.936  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.242      ;
; 1.961  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.267      ;
; 1.991  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.297      ;
; 2.006  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.312      ;
; 2.025  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.331      ;
; 2.077  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.383      ;
; 2.111  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.417      ;
; 2.133  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.439      ;
; 2.197  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.503      ;
; 2.219  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.525      ;
; 2.223  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.529      ;
; 2.246  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.552      ;
; 2.305  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.611      ;
; 2.661  ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.967      ;
; 2.665  ; clk_divider:divider|counter[7]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.971      ;
; 2.666  ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.972      ;
; 2.714  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.020      ;
; 2.717  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.023      ;
; 2.720  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.026      ;
; 2.801  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.107      ;
; 2.805  ; clk_divider:divider|counter[6]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.111      ;
; 2.806  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.112      ;
; 2.806  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.112      ;
; 2.811  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.117      ;
; 2.815  ; clk_divider:divider|counter[4]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.121      ;
; 2.938  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.244      ;
; 2.969  ; clk_divider:divider|counter[1]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.275      ;
; 2.976  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.282      ;
; 3.021  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.327      ;
; 3.025  ; clk_divider:divider|counter[5]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.331      ;
; 3.026  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.332      ;
; 3.068  ; clk_divider:divider|counter[3]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.374      ;
; 3.105  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.411      ;
; 3.160  ; clk_divider:divider|counter[2]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.466      ;
; 3.422  ; clk_divider:divider|counter[0]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.728      ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clk_divider:divider|out_clk_inner'                                                                                                                                                   ;
+-------+---------------------------------------+---------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+
; Slack ; From Node                             ; To Node                               ; Launch Clock                      ; Latch Clock                       ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------------------------------+---------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+
; 0.499 ; SPI_controller:spi|start              ; SPI_controller:spi|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.805      ;
; 0.499 ; SPI_controller:spi|clk_sync           ; SPI_controller:spi|clk_sync           ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.805      ;
; 0.741 ; SPI_controller:spi|inner_data[6]      ; SPI_controller:spi|inner_data[7]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.047      ;
; 0.743 ; SPI_controller:spi|inner_data[3]      ; SPI_controller:spi|inner_data[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.049      ;
; 0.753 ; pulse_generator:pulse_gen|counter[14] ; pulse_generator:pulse_gen|counter[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.059      ;
; 0.834 ; SPI_controller:spi|clk_sync           ; SPI_controller:spi|inner_data[9]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.140      ;
; 0.836 ; SPI_controller:spi|clk_sync           ; SPI_controller:spi|inner_data[6]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.142      ;
; 0.917 ; SPI_controller:spi|inner_data[5]      ; SPI_controller:spi|inner_data[6]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.223      ;
; 1.160 ; SPI_controller:spi|inner_data[8]      ; SPI_controller:spi|inner_data[9]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.466      ;
; 1.172 ; pulse_generator:pulse_gen|counter[7]  ; pulse_generator:pulse_gen|counter[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.478      ;
; 1.172 ; pulse_generator:pulse_gen|counter[11] ; pulse_generator:pulse_gen|counter[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.478      ;
; 1.172 ; pulse_generator:pulse_gen|counter[9]  ; pulse_generator:pulse_gen|counter[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.478      ;
; 1.176 ; SPI_controller:spi|bit_number[4]      ; SPI_controller:spi|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.482      ;
; 1.177 ; pulse_generator:pulse_gen|counter[13] ; pulse_generator:pulse_gen|counter[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.483      ;
; 1.190 ; SPI_controller:spi|bit_number[2]      ; SPI_controller:spi|bit_number[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.496      ;
; 1.218 ; SPI_controller:spi|clk_sync           ; SPI_controller:spi|inner_data[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.524      ;
; 1.224 ; SPI_controller:spi|inner_data[2]      ; SPI_controller:spi|inner_data[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.530      ;
; 1.225 ; pulse_generator:pulse_gen|counter[8]  ; pulse_generator:pulse_gen|counter[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.531      ;
; 1.225 ; pulse_generator:pulse_gen|counter[10] ; pulse_generator:pulse_gen|counter[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.531      ;
; 1.225 ; SPI_controller:spi|inner_data[1]      ; SPI_controller:spi|inner_data[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.531      ;
; 1.225 ; SPI_controller:spi|inner_data[7]      ; SPI_controller:spi|inner_data[8]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.531      ;
; 1.226 ; SPI_controller:spi|bit_number[1]      ; SPI_controller:spi|bit_number[1]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.532      ;
; 1.226 ; pulse_generator:pulse_gen|counter[5]  ; pulse_generator:pulse_gen|counter[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.532      ;
; 1.226 ; pulse_generator:pulse_gen|counter[6]  ; pulse_generator:pulse_gen|counter[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.532      ;
; 1.226 ; pulse_generator:pulse_gen|counter[12] ; pulse_generator:pulse_gen|counter[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.532      ;
; 1.226 ; SPI_controller:spi|inner_data[4]      ; SPI_controller:spi|inner_data[5]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.532      ;
; 1.228 ; SPI_controller:spi|clk_sync           ; SPI_controller:spi|inner_data[7]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.534      ;
; 1.229 ; SPI_controller:spi|bit_number[7]      ; SPI_controller:spi|bit_number[7]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.535      ;
; 1.235 ; SPI_controller:spi|bit_number[3]      ; SPI_controller:spi|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.541      ;
; 1.239 ; SPI_controller:spi|bit_number[0]      ; SPI_controller:spi|bit_number[0]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.545      ;
; 1.253 ; SPI_controller:spi|clk_sync           ; SPI_controller:spi|inner_data[8]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.559      ;
; 1.255 ; SPI_controller:spi|clk_sync           ; SPI_controller:spi|inner_data[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.561      ;
; 1.262 ; SPI_controller:spi|clk_sync           ; SPI_controller:spi|inner_data[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.568      ;
; 1.263 ; SPI_controller:spi|clk_sync           ; SPI_controller:spi|inner_data[1]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.569      ;
; 1.264 ; SPI_controller:spi|clk_sync           ; SPI_controller:spi|inner_data[5]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.570      ;
; 1.316 ; pulse_generator:pulse_gen|counter[0]  ; pulse_generator:pulse_gen|start       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.622      ;
; 1.464 ; pulse_generator:pulse_gen|counter[2]  ; pulse_generator:pulse_gen|counter[2]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.770      ;
; 1.472 ; pulse_generator:pulse_gen|counter[3]  ; pulse_generator:pulse_gen|counter[3]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.778      ;
; 1.474 ; SPI_controller:spi|bit_number[5]      ; SPI_controller:spi|bit_number[5]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.780      ;
; 1.482 ; SPI_controller:spi|clk_sync           ; SPI_controller:spi|inner_data[0]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.001     ; 1.787      ;
; 1.526 ; SPI_controller:spi|bit_number[6]      ; SPI_controller:spi|bit_number[6]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.832      ;
; 1.533 ; SPI_controller:spi|bit_number[8]      ; SPI_controller:spi|bit_number[8]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.839      ;
; 1.538 ; SPI_controller:spi|bit_number[9]      ; SPI_controller:spi|bit_number[9]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.844      ;
; 1.545 ; SPI_controller:spi|inner_data[0]      ; SPI_controller:spi|inner_data[1]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.001      ; 1.852      ;
; 1.604 ; SPI_controller:spi|inner_data[0]      ; SPI_controller:spi|inner_data[0]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.910      ;
; 1.651 ; pulse_generator:pulse_gen|counter[9]  ; pulse_generator:pulse_gen|counter[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.957      ;
; 1.651 ; pulse_generator:pulse_gen|counter[11] ; pulse_generator:pulse_gen|counter[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.957      ;
; 1.655 ; SPI_controller:spi|bit_number[4]      ; SPI_controller:spi|bit_number[5]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.961      ;
; 1.656 ; pulse_generator:pulse_gen|counter[13] ; pulse_generator:pulse_gen|counter[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.962      ;
; 1.658 ; pulse_generator:pulse_gen|counter[1]  ; pulse_generator:pulse_gen|counter[2]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.964      ;
; 1.705 ; pulse_generator:pulse_gen|counter[10] ; pulse_generator:pulse_gen|counter[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.011      ;
; 1.705 ; pulse_generator:pulse_gen|counter[8]  ; pulse_generator:pulse_gen|counter[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.011      ;
; 1.706 ; pulse_generator:pulse_gen|counter[6]  ; pulse_generator:pulse_gen|counter[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.012      ;
; 1.706 ; pulse_generator:pulse_gen|counter[12] ; pulse_generator:pulse_gen|counter[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.012      ;
; 1.706 ; SPI_controller:spi|bit_number[1]      ; SPI_controller:spi|bit_number[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.012      ;
; 1.706 ; pulse_generator:pulse_gen|counter[5]  ; pulse_generator:pulse_gen|counter[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.012      ;
; 1.709 ; SPI_controller:spi|bit_number[7]      ; SPI_controller:spi|bit_number[8]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.015      ;
; 1.715 ; SPI_controller:spi|bit_number[3]      ; SPI_controller:spi|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.021      ;
; 1.715 ; SPI_controller:spi|bit_number[0]      ; SPI_controller:spi|bit_number[1]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.021      ;
; 1.737 ; pulse_generator:pulse_gen|counter[9]  ; pulse_generator:pulse_gen|counter[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.043      ;
; 1.737 ; pulse_generator:pulse_gen|counter[11] ; pulse_generator:pulse_gen|counter[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.043      ;
; 1.741 ; SPI_controller:spi|bit_number[4]      ; SPI_controller:spi|bit_number[6]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.047      ;
; 1.744 ; pulse_generator:pulse_gen|counter[1]  ; pulse_generator:pulse_gen|counter[3]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.050      ;
; 1.753 ; pulse_generator:pulse_gen|counter[4]  ; pulse_generator:pulse_gen|start       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.059      ;
; 1.761 ; pulse_generator:pulse_gen|counter[7]  ; pulse_generator:pulse_gen|counter[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.067      ;
; 1.779 ; SPI_controller:spi|bit_number[2]      ; SPI_controller:spi|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.085      ;
; 1.788 ; pulse_generator:pulse_gen|counter[3]  ; pulse_generator:pulse_gen|start       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.001      ; 2.095      ;
; 1.791 ; pulse_generator:pulse_gen|counter[8]  ; pulse_generator:pulse_gen|counter[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.097      ;
; 1.791 ; pulse_generator:pulse_gen|counter[10] ; pulse_generator:pulse_gen|counter[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.097      ;
; 1.792 ; pulse_generator:pulse_gen|counter[12] ; pulse_generator:pulse_gen|counter[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.098      ;
; 1.792 ; pulse_generator:pulse_gen|counter[5]  ; pulse_generator:pulse_gen|counter[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.098      ;
; 1.795 ; SPI_controller:spi|bit_number[7]      ; SPI_controller:spi|bit_number[9]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.101      ;
; 1.801 ; SPI_controller:spi|bit_number[3]      ; SPI_controller:spi|bit_number[5]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.107      ;
; 1.801 ; SPI_controller:spi|bit_number[0]      ; SPI_controller:spi|bit_number[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.107      ;
; 1.815 ; SPI_controller:spi|bit_number[3]      ; SPI_controller:spi|clk_sync           ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.121      ;
; 1.823 ; pulse_generator:pulse_gen|counter[9]  ; pulse_generator:pulse_gen|counter[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.129      ;
; 1.823 ; pulse_generator:pulse_gen|counter[11] ; pulse_generator:pulse_gen|counter[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.129      ;
; 1.827 ; SPI_controller:spi|bit_number[4]      ; SPI_controller:spi|bit_number[7]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.133      ;
; 1.847 ; pulse_generator:pulse_gen|counter[7]  ; pulse_generator:pulse_gen|counter[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.153      ;
; 1.865 ; SPI_controller:spi|bit_number[2]      ; SPI_controller:spi|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.171      ;
; 1.877 ; pulse_generator:pulse_gen|counter[8]  ; pulse_generator:pulse_gen|counter[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.183      ;
; 1.877 ; pulse_generator:pulse_gen|counter[10] ; pulse_generator:pulse_gen|counter[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.183      ;
; 1.887 ; SPI_controller:spi|bit_number[3]      ; SPI_controller:spi|bit_number[6]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.193      ;
; 1.896 ; pulse_generator:pulse_gen|counter[6]  ; pulse_generator:pulse_gen|counter[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.202      ;
; 1.896 ; SPI_controller:spi|bit_number[1]      ; SPI_controller:spi|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.202      ;
; 1.909 ; pulse_generator:pulse_gen|counter[9]  ; pulse_generator:pulse_gen|counter[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.215      ;
; 1.913 ; SPI_controller:spi|bit_number[4]      ; SPI_controller:spi|bit_number[8]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.219      ;
; 1.916 ; pulse_generator:pulse_gen|counter[1]  ; pulse_generator:pulse_gen|counter[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.222      ;
; 1.933 ; pulse_generator:pulse_gen|counter[7]  ; pulse_generator:pulse_gen|counter[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.239      ;
; 1.943 ; pulse_generator:pulse_gen|counter[2]  ; pulse_generator:pulse_gen|counter[3]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.249      ;
; 1.947 ; pulse_generator:pulse_gen|counter[4]  ; pulse_generator:pulse_gen|counter[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.001     ; 2.252      ;
; 1.951 ; SPI_controller:spi|bit_number[2]      ; SPI_controller:spi|bit_number[5]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.257      ;
; 1.953 ; pulse_generator:pulse_gen|counter[0]  ; pulse_generator:pulse_gen|counter[2]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.001     ; 2.258      ;
; 1.953 ; SPI_controller:spi|bit_number[5]      ; SPI_controller:spi|bit_number[6]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.259      ;
; 1.963 ; pulse_generator:pulse_gen|counter[8]  ; pulse_generator:pulse_gen|counter[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.269      ;
; 1.963 ; pulse_generator:pulse_gen|counter[10] ; pulse_generator:pulse_gen|counter[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.269      ;
; 1.973 ; SPI_controller:spi|bit_number[3]      ; SPI_controller:spi|bit_number[7]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.279      ;
; 1.982 ; pulse_generator:pulse_gen|counter[6]  ; pulse_generator:pulse_gen|counter[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.288      ;
; 1.982 ; SPI_controller:spi|bit_number[1]      ; SPI_controller:spi|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.288      ;
; 1.982 ; pulse_generator:pulse_gen|counter[5]  ; pulse_generator:pulse_gen|counter[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.288      ;
+-------+---------------------------------------+---------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clk'                                                                              ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                            ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------------+
; -1.777 ; 1.000        ; 2.777          ; Port Rate        ; clk   ; Rise       ; clk                               ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[0]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[0]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[1]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[1]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[2]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[2]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[3]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[3]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[4]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[4]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[5]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[5]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[6]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[6]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[7]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[7]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|out_clk_inner ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|out_clk_inner ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk|combout                       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk|combout                       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|inclk[0]              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|inclk[0]              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|outclk                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|outclk                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[2]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[2]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[3]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[3]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[4]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[4]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[5]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[5]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[6]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[6]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[7]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[7]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|out_clk_inner|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|out_clk_inner|clk         ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clk_divider:divider|out_clk_inner'                                                                                 ;
+--------+--------------+----------------+------------------+-----------------------------------+------------+----------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock                             ; Clock Edge ; Target                                 ;
+--------+--------------+----------------+------------------+-----------------------------------+------------+----------------------------------------+
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[0]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[0]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[1]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[1]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[2]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[2]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[3]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[3]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[4]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[4]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[5]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[5]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[6]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[6]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[7]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[7]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[8]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[8]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[9]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[9]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|clk_sync            ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|clk_sync            ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[0]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[0]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[1]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[1]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[2]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[2]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[3]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[3]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[4]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[4]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[5]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[5]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[6]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[6]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[7]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[7]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[8]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[8]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[9]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[9]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:spi|start               ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:spi|start               ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[0]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[0]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[10]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[10]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[11]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[11]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[12]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[12]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[13]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[13]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[14]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[14]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[1]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[1]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[2]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[2]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[3]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[3]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[4]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[4]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[5]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[5]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[6]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[6]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[7]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[7]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[8]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[8]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[9]   ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[9]   ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|start        ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|start        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner|regout           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner|regout           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[0]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[0]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[10]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[10]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[11]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[11]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[12]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[12]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[13]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[13]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[14]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[14]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[1]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[1]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[2]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[2]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[3]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[3]|clk               ;
+--------+--------------+----------------+------------------+-----------------------------------+------------+----------------------------------------+


+----------------------------------------------------------------------------------------------------------------+
; Setup Times                                                                                                    ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; Data Port ; Clock Port                        ; Rise  ; Fall  ; Clock Edge ; Clock Reference                   ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; data[*]   ; clk_divider:divider|out_clk_inner ; 5.487 ; 5.487 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[0]  ; clk_divider:divider|out_clk_inner ; 5.487 ; 5.487 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[1]  ; clk_divider:divider|out_clk_inner ; 5.476 ; 5.476 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[2]  ; clk_divider:divider|out_clk_inner ; 5.235 ; 5.235 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[3]  ; clk_divider:divider|out_clk_inner ; 4.882 ; 4.882 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[4]  ; clk_divider:divider|out_clk_inner ; 4.869 ; 4.869 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[5]  ; clk_divider:divider|out_clk_inner ; 4.869 ; 4.869 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[6]  ; clk_divider:divider|out_clk_inner ; 5.122 ; 5.122 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[7]  ; clk_divider:divider|out_clk_inner ; 5.235 ; 5.235 ; Fall       ; clk_divider:divider|out_clk_inner ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+


+------------------------------------------------------------------------------------------------------------------+
; Hold Times                                                                                                       ;
+-----------+-----------------------------------+--------+--------+------------+-----------------------------------+
; Data Port ; Clock Port                        ; Rise   ; Fall   ; Clock Edge ; Clock Reference                   ;
+-----------+-----------------------------------+--------+--------+------------+-----------------------------------+
; data[*]   ; clk_divider:divider|out_clk_inner ; -4.603 ; -4.603 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[0]  ; clk_divider:divider|out_clk_inner ; -5.221 ; -5.221 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[1]  ; clk_divider:divider|out_clk_inner ; -5.210 ; -5.210 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[2]  ; clk_divider:divider|out_clk_inner ; -4.969 ; -4.969 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[3]  ; clk_divider:divider|out_clk_inner ; -4.616 ; -4.616 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[4]  ; clk_divider:divider|out_clk_inner ; -4.603 ; -4.603 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[5]  ; clk_divider:divider|out_clk_inner ; -4.603 ; -4.603 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[6]  ; clk_divider:divider|out_clk_inner ; -4.856 ; -4.856 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[7]  ; clk_divider:divider|out_clk_inner ; -4.969 ; -4.969 ; Fall       ; clk_divider:divider|out_clk_inner ;
+-----------+-----------------------------------+--------+--------+------------+-----------------------------------+


+----------------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                          ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; Data Port ; Clock Port                        ; Rise  ; Fall  ; Clock Edge ; Clock Reference                   ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; sck       ; clk_divider:divider|out_clk_inner ; 7.913 ;       ; Rise       ; clk_divider:divider|out_clk_inner ;
; ss        ; clk_divider:divider|out_clk_inner ; 8.116 ; 8.116 ; Rise       ; clk_divider:divider|out_clk_inner ;
; mosi      ; clk_divider:divider|out_clk_inner ; 9.257 ; 9.257 ; Fall       ; clk_divider:divider|out_clk_inner ;
; sck       ; clk_divider:divider|out_clk_inner ; 9.747 ; 9.747 ; Fall       ; clk_divider:divider|out_clk_inner ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+


+----------------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                                  ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; Data Port ; Clock Port                        ; Rise  ; Fall  ; Clock Edge ; Clock Reference                   ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; sck       ; clk_divider:divider|out_clk_inner ; 7.913 ;       ; Rise       ; clk_divider:divider|out_clk_inner ;
; ss        ; clk_divider:divider|out_clk_inner ; 8.116 ; 8.116 ; Rise       ; clk_divider:divider|out_clk_inner ;
; mosi      ; clk_divider:divider|out_clk_inner ; 9.096 ; 9.096 ; Fall       ; clk_divider:divider|out_clk_inner ;
; sck       ; clk_divider:divider|out_clk_inner ; 9.747 ; 7.913 ; Fall       ; clk_divider:divider|out_clk_inner ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+


+------------------------------------------------------------+
; Fast Model Setup Summary                                   ;
+-----------------------------------+--------+---------------+
; Clock                             ; Slack  ; End Point TNS ;
+-----------------------------------+--------+---------------+
; clk_divider:divider|out_clk_inner ; -0.740 ; -16.767       ;
; clk                               ; -0.347 ; -0.938        ;
+-----------------------------------+--------+---------------+


+------------------------------------------------------------+
; Fast Model Hold Summary                                    ;
+-----------------------------------+--------+---------------+
; Clock                             ; Slack  ; End Point TNS ;
+-----------------------------------+--------+---------------+
; clk                               ; -1.439 ; -1.439        ;
; clk_divider:divider|out_clk_inner ; 0.215  ; 0.000         ;
+-----------------------------------+--------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+------------------------------------------------------------+
; Fast Model Minimum Pulse Width Summary                     ;
+-----------------------------------+--------+---------------+
; Clock                             ; Slack  ; End Point TNS ;
+-----------------------------------+--------+---------------+
; clk                               ; -1.222 ; -10.222       ;
; clk_divider:divider|out_clk_inner ; -0.500 ; -38.000       ;
+-----------------------------------+--------+---------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clk_divider:divider|out_clk_inner'                                                                                                                                                 ;
+--------+--------------------------------------+--------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+
; Slack  ; From Node                            ; To Node                              ; Launch Clock                      ; Latch Clock                       ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------------------------+--------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+
; -0.740 ; pulse_generator:pulse_gen|counter[0] ; pulse_generator:pulse_gen|counter[4] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.772      ;
; -0.739 ; pulse_generator:pulse_gen|counter[0] ; pulse_generator:pulse_gen|counter[0] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.771      ;
; -0.738 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|bit_number[1]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.770      ;
; -0.738 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|bit_number[2]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.770      ;
; -0.738 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|bit_number[4]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.770      ;
; -0.738 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|bit_number[5]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.770      ;
; -0.738 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|bit_number[6]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.770      ;
; -0.738 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|bit_number[7]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.770      ;
; -0.738 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|bit_number[8]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.770      ;
; -0.738 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|bit_number[9]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.770      ;
; -0.738 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|bit_number[0]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.770      ;
; -0.738 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|bit_number[3]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.770      ;
; -0.723 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|bit_number[1]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.755      ;
; -0.723 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|bit_number[2]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.755      ;
; -0.723 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|bit_number[4]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.755      ;
; -0.723 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|bit_number[5]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.755      ;
; -0.723 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|bit_number[6]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.755      ;
; -0.723 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|bit_number[7]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.755      ;
; -0.723 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|bit_number[8]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.755      ;
; -0.723 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|bit_number[9]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.755      ;
; -0.723 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|bit_number[0]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.755      ;
; -0.723 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|bit_number[3]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.755      ;
; -0.677 ; pulse_generator:pulse_gen|counter[2] ; pulse_generator:pulse_gen|counter[4] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.001      ; 1.710      ;
; -0.676 ; pulse_generator:pulse_gen|counter[2] ; pulse_generator:pulse_gen|counter[0] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.001      ; 1.709      ;
; -0.657 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|inner_data[1]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.689      ;
; -0.657 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|inner_data[2]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.689      ;
; -0.657 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|inner_data[3]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.689      ;
; -0.657 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|inner_data[4]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.689      ;
; -0.657 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|inner_data[5]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.689      ;
; -0.657 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|inner_data[6]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.689      ;
; -0.657 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|inner_data[7]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.689      ;
; -0.657 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|inner_data[8]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.689      ;
; -0.657 ; SPI_controller:spi|bit_number[5]     ; SPI_controller:spi|inner_data[9]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.689      ;
; -0.656 ; SPI_controller:spi|bit_number[8]     ; SPI_controller:spi|bit_number[1]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.688      ;
; -0.656 ; SPI_controller:spi|bit_number[8]     ; SPI_controller:spi|bit_number[2]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.688      ;
; -0.656 ; SPI_controller:spi|bit_number[8]     ; SPI_controller:spi|bit_number[4]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.688      ;
; -0.656 ; SPI_controller:spi|bit_number[8]     ; SPI_controller:spi|bit_number[5]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.688      ;
; -0.656 ; SPI_controller:spi|bit_number[8]     ; SPI_controller:spi|bit_number[6]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.688      ;
; -0.656 ; SPI_controller:spi|bit_number[8]     ; SPI_controller:spi|bit_number[7]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.688      ;
; -0.656 ; SPI_controller:spi|bit_number[8]     ; SPI_controller:spi|bit_number[8]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.688      ;
; -0.656 ; SPI_controller:spi|bit_number[8]     ; SPI_controller:spi|bit_number[9]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.688      ;
; -0.656 ; SPI_controller:spi|bit_number[8]     ; SPI_controller:spi|bit_number[0]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.688      ;
; -0.656 ; SPI_controller:spi|bit_number[8]     ; SPI_controller:spi|bit_number[3]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.688      ;
; -0.654 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|bit_number[1]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.686      ;
; -0.654 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|bit_number[2]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.686      ;
; -0.654 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|bit_number[4]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.686      ;
; -0.654 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|bit_number[5]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.686      ;
; -0.654 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|bit_number[6]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.686      ;
; -0.654 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|bit_number[7]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.686      ;
; -0.654 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|bit_number[8]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.686      ;
; -0.654 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|bit_number[9]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.686      ;
; -0.654 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|bit_number[0]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.686      ;
; -0.654 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|bit_number[3]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.686      ;
; -0.644 ; pulse_generator:pulse_gen|counter[3] ; pulse_generator:pulse_gen|counter[4] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.001      ; 1.677      ;
; -0.643 ; pulse_generator:pulse_gen|counter[3] ; pulse_generator:pulse_gen|counter[0] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.001      ; 1.676      ;
; -0.642 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|inner_data[1]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.674      ;
; -0.642 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|inner_data[2]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.674      ;
; -0.642 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|inner_data[3]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.674      ;
; -0.642 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|inner_data[4]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.674      ;
; -0.642 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|inner_data[5]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.674      ;
; -0.642 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|inner_data[6]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.674      ;
; -0.642 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|inner_data[7]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.674      ;
; -0.642 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|inner_data[8]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.674      ;
; -0.642 ; SPI_controller:spi|bit_number[4]     ; SPI_controller:spi|inner_data[9]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.674      ;
; -0.636 ; pulse_generator:pulse_gen|counter[1] ; pulse_generator:pulse_gen|counter[4] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.001      ; 1.669      ;
; -0.635 ; pulse_generator:pulse_gen|counter[1] ; pulse_generator:pulse_gen|counter[0] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.001      ; 1.668      ;
; -0.608 ; pulse_generator:pulse_gen|counter[4] ; pulse_generator:pulse_gen|counter[4] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.640      ;
; -0.607 ; pulse_generator:pulse_gen|counter[4] ; pulse_generator:pulse_gen|counter[0] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.639      ;
; -0.599 ; SPI_controller:spi|bit_number[6]     ; SPI_controller:spi|bit_number[1]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.631      ;
; -0.599 ; SPI_controller:spi|bit_number[6]     ; SPI_controller:spi|bit_number[2]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.631      ;
; -0.599 ; SPI_controller:spi|bit_number[6]     ; SPI_controller:spi|bit_number[4]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.631      ;
; -0.599 ; SPI_controller:spi|bit_number[6]     ; SPI_controller:spi|bit_number[5]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.631      ;
; -0.599 ; SPI_controller:spi|bit_number[6]     ; SPI_controller:spi|bit_number[6]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.631      ;
; -0.599 ; SPI_controller:spi|bit_number[6]     ; SPI_controller:spi|bit_number[7]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.631      ;
; -0.599 ; SPI_controller:spi|bit_number[6]     ; SPI_controller:spi|bit_number[8]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.631      ;
; -0.599 ; SPI_controller:spi|bit_number[6]     ; SPI_controller:spi|bit_number[9]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.631      ;
; -0.599 ; SPI_controller:spi|bit_number[6]     ; SPI_controller:spi|bit_number[0]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.631      ;
; -0.599 ; SPI_controller:spi|bit_number[6]     ; SPI_controller:spi|bit_number[3]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.631      ;
; -0.573 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|inner_data[1]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.605      ;
; -0.573 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|inner_data[2]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.605      ;
; -0.573 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|inner_data[3]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.605      ;
; -0.573 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|inner_data[4]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.605      ;
; -0.573 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|inner_data[5]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.605      ;
; -0.573 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|inner_data[6]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.605      ;
; -0.573 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|inner_data[7]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.605      ;
; -0.573 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|inner_data[8]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.605      ;
; -0.573 ; SPI_controller:spi|bit_number[7]     ; SPI_controller:spi|inner_data[9]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.605      ;
; -0.552 ; SPI_controller:spi|bit_number[1]     ; SPI_controller:spi|bit_number[1]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.584      ;
; -0.552 ; SPI_controller:spi|bit_number[1]     ; SPI_controller:spi|bit_number[2]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.584      ;
; -0.552 ; SPI_controller:spi|bit_number[1]     ; SPI_controller:spi|bit_number[4]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.584      ;
; -0.552 ; SPI_controller:spi|bit_number[1]     ; SPI_controller:spi|bit_number[5]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.584      ;
; -0.552 ; SPI_controller:spi|bit_number[1]     ; SPI_controller:spi|bit_number[6]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.584      ;
; -0.552 ; SPI_controller:spi|bit_number[1]     ; SPI_controller:spi|bit_number[7]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.584      ;
; -0.552 ; SPI_controller:spi|bit_number[1]     ; SPI_controller:spi|bit_number[8]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.584      ;
; -0.552 ; SPI_controller:spi|bit_number[1]     ; SPI_controller:spi|bit_number[9]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.584      ;
; -0.552 ; SPI_controller:spi|bit_number[1]     ; SPI_controller:spi|bit_number[0]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.584      ;
; -0.552 ; SPI_controller:spi|bit_number[1]     ; SPI_controller:spi|bit_number[3]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.584      ;
; -0.533 ; SPI_controller:spi|bit_number[9]     ; SPI_controller:spi|bit_number[1]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.565      ;
; -0.533 ; SPI_controller:spi|bit_number[9]     ; SPI_controller:spi|bit_number[2]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.565      ;
; -0.533 ; SPI_controller:spi|bit_number[9]     ; SPI_controller:spi|bit_number[4]     ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.000      ; 1.565      ;
+--------+--------------------------------------+--------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clk'                                                                                                                                                   ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                         ; To Node                           ; Launch Clock                      ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+
; -0.347 ; clk_divider:divider|counter[0]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.379      ;
; -0.304 ; clk_divider:divider|counter[1]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.336      ;
; -0.298 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.330      ;
; -0.293 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.325      ;
; -0.255 ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.287      ;
; -0.250 ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.282      ;
; -0.219 ; clk_divider:divider|counter[2]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.251      ;
; -0.170 ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.202      ;
; -0.165 ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.197      ;
; -0.129 ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.161      ;
; -0.128 ; clk_divider:divider|counter[3]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.160      ;
; -0.124 ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.156      ;
; -0.113 ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.145      ;
; -0.112 ; clk_divider:divider|counter[5]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.144      ;
; -0.108 ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.140      ;
; -0.089 ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.121      ;
; -0.088 ; clk_divider:divider|counter[4]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.120      ;
; -0.084 ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.116      ;
; -0.036 ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.068      ;
; -0.035 ; clk_divider:divider|counter[6]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.067      ;
; -0.031 ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.063      ;
; 0.088  ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.944      ;
; 0.089  ; clk_divider:divider|counter[7]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.943      ;
; 0.093  ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.939      ;
; 0.106  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.926      ;
; 0.141  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.891      ;
; 0.149  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.883      ;
; 0.176  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.856      ;
; 0.184  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.848      ;
; 0.219  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.813      ;
; 0.234  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.798      ;
; 0.246  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.786      ;
; 0.257  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.775      ;
; 0.269  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.763      ;
; 0.275  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.757      ;
; 0.289  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.743      ;
; 0.292  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.740      ;
; 0.304  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.728      ;
; 0.307  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.725      ;
; 0.310  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.722      ;
; 0.315  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.717      ;
; 0.345  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.687      ;
; 0.350  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.682      ;
; 0.374  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.658      ;
; 0.375  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.657      ;
; 0.385  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.647      ;
; 0.431  ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.601      ;
; 0.432  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.600      ;
; 0.445  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.587      ;
; 0.515  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.517      ;
; 0.517  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.515      ;
; 0.518  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.514      ;
; 1.819  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk         ; 0.500        ; 1.513      ; 0.367      ;
; 2.319  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk         ; 1.000        ; 1.513      ; 0.367      ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clk'                                                                                                                                                    ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                         ; To Node                           ; Launch Clock                      ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+
; -1.439 ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk         ; 0.000        ; 1.513      ; 0.367      ;
; -0.939 ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk         ; -0.500       ; 1.513      ; 0.367      ;
; 0.362  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.514      ;
; 0.363  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.515      ;
; 0.365  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.517      ;
; 0.435  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.587      ;
; 0.448  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.600      ;
; 0.449  ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.601      ;
; 0.495  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.647      ;
; 0.505  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.657      ;
; 0.506  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.658      ;
; 0.530  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.682      ;
; 0.535  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.687      ;
; 0.565  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.717      ;
; 0.570  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.722      ;
; 0.573  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.725      ;
; 0.576  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.728      ;
; 0.588  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.740      ;
; 0.591  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.743      ;
; 0.605  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.757      ;
; 0.611  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.763      ;
; 0.623  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.775      ;
; 0.634  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.786      ;
; 0.646  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.798      ;
; 0.661  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.813      ;
; 0.665  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.817      ;
; 0.681  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.833      ;
; 0.696  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.848      ;
; 0.704  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.856      ;
; 0.731  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.883      ;
; 0.739  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.891      ;
; 0.774  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.926      ;
; 0.787  ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.939      ;
; 0.791  ; clk_divider:divider|counter[7]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.943      ;
; 0.792  ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.944      ;
; 0.808  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.960      ;
; 0.820  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.972      ;
; 0.823  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.975      ;
; 0.835  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.987      ;
; 0.839  ; clk_divider:divider|counter[6]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.991      ;
; 0.840  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.992      ;
; 0.843  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.995      ;
; 0.847  ; clk_divider:divider|counter[4]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.999      ;
; 0.849  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.001      ;
; 0.883  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.035      ;
; 0.892  ; clk_divider:divider|counter[1]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.044      ;
; 0.912  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.064      ;
; 0.917  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.069      ;
; 0.921  ; clk_divider:divider|counter[5]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.073      ;
; 0.922  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.074      ;
; 0.947  ; clk_divider:divider|counter[3]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.099      ;
; 0.955  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.107      ;
; 0.975  ; clk_divider:divider|counter[2]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.127      ;
; 1.024  ; clk_divider:divider|counter[0]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.176      ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clk_divider:divider|out_clk_inner'                                                                                                                                                   ;
+-------+---------------------------------------+---------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+
; Slack ; From Node                             ; To Node                               ; Launch Clock                      ; Latch Clock                       ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------------------------------+---------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+
; 0.215 ; SPI_controller:spi|start              ; SPI_controller:spi|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; SPI_controller:spi|clk_sync           ; SPI_controller:spi|clk_sync           ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.367      ;
; 0.239 ; SPI_controller:spi|inner_data[6]      ; SPI_controller:spi|inner_data[7]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.391      ;
; 0.240 ; SPI_controller:spi|inner_data[3]      ; SPI_controller:spi|inner_data[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.392      ;
; 0.243 ; pulse_generator:pulse_gen|counter[14] ; pulse_generator:pulse_gen|counter[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.395      ;
; 0.285 ; SPI_controller:spi|clk_sync           ; SPI_controller:spi|inner_data[9]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.437      ;
; 0.287 ; SPI_controller:spi|clk_sync           ; SPI_controller:spi|inner_data[6]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.439      ;
; 0.295 ; SPI_controller:spi|inner_data[5]      ; SPI_controller:spi|inner_data[6]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.447      ;
; 0.358 ; pulse_generator:pulse_gen|counter[7]  ; pulse_generator:pulse_gen|counter[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.510      ;
; 0.358 ; pulse_generator:pulse_gen|counter[11] ; pulse_generator:pulse_gen|counter[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.510      ;
; 0.358 ; pulse_generator:pulse_gen|counter[9]  ; pulse_generator:pulse_gen|counter[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.510      ;
; 0.361 ; SPI_controller:spi|bit_number[4]      ; SPI_controller:spi|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.513      ;
; 0.361 ; pulse_generator:pulse_gen|counter[13] ; pulse_generator:pulse_gen|counter[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.513      ;
; 0.363 ; SPI_controller:spi|inner_data[8]      ; SPI_controller:spi|inner_data[9]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.515      ;
; 0.367 ; SPI_controller:spi|bit_number[2]      ; SPI_controller:spi|bit_number[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.519      ;
; 0.371 ; pulse_generator:pulse_gen|counter[5]  ; pulse_generator:pulse_gen|counter[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.523      ;
; 0.371 ; pulse_generator:pulse_gen|counter[8]  ; pulse_generator:pulse_gen|counter[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.523      ;
; 0.371 ; pulse_generator:pulse_gen|counter[10] ; pulse_generator:pulse_gen|counter[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.523      ;
; 0.371 ; SPI_controller:spi|inner_data[2]      ; SPI_controller:spi|inner_data[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.523      ;
; 0.372 ; SPI_controller:spi|bit_number[1]      ; SPI_controller:spi|bit_number[1]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.524      ;
; 0.372 ; pulse_generator:pulse_gen|counter[6]  ; pulse_generator:pulse_gen|counter[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.524      ;
; 0.372 ; pulse_generator:pulse_gen|counter[12] ; pulse_generator:pulse_gen|counter[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.524      ;
; 0.373 ; SPI_controller:spi|inner_data[1]      ; SPI_controller:spi|inner_data[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.525      ;
; 0.374 ; SPI_controller:spi|bit_number[0]      ; SPI_controller:spi|bit_number[0]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.526      ;
; 0.374 ; SPI_controller:spi|inner_data[4]      ; SPI_controller:spi|inner_data[5]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.526      ;
; 0.376 ; SPI_controller:spi|bit_number[7]      ; SPI_controller:spi|bit_number[7]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.528      ;
; 0.376 ; SPI_controller:spi|bit_number[3]      ; SPI_controller:spi|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.528      ;
; 0.380 ; SPI_controller:spi|inner_data[7]      ; SPI_controller:spi|inner_data[8]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.532      ;
; 0.396 ; SPI_controller:spi|clk_sync           ; SPI_controller:spi|inner_data[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.548      ;
; 0.399 ; SPI_controller:spi|clk_sync           ; SPI_controller:spi|inner_data[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.551      ;
; 0.401 ; SPI_controller:spi|clk_sync           ; SPI_controller:spi|inner_data[8]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.553      ;
; 0.405 ; SPI_controller:spi|clk_sync           ; SPI_controller:spi|inner_data[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.557      ;
; 0.406 ; SPI_controller:spi|clk_sync           ; SPI_controller:spi|inner_data[7]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.558      ;
; 0.407 ; pulse_generator:pulse_gen|counter[0]  ; pulse_generator:pulse_gen|start       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.559      ;
; 0.407 ; SPI_controller:spi|clk_sync           ; SPI_controller:spi|inner_data[5]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.559      ;
; 0.409 ; SPI_controller:spi|clk_sync           ; SPI_controller:spi|inner_data[1]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.561      ;
; 0.438 ; pulse_generator:pulse_gen|counter[2]  ; pulse_generator:pulse_gen|counter[2]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.590      ;
; 0.440 ; SPI_controller:spi|bit_number[5]      ; SPI_controller:spi|bit_number[5]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.592      ;
; 0.440 ; pulse_generator:pulse_gen|counter[3]  ; pulse_generator:pulse_gen|counter[3]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.592      ;
; 0.453 ; SPI_controller:spi|bit_number[6]      ; SPI_controller:spi|bit_number[6]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.605      ;
; 0.458 ; SPI_controller:spi|bit_number[8]      ; SPI_controller:spi|bit_number[8]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.610      ;
; 0.459 ; SPI_controller:spi|bit_number[9]      ; SPI_controller:spi|bit_number[9]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.611      ;
; 0.460 ; SPI_controller:spi|inner_data[0]      ; SPI_controller:spi|inner_data[1]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.612      ;
; 0.463 ; SPI_controller:spi|clk_sync           ; SPI_controller:spi|inner_data[0]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.615      ;
; 0.481 ; SPI_controller:spi|inner_data[0]      ; SPI_controller:spi|inner_data[0]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.633      ;
; 0.496 ; pulse_generator:pulse_gen|counter[9]  ; pulse_generator:pulse_gen|counter[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.648      ;
; 0.496 ; pulse_generator:pulse_gen|counter[11] ; pulse_generator:pulse_gen|counter[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.648      ;
; 0.499 ; pulse_generator:pulse_gen|counter[13] ; pulse_generator:pulse_gen|counter[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.651      ;
; 0.499 ; SPI_controller:spi|bit_number[4]      ; SPI_controller:spi|bit_number[5]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.651      ;
; 0.500 ; pulse_generator:pulse_gen|counter[1]  ; pulse_generator:pulse_gen|counter[2]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.652      ;
; 0.511 ; pulse_generator:pulse_gen|counter[10] ; pulse_generator:pulse_gen|counter[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.663      ;
; 0.511 ; pulse_generator:pulse_gen|counter[8]  ; pulse_generator:pulse_gen|counter[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.663      ;
; 0.511 ; pulse_generator:pulse_gen|counter[5]  ; pulse_generator:pulse_gen|counter[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.663      ;
; 0.512 ; pulse_generator:pulse_gen|counter[6]  ; pulse_generator:pulse_gen|counter[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.664      ;
; 0.512 ; pulse_generator:pulse_gen|counter[12] ; pulse_generator:pulse_gen|counter[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.664      ;
; 0.512 ; SPI_controller:spi|bit_number[1]      ; SPI_controller:spi|bit_number[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.664      ;
; 0.514 ; SPI_controller:spi|bit_number[0]      ; SPI_controller:spi|bit_number[1]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.666      ;
; 0.516 ; SPI_controller:spi|bit_number[3]      ; SPI_controller:spi|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.668      ;
; 0.516 ; SPI_controller:spi|bit_number[7]      ; SPI_controller:spi|bit_number[8]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.668      ;
; 0.531 ; pulse_generator:pulse_gen|counter[9]  ; pulse_generator:pulse_gen|counter[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.683      ;
; 0.531 ; pulse_generator:pulse_gen|counter[11] ; pulse_generator:pulse_gen|counter[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.683      ;
; 0.534 ; SPI_controller:spi|bit_number[4]      ; SPI_controller:spi|bit_number[6]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.686      ;
; 0.535 ; pulse_generator:pulse_gen|counter[1]  ; pulse_generator:pulse_gen|counter[3]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.687      ;
; 0.539 ; pulse_generator:pulse_gen|counter[3]  ; pulse_generator:pulse_gen|start       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.001      ; 0.692      ;
; 0.543 ; pulse_generator:pulse_gen|counter[4]  ; pulse_generator:pulse_gen|start       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.695      ;
; 0.546 ; pulse_generator:pulse_gen|counter[8]  ; pulse_generator:pulse_gen|counter[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.698      ;
; 0.546 ; pulse_generator:pulse_gen|counter[10] ; pulse_generator:pulse_gen|counter[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.698      ;
; 0.546 ; pulse_generator:pulse_gen|counter[5]  ; pulse_generator:pulse_gen|counter[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.698      ;
; 0.547 ; pulse_generator:pulse_gen|counter[12] ; pulse_generator:pulse_gen|counter[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.699      ;
; 0.549 ; SPI_controller:spi|bit_number[0]      ; SPI_controller:spi|bit_number[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.701      ;
; 0.551 ; pulse_generator:pulse_gen|counter[7]  ; pulse_generator:pulse_gen|counter[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.703      ;
; 0.551 ; SPI_controller:spi|bit_number[7]      ; SPI_controller:spi|bit_number[9]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.703      ;
; 0.551 ; SPI_controller:spi|bit_number[3]      ; SPI_controller:spi|bit_number[5]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.703      ;
; 0.560 ; SPI_controller:spi|bit_number[2]      ; SPI_controller:spi|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.712      ;
; 0.566 ; pulse_generator:pulse_gen|counter[9]  ; pulse_generator:pulse_gen|counter[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.718      ;
; 0.566 ; pulse_generator:pulse_gen|counter[11] ; pulse_generator:pulse_gen|counter[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.718      ;
; 0.569 ; SPI_controller:spi|bit_number[4]      ; SPI_controller:spi|bit_number[7]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.721      ;
; 0.576 ; pulse_generator:pulse_gen|counter[2]  ; pulse_generator:pulse_gen|counter[3]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.728      ;
; 0.577 ; SPI_controller:spi|bit_number[3]      ; SPI_controller:spi|clk_sync           ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.729      ;
; 0.577 ; pulse_generator:pulse_gen|counter[4]  ; pulse_generator:pulse_gen|counter[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.001     ; 0.728      ;
; 0.578 ; SPI_controller:spi|bit_number[5]      ; SPI_controller:spi|bit_number[6]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.730      ;
; 0.581 ; pulse_generator:pulse_gen|counter[8]  ; pulse_generator:pulse_gen|counter[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.733      ;
; 0.581 ; pulse_generator:pulse_gen|counter[10] ; pulse_generator:pulse_gen|counter[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.733      ;
; 0.586 ; pulse_generator:pulse_gen|counter[7]  ; pulse_generator:pulse_gen|counter[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.738      ;
; 0.586 ; SPI_controller:spi|bit_number[3]      ; SPI_controller:spi|bit_number[6]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.738      ;
; 0.593 ; SPI_controller:spi|bit_number[6]      ; SPI_controller:spi|bit_number[7]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.745      ;
; 0.595 ; SPI_controller:spi|bit_number[2]      ; SPI_controller:spi|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.747      ;
; 0.598 ; SPI_controller:spi|bit_number[8]      ; SPI_controller:spi|bit_number[9]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.750      ;
; 0.601 ; pulse_generator:pulse_gen|counter[9]  ; pulse_generator:pulse_gen|counter[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.753      ;
; 0.604 ; pulse_generator:pulse_gen|counter[0]  ; pulse_generator:pulse_gen|counter[2]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.001     ; 0.755      ;
; 0.604 ; SPI_controller:spi|bit_number[4]      ; SPI_controller:spi|bit_number[8]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.756      ;
; 0.605 ; pulse_generator:pulse_gen|counter[1]  ; pulse_generator:pulse_gen|counter[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.757      ;
; 0.606 ; pulse_generator:pulse_gen|counter[6]  ; pulse_generator:pulse_gen|counter[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.758      ;
; 0.606 ; SPI_controller:spi|bit_number[1]      ; SPI_controller:spi|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.758      ;
; 0.607 ; pulse_generator:pulse_gen|counter[8]  ; pulse_generator:pulse_gen|start       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.001      ; 0.760      ;
; 0.612 ; pulse_generator:pulse_gen|counter[4]  ; pulse_generator:pulse_gen|counter[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.001     ; 0.763      ;
; 0.613 ; SPI_controller:spi|bit_number[5]      ; SPI_controller:spi|bit_number[7]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.765      ;
; 0.613 ; pulse_generator:pulse_gen|counter[3]  ; pulse_generator:pulse_gen|counter[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.765      ;
; 0.616 ; pulse_generator:pulse_gen|counter[8]  ; pulse_generator:pulse_gen|counter[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.768      ;
; 0.616 ; pulse_generator:pulse_gen|counter[10] ; pulse_generator:pulse_gen|counter[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.768      ;
+-------+---------------------------------------+---------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clk'                                                                              ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                            ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------------+
; -1.222 ; 1.000        ; 2.222          ; Port Rate        ; clk   ; Rise       ; clk                               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[0]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[0]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[1]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[1]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[2]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[2]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[3]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[3]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[4]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[4]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[5]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[5]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[6]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[6]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[7]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[7]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|out_clk_inner ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|out_clk_inner ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk|combout                       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk|combout                       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|inclk[0]              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|inclk[0]              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|outclk                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|outclk                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[2]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[2]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[3]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[3]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[4]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[4]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[5]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[5]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[6]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[6]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[7]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[7]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|out_clk_inner|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|out_clk_inner|clk         ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clk_divider:divider|out_clk_inner'                                                                                 ;
+--------+--------------+----------------+------------------+-----------------------------------+------------+----------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock                             ; Clock Edge ; Target                                 ;
+--------+--------------+----------------+------------------+-----------------------------------+------------+----------------------------------------+
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[0]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[0]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[1]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[1]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[2]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[2]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[3]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[3]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[4]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[4]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[5]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[5]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[6]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[6]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[7]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[7]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[8]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[8]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[9]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|bit_number[9]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|clk_sync            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|clk_sync            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[0]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[0]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[1]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[1]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[2]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[2]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[3]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[3]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[4]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[4]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[5]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[5]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[6]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[6]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[7]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[7]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[8]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[8]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[9]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:spi|inner_data[9]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:spi|start               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:spi|start               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[0]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[0]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[10]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[10]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[11]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[11]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[12]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[12]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[13]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[13]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[14]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[14]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[1]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[1]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[2]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[2]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[3]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[3]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[4]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[4]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[5]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[5]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[6]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[6]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[7]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[7]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[8]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[8]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[9]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|counter[9]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|start        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; pulse_generator:pulse_gen|start        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner|regout           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner|regout           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[0]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[0]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[10]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[10]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[11]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[11]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[12]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[12]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[13]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[13]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[14]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[14]|clk              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[1]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[1]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[2]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[2]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[3]|clk               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; pulse_gen|counter[3]|clk               ;
+--------+--------------+----------------+------------------+-----------------------------------+------------+----------------------------------------+


+----------------------------------------------------------------------------------------------------------------+
; Setup Times                                                                                                    ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; Data Port ; Clock Port                        ; Rise  ; Fall  ; Clock Edge ; Clock Reference                   ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; data[*]   ; clk_divider:divider|out_clk_inner ; 2.562 ; 2.562 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[0]  ; clk_divider:divider|out_clk_inner ; 2.553 ; 2.553 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[1]  ; clk_divider:divider|out_clk_inner ; 2.562 ; 2.562 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[2]  ; clk_divider:divider|out_clk_inner ; 2.480 ; 2.480 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[3]  ; clk_divider:divider|out_clk_inner ; 2.383 ; 2.383 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[4]  ; clk_divider:divider|out_clk_inner ; 2.379 ; 2.379 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[5]  ; clk_divider:divider|out_clk_inner ; 2.380 ; 2.380 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[6]  ; clk_divider:divider|out_clk_inner ; 2.453 ; 2.453 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[7]  ; clk_divider:divider|out_clk_inner ; 2.483 ; 2.483 ; Fall       ; clk_divider:divider|out_clk_inner ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+


+------------------------------------------------------------------------------------------------------------------+
; Hold Times                                                                                                       ;
+-----------+-----------------------------------+--------+--------+------------+-----------------------------------+
; Data Port ; Clock Port                        ; Rise   ; Fall   ; Clock Edge ; Clock Reference                   ;
+-----------+-----------------------------------+--------+--------+------------+-----------------------------------+
; data[*]   ; clk_divider:divider|out_clk_inner ; -2.259 ; -2.259 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[0]  ; clk_divider:divider|out_clk_inner ; -2.433 ; -2.433 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[1]  ; clk_divider:divider|out_clk_inner ; -2.442 ; -2.442 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[2]  ; clk_divider:divider|out_clk_inner ; -2.360 ; -2.360 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[3]  ; clk_divider:divider|out_clk_inner ; -2.263 ; -2.263 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[4]  ; clk_divider:divider|out_clk_inner ; -2.259 ; -2.259 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[5]  ; clk_divider:divider|out_clk_inner ; -2.260 ; -2.260 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[6]  ; clk_divider:divider|out_clk_inner ; -2.333 ; -2.333 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[7]  ; clk_divider:divider|out_clk_inner ; -2.363 ; -2.363 ; Fall       ; clk_divider:divider|out_clk_inner ;
+-----------+-----------------------------------+--------+--------+------------+-----------------------------------+


+----------------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                          ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; Data Port ; Clock Port                        ; Rise  ; Fall  ; Clock Edge ; Clock Reference                   ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; sck       ; clk_divider:divider|out_clk_inner ; 3.056 ;       ; Rise       ; clk_divider:divider|out_clk_inner ;
; ss        ; clk_divider:divider|out_clk_inner ; 3.664 ; 3.664 ; Rise       ; clk_divider:divider|out_clk_inner ;
; mosi      ; clk_divider:divider|out_clk_inner ; 3.972 ; 3.972 ; Fall       ; clk_divider:divider|out_clk_inner ;
; sck       ; clk_divider:divider|out_clk_inner ; 4.093 ; 4.093 ; Fall       ; clk_divider:divider|out_clk_inner ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+


+----------------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                                  ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; Data Port ; Clock Port                        ; Rise  ; Fall  ; Clock Edge ; Clock Reference                   ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; sck       ; clk_divider:divider|out_clk_inner ; 3.056 ;       ; Rise       ; clk_divider:divider|out_clk_inner ;
; ss        ; clk_divider:divider|out_clk_inner ; 3.664 ; 3.664 ; Rise       ; clk_divider:divider|out_clk_inner ;
; mosi      ; clk_divider:divider|out_clk_inner ; 3.955 ; 3.955 ; Fall       ; clk_divider:divider|out_clk_inner ;
; sck       ; clk_divider:divider|out_clk_inner ; 4.093 ; 3.056 ; Fall       ; clk_divider:divider|out_clk_inner ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+


+---------------------------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                                               ;
+------------------------------------+----------+--------+----------+---------+---------------------+
; Clock                              ; Setup    ; Hold   ; Recovery ; Removal ; Minimum Pulse Width ;
+------------------------------------+----------+--------+----------+---------+---------------------+
; Worst-case Slack                   ; -4.257   ; -2.598 ; N/A      ; N/A     ; -1.777              ;
;  clk                               ; -3.278   ; -2.598 ; N/A      ; N/A     ; -1.777              ;
;  clk_divider:divider|out_clk_inner ; -4.257   ; 0.215  ; N/A      ; N/A     ; -0.742              ;
; Design-wide TNS                    ; -137.342 ; -2.598 ; 0.0      ; 0.0     ; -71.525             ;
;  clk                               ; -16.441  ; -2.598 ; N/A      ; N/A     ; -15.133             ;
;  clk_divider:divider|out_clk_inner ; -120.901 ; 0.000  ; N/A      ; N/A     ; -56.392             ;
+------------------------------------+----------+--------+----------+---------+---------------------+


+----------------------------------------------------------------------------------------------------------------+
; Setup Times                                                                                                    ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; Data Port ; Clock Port                        ; Rise  ; Fall  ; Clock Edge ; Clock Reference                   ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; data[*]   ; clk_divider:divider|out_clk_inner ; 5.487 ; 5.487 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[0]  ; clk_divider:divider|out_clk_inner ; 5.487 ; 5.487 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[1]  ; clk_divider:divider|out_clk_inner ; 5.476 ; 5.476 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[2]  ; clk_divider:divider|out_clk_inner ; 5.235 ; 5.235 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[3]  ; clk_divider:divider|out_clk_inner ; 4.882 ; 4.882 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[4]  ; clk_divider:divider|out_clk_inner ; 4.869 ; 4.869 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[5]  ; clk_divider:divider|out_clk_inner ; 4.869 ; 4.869 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[6]  ; clk_divider:divider|out_clk_inner ; 5.122 ; 5.122 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[7]  ; clk_divider:divider|out_clk_inner ; 5.235 ; 5.235 ; Fall       ; clk_divider:divider|out_clk_inner ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+


+------------------------------------------------------------------------------------------------------------------+
; Hold Times                                                                                                       ;
+-----------+-----------------------------------+--------+--------+------------+-----------------------------------+
; Data Port ; Clock Port                        ; Rise   ; Fall   ; Clock Edge ; Clock Reference                   ;
+-----------+-----------------------------------+--------+--------+------------+-----------------------------------+
; data[*]   ; clk_divider:divider|out_clk_inner ; -2.259 ; -2.259 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[0]  ; clk_divider:divider|out_clk_inner ; -2.433 ; -2.433 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[1]  ; clk_divider:divider|out_clk_inner ; -2.442 ; -2.442 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[2]  ; clk_divider:divider|out_clk_inner ; -2.360 ; -2.360 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[3]  ; clk_divider:divider|out_clk_inner ; -2.263 ; -2.263 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[4]  ; clk_divider:divider|out_clk_inner ; -2.259 ; -2.259 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[5]  ; clk_divider:divider|out_clk_inner ; -2.260 ; -2.260 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[6]  ; clk_divider:divider|out_clk_inner ; -2.333 ; -2.333 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  data[7]  ; clk_divider:divider|out_clk_inner ; -2.363 ; -2.363 ; Fall       ; clk_divider:divider|out_clk_inner ;
+-----------+-----------------------------------+--------+--------+------------+-----------------------------------+


+----------------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                          ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; Data Port ; Clock Port                        ; Rise  ; Fall  ; Clock Edge ; Clock Reference                   ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; sck       ; clk_divider:divider|out_clk_inner ; 7.913 ;       ; Rise       ; clk_divider:divider|out_clk_inner ;
; ss        ; clk_divider:divider|out_clk_inner ; 8.116 ; 8.116 ; Rise       ; clk_divider:divider|out_clk_inner ;
; mosi      ; clk_divider:divider|out_clk_inner ; 9.257 ; 9.257 ; Fall       ; clk_divider:divider|out_clk_inner ;
; sck       ; clk_divider:divider|out_clk_inner ; 9.747 ; 9.747 ; Fall       ; clk_divider:divider|out_clk_inner ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+


+----------------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                                  ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; Data Port ; Clock Port                        ; Rise  ; Fall  ; Clock Edge ; Clock Reference                   ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; sck       ; clk_divider:divider|out_clk_inner ; 3.056 ;       ; Rise       ; clk_divider:divider|out_clk_inner ;
; ss        ; clk_divider:divider|out_clk_inner ; 3.664 ; 3.664 ; Rise       ; clk_divider:divider|out_clk_inner ;
; mosi      ; clk_divider:divider|out_clk_inner ; 3.955 ; 3.955 ; Fall       ; clk_divider:divider|out_clk_inner ;
; sck       ; clk_divider:divider|out_clk_inner ; 4.093 ; 3.056 ; Fall       ; clk_divider:divider|out_clk_inner ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+


+-------------------------------------------------------------------------------------------------------------------+
; Setup Transfers                                                                                                   ;
+-----------------------------------+-----------------------------------+----------+----------+----------+----------+
; From Clock                        ; To Clock                          ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+-----------------------------------+-----------------------------------+----------+----------+----------+----------+
; clk                               ; clk                               ; 144      ; 0        ; 0        ; 0        ;
; clk_divider:divider|out_clk_inner ; clk                               ; 1        ; 1        ; 0        ; 0        ;
; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1        ; 11       ; 41       ; 891      ;
+-----------------------------------+-----------------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-------------------------------------------------------------------------------------------------------------------+
; Hold Transfers                                                                                                    ;
+-----------------------------------+-----------------------------------+----------+----------+----------+----------+
; From Clock                        ; To Clock                          ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+-----------------------------------+-----------------------------------+----------+----------+----------+----------+
; clk                               ; clk                               ; 144      ; 0        ; 0        ; 0        ;
; clk_divider:divider|out_clk_inner ; clk                               ; 1        ; 1        ; 0        ; 0        ;
; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1        ; 11       ; 41       ; 891      ;
+-----------------------------------+-----------------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 8     ; 8    ;
; Unconstrained Input Port Paths  ; 8     ; 8    ;
; Unconstrained Output Ports      ; 3     ; 3    ;
; Unconstrained Output Port Paths ; 5     ; 5    ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version
    Info: Processing started: Tue Sep 22 11:57:22 2020
Info: Command: quartus_sta lab1 -c lab1
Info: qsta_default_script.tcl version: #1
Info (20030): Parallel compilation is enabled and will use 2 of the 2 processors detected
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Critical Warning (332012): Synopsys Design Constraints File file not found: 'lab1.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name clk clk
    Info (332105): create_clock -period 1.000 -name clk_divider:divider|out_clk_inner clk_divider:divider|out_clk_inner
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -4.257
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -4.257      -120.901 clk_divider:divider|out_clk_inner 
    Info (332119):    -3.278       -16.441 clk 
Info (332146): Worst-case hold slack is -2.598
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.598        -2.598 clk 
    Info (332119):     0.499         0.000 clk_divider:divider|out_clk_inner 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.777
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.777       -15.133 clk 
    Info (332119):    -0.742       -56.392 clk_divider:divider|out_clk_inner 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -0.740
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.740       -16.767 clk_divider:divider|out_clk_inner 
    Info (332119):    -0.347        -0.938 clk 
Info (332146): Worst-case hold slack is -1.439
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.439        -1.439 clk 
    Info (332119):     0.215         0.000 clk_divider:divider|out_clk_inner 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.222
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.222       -10.222 clk 
    Info (332119):    -0.500       -38.000 clk_divider:divider|out_clk_inner 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 3 warnings
    Info: Peak virtual memory: 4579 megabytes
    Info: Processing ended: Tue Sep 22 11:57:23 2020
    Info: Elapsed time: 00:00:01
    Info: Total CPU time (on all processors): 00:00:01


