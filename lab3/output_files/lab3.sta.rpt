TimeQuest Timing Analyzer report for lab3
Wed Oct 07 00:50:19 2020
Quartus II 64-Bit Version 12.1 Build 243 01/31/2013 Service Pack 1 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'clk_divider:divider|out_clk_inner'
 12. Slow Model Setup: 'clk'
 13. Slow Model Hold: 'clk'
 14. Slow Model Hold: 'clk_divider:divider|out_clk_inner'
 15. Slow Model Minimum Pulse Width: 'clk'
 16. Slow Model Minimum Pulse Width: 'clk_divider:divider|out_clk_inner'
 17. Setup Times
 18. Hold Times
 19. Clock to Output Times
 20. Minimum Clock to Output Times
 21. Fast Model Setup Summary
 22. Fast Model Hold Summary
 23. Fast Model Recovery Summary
 24. Fast Model Removal Summary
 25. Fast Model Minimum Pulse Width Summary
 26. Fast Model Setup: 'clk_divider:divider|out_clk_inner'
 27. Fast Model Setup: 'clk'
 28. Fast Model Hold: 'clk'
 29. Fast Model Hold: 'clk_divider:divider|out_clk_inner'
 30. Fast Model Minimum Pulse Width: 'clk'
 31. Fast Model Minimum Pulse Width: 'clk_divider:divider|out_clk_inner'
 32. Setup Times
 33. Hold Times
 34. Clock to Output Times
 35. Minimum Clock to Output Times
 36. Multicorner Timing Analysis Summary
 37. Setup Times
 38. Hold Times
 39. Clock to Output Times
 40. Minimum Clock to Output Times
 41. Setup Transfers
 42. Hold Transfers
 43. Report TCCS
 44. Report RSKM
 45. Unconstrained Paths
 46. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2012 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+--------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                    ;
+--------------------+-----------------------------------------------------------------+
; Quartus II Version ; Version 12.1 Build 243 01/31/2013 Service Pack 1 SJ Web Edition ;
; Revision Name      ; lab3                                                            ;
; Device Family      ; Cyclone II                                                      ;
; Device Name        ; EP2C5Q208C8                                                     ;
; Timing Models      ; Final                                                           ;
; Delay Model        ; Combined                                                        ;
; Rise/Fall Delays   ; Unavailable                                                     ;
+--------------------+-----------------------------------------------------------------+


+------------------------------------------+
; Parallel Compilation                     ;
+----------------------------+-------------+
; Processors                 ; Number      ;
+----------------------------+-------------+
; Number detected on machine ; 8           ;
; Maximum allowed            ; 4           ;
;                            ;             ;
; Average used               ; 1.00        ;
; Maximum used               ; 4           ;
;                            ;             ;
; Usage by Processor         ; % Time Used ;
;     1 processor            ; 100.0%      ;
;     2-4 processors         ; < 0.1%      ;
;     5-8 processors         ;   0.0%      ;
+----------------------------+-------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                                                                               ;
+-----------------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------------------------------------+
; Clock Name                        ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets                               ;
+-----------------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------------------------------------+
; clk                               ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clk }                               ;
; clk_divider:divider|out_clk_inner ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clk_divider:divider|out_clk_inner } ;
+-----------------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------------------------------------+


+-------------------------------------------------------------------------+
; Slow Model Fmax Summary                                                 ;
+------------+-----------------+-----------------------------------+------+
; Fmax       ; Restricted Fmax ; Clock Name                        ; Note ;
+------------+-----------------+-----------------------------------+------+
; 116.97 MHz ; 116.97 MHz      ; clk_divider:divider|out_clk_inner ;      ;
; 243.84 MHz ; 243.84 MHz      ; clk                               ;      ;
+------------+-----------------+-----------------------------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+------------------------------------------------------------+
; Slow Model Setup Summary                                   ;
+-----------------------------------+--------+---------------+
; Clock                             ; Slack  ; End Point TNS ;
+-----------------------------------+--------+---------------+
; clk_divider:divider|out_clk_inner ; -7.549 ; -185.306      ;
; clk                               ; -3.101 ; -14.657       ;
+-----------------------------------+--------+---------------+


+------------------------------------------------------------+
; Slow Model Hold Summary                                    ;
+-----------------------------------+--------+---------------+
; Clock                             ; Slack  ; End Point TNS ;
+-----------------------------------+--------+---------------+
; clk                               ; -2.597 ; -2.597        ;
; clk_divider:divider|out_clk_inner ; 0.499  ; 0.000         ;
+-----------------------------------+--------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+------------------------------------------------------------+
; Slow Model Minimum Pulse Width Summary                     ;
+-----------------------------------+--------+---------------+
; Clock                             ; Slack  ; End Point TNS ;
+-----------------------------------+--------+---------------+
; clk                               ; -1.941 ; -15.297       ;
; clk_divider:divider|out_clk_inner ; -0.742 ; -63.812       ;
+-----------------------------------+--------+---------------+


+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clk_divider:divider|out_clk_inner'                                                                                                                                                    ;
+--------+-------------------------------------+------------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+
; Slack  ; From Node                           ; To Node                                  ; Launch Clock                      ; Latch Clock                       ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------------------+------------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+
; -7.549 ; SPI_controller:my_SPI|table_num[6]  ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 8.609      ;
; -7.451 ; SPI_controller:my_SPI|table_num[5]  ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 8.511      ;
; -7.310 ; SPI_controller:my_SPI|table_num[7]  ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 8.370      ;
; -7.247 ; SPI_controller:my_SPI|table_num[4]  ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 8.307      ;
; -7.242 ; SPI_controller:my_SPI|table_num[3]  ; SPI_controller:my_SPI|input_register[2]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 8.302      ;
; -7.225 ; SPI_controller:my_SPI|table_num[1]  ; SPI_controller:my_SPI|input_register[2]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 8.285      ;
; -7.197 ; SPI_controller:my_SPI|table_num[4]  ; SPI_controller:my_SPI|input_register[3]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 8.257      ;
; -7.188 ; SPI_controller:my_SPI|table_num[3]  ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 8.248      ;
; -7.166 ; SPI_controller:my_SPI|table_num[0]  ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.022      ; 8.228      ;
; -7.163 ; SPI_controller:my_SPI|table_num[2]  ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 8.223      ;
; -7.162 ; SPI_controller:my_SPI|table_num[5]  ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 8.222      ;
; -7.084 ; SPI_controller:my_SPI|table_num[5]  ; SPI_controller:my_SPI|input_register[3]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 8.144      ;
; -7.083 ; SPI_controller:my_SPI|table_num[6]  ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 8.143      ;
; -7.073 ; SPI_controller:my_SPI|table_num[5]  ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 8.133      ;
; -7.027 ; SPI_controller:my_SPI|table_num[4]  ; SPI_controller:my_SPI|input_register[2]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 8.087      ;
; -7.027 ; SPI_controller:my_SPI|table_num[3]  ; SPI_controller:my_SPI|input_register[3]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 8.087      ;
; -7.023 ; SPI_controller:my_SPI|table_num[6]  ; SPI_controller:my_SPI|input_register[3]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 8.083      ;
; -7.016 ; SPI_controller:my_SPI|table_num[2]  ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 8.076      ;
; -7.013 ; SPI_controller:my_SPI|table_num[5]  ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 8.073      ;
; -7.013 ; SPI_controller:my_SPI|table_num[3]  ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 8.073      ;
; -6.998 ; SPI_controller:my_SPI|table_num[6]  ; SPI_controller:my_SPI|input_register[2]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 8.058      ;
; -6.961 ; SPI_controller:my_SPI|table_num[7]  ; SPI_controller:my_SPI|input_register[3]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 8.021      ;
; -6.923 ; SPI_controller:my_SPI|table_num[7]  ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 7.983      ;
; -6.923 ; SPI_controller:my_SPI|table_num[4]  ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 7.983      ;
; -6.901 ; SPI_controller:my_SPI|table_num[2]  ; SPI_controller:my_SPI|input_register[3]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 7.961      ;
; -6.889 ; SPI_controller:my_SPI|table_num[7]  ; SPI_controller:my_SPI|input_register[2]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 7.949      ;
; -6.883 ; SPI_controller:my_SPI|table_num[7]  ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 7.943      ;
; -6.862 ; SPI_controller:my_SPI|table_num[6]  ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 7.922      ;
; -6.839 ; SPI_controller:my_SPI|table_num[0]  ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.022      ; 7.901      ;
; -6.822 ; SPI_controller:my_SPI|table_num[5]  ; SPI_controller:my_SPI|input_register[2]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 7.882      ;
; -6.816 ; SPI_controller:my_SPI|table_num[6]  ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 7.876      ;
; -6.812 ; SPI_controller:my_SPI|table_num[7]  ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 7.872      ;
; -6.749 ; SPI_controller:my_SPI|table_num[4]  ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 7.809      ;
; -6.648 ; SPI_controller:my_SPI|table_num[1]  ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 7.708      ;
; -6.647 ; SPI_controller:my_SPI|table_num[3]  ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 7.707      ;
; -6.636 ; SPI_controller:my_SPI|table_num[0]  ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.022      ; 7.698      ;
; -6.599 ; SPI_controller:my_SPI|table_num[3]  ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 7.659      ;
; -6.570 ; SPI_controller:my_SPI|table_num[1]  ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 7.630      ;
; -6.504 ; SPI_controller:my_SPI|table_num[1]  ; SPI_controller:my_SPI|input_register[3]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 7.564      ;
; -6.468 ; SPI_controller:my_SPI|table_num[6]  ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 7.528      ;
; -6.351 ; SPI_controller:my_SPI|table_num[5]  ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 7.411      ;
; -6.294 ; SPI_controller:my_SPI|table_num[2]  ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 7.354      ;
; -6.271 ; SPI_controller:my_SPI|table_num[1]  ; SPI_controller:my_SPI|input_register[1]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 7.331      ;
; -6.261 ; SPI_controller:my_SPI|table_num[3]  ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 7.321      ;
; -6.213 ; SPI_controller:my_SPI|table_num[0]  ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.022      ; 7.275      ;
; -6.179 ; SPI_controller:my_SPI|table_num[2]  ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 7.239      ;
; -6.122 ; SPI_controller:my_SPI|table_num[2]  ; SPI_controller:my_SPI|input_register[1]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 7.182      ;
; -6.100 ; SPI_controller:my_SPI|table_num[7]  ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 7.160      ;
; -6.071 ; SPI_controller:my_SPI|table_num[0]  ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.022      ; 7.133      ;
; -5.960 ; SPI_controller:my_SPI|table_num[4]  ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 7.020      ;
; -5.953 ; SPI_controller:my_SPI|table_num[6]  ; SPI_controller:my_SPI|input_register[1]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 7.013      ;
; -5.924 ; SPI_controller:my_SPI|table_num[1]  ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 6.984      ;
; -5.892 ; SPI_controller:my_SPI|table_num[4]  ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 6.952      ;
; -5.772 ; SPI_controller:my_SPI|table_num[0]  ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.019      ; 6.831      ;
; -5.763 ; SPI_controller:my_SPI|table_num[4]  ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 6.820      ;
; -5.735 ; SPI_controller:my_SPI|table_num[6]  ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 6.792      ;
; -5.654 ; SPI_controller:my_SPI|table_num[3]  ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 6.711      ;
; -5.649 ; SPI_controller:my_SPI|table_num[0]  ; SPI_controller:my_SPI|input_register[1]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.022      ; 6.711      ;
; -5.649 ; SPI_controller:my_SPI|table_num[4]  ; SPI_controller:my_SPI|input_register[1]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 6.709      ;
; -5.557 ; SPI_controller:my_SPI|table_num[2]  ; SPI_controller:my_SPI|input_register[2]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 6.617      ;
; -5.517 ; SPI_controller:my_SPI|table_num[7]  ; SPI_controller:my_SPI|input_register[1]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 6.577      ;
; -5.425 ; SPI_controller:my_SPI|table_num[7]  ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 6.482      ;
; -5.276 ; SPI_controller:my_SPI|table_num[5]  ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 6.333      ;
; -5.257 ; SPI_controller:my_SPI|table_num[0]  ; SPI_controller:my_SPI|input_register[2]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.022      ; 6.319      ;
; -5.252 ; SPI_controller:my_SPI|table_num[2]  ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 6.309      ;
; -5.202 ; SPI_controller:my_SPI|table_num[1]  ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 6.259      ;
; -5.072 ; SPI_controller:my_SPI|table_num[1]  ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 6.132      ;
; -5.012 ; SPI_controller:my_SPI|table_num[2]  ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 6.072      ;
; -4.819 ; SPI_controller:my_SPI|table_num[0]  ; SPI_controller:my_SPI|input_register[3]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.022      ; 5.881      ;
; -4.751 ; SPI_controller:my_SPI|table_num[0]  ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.019      ; 5.810      ;
; -4.742 ; SPI_controller:my_SPI|table_num[4]  ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 5.799      ;
; -4.714 ; SPI_controller:my_SPI|table_num[6]  ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 5.771      ;
; -4.684 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.002     ; 5.722      ;
; -4.659 ; SPI_controller:my_SPI|table_num[8]  ; SPI_controller:my_SPI|input_register[1]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 5.719      ;
; -4.633 ; SPI_controller:my_SPI|table_num[3]  ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 5.690      ;
; -4.607 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.002     ; 5.645      ;
; -4.559 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.002     ; 5.597      ;
; -4.528 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.002     ; 5.566      ;
; -4.482 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.002     ; 5.520      ;
; -4.451 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.002     ; 5.489      ;
; -4.404 ; SPI_controller:my_SPI|table_num[7]  ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 5.461      ;
; -4.379 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[3]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.002     ; 5.417      ;
; -4.377 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[2]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.002     ; 5.415      ;
; -4.374 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.002     ; 5.412      ;
; -4.373 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.002     ; 5.411      ;
; -4.340 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|table_num[1]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.022     ; 5.358      ;
; -4.340 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|table_num[2]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.022     ; 5.358      ;
; -4.340 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|table_num[3]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.022     ; 5.358      ;
; -4.340 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|table_num[4]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.022     ; 5.358      ;
; -4.340 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|table_num[5]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.022     ; 5.358      ;
; -4.340 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|table_num[6]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.022     ; 5.358      ;
; -4.340 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|table_num[7]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.022     ; 5.358      ;
; -4.340 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|table_num[8]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.022     ; 5.358      ;
; -4.307 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.002     ; 5.345      ;
; -4.255 ; SPI_controller:my_SPI|table_num[5]  ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 5.312      ;
; -4.254 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[3]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.002     ; 5.292      ;
; -4.252 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[2]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.002     ; 5.290      ;
; -4.249 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.002     ; 5.287      ;
; -4.248 ; SPI_controller:my_SPI|table_num[8]  ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.020      ; 5.308      ;
; -4.248 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.002     ; 5.286      ;
+--------+-------------------------------------+------------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clk'                                                                                                                                                   ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                         ; To Node                           ; Launch Clock                      ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+
; -3.101 ; clk_divider:divider|counter[0]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 4.141      ;
; -3.007 ; clk_divider:divider|counter[1]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 4.047      ;
; -2.950 ; clk_divider:divider|counter[2]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.990      ;
; -2.904 ; clk_divider:divider|counter[3]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.944      ;
; -2.903 ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.943      ;
; -2.874 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.914      ;
; -2.796 ; clk_divider:divider|counter[4]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.836      ;
; -2.795 ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.835      ;
; -2.780 ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.820      ;
; -2.748 ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.788      ;
; -2.610 ; clk_divider:divider|counter[5]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.650      ;
; -2.609 ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.649      ;
; -2.575 ; clk_divider:divider|counter[6]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.615      ;
; -2.574 ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.614      ;
; -1.625 ; clk_divider:divider|counter[7]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.665      ;
; -1.624 ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.664      ;
; -1.566 ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.606      ;
; -1.537 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.577      ;
; -1.480 ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.520      ;
; -1.458 ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.498      ;
; -1.451 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.491      ;
; -1.443 ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.483      ;
; -1.411 ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.451      ;
; -1.394 ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.434      ;
; -1.372 ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.412      ;
; -1.365 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.405      ;
; -1.357 ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.397      ;
; -1.325 ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.365      ;
; -1.286 ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.326      ;
; -1.286 ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.326      ;
; -1.271 ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.311      ;
; -1.251 ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.291      ;
; -1.239 ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.279      ;
; -1.204 ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.244      ;
; -1.200 ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.240      ;
; -1.175 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.215      ;
; -1.089 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.129      ;
; -1.081 ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.121      ;
; -1.049 ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.089      ;
; -1.003 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.043      ;
; -0.995 ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.035      ;
; -0.963 ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.003      ;
; -0.917 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.957      ;
; -0.909 ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.949      ;
; -0.771 ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.811      ;
; -0.725 ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.765      ;
; -0.721 ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.761      ;
; -0.692 ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.732      ;
; -0.483 ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.523      ;
; -0.430 ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.470      ;
; -0.301 ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.341      ;
; 2.831  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk         ; 0.500        ; 2.792      ; 0.805      ;
; 3.331  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk         ; 1.000        ; 2.792      ; 0.805      ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clk'                                                                                                                                                    ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                         ; To Node                           ; Launch Clock                      ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+
; -2.597 ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk         ; 0.000        ; 2.792      ; 0.805      ;
; -2.097 ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk         ; -0.500       ; 2.792      ; 0.805      ;
; 1.035  ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.341      ;
; 1.164  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.470      ;
; 1.217  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.523      ;
; 1.426  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.732      ;
; 1.455  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.761      ;
; 1.459  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.765      ;
; 1.505  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.811      ;
; 1.643  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.949      ;
; 1.651  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.957      ;
; 1.697  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.003      ;
; 1.729  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.035      ;
; 1.737  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.043      ;
; 1.783  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.089      ;
; 1.815  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.121      ;
; 1.823  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.129      ;
; 1.909  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.215      ;
; 1.934  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.240      ;
; 1.938  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.244      ;
; 1.973  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.279      ;
; 1.985  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.291      ;
; 2.005  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.311      ;
; 2.020  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.326      ;
; 2.020  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.326      ;
; 2.059  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.365      ;
; 2.091  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.397      ;
; 2.099  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.405      ;
; 2.106  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.412      ;
; 2.128  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.434      ;
; 2.145  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.451      ;
; 2.177  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.483      ;
; 2.185  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.491      ;
; 2.192  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.498      ;
; 2.214  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.520      ;
; 2.230  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.536      ;
; 2.271  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.577      ;
; 2.300  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.606      ;
; 2.358  ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.664      ;
; 2.359  ; clk_divider:divider|counter[7]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.665      ;
; 2.633  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.939      ;
; 2.634  ; clk_divider:divider|counter[6]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.940      ;
; 2.775  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.081      ;
; 2.894  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.200      ;
; 2.895  ; clk_divider:divider|counter[4]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.201      ;
; 2.964  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.270      ;
; 2.965  ; clk_divider:divider|counter[5]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.271      ;
; 3.011  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.317      ;
; 3.079  ; clk_divider:divider|counter[1]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.385      ;
; 3.142  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.448      ;
; 3.188  ; clk_divider:divider|counter[2]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.494      ;
; 3.314  ; clk_divider:divider|counter[0]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.620      ;
; 3.343  ; clk_divider:divider|counter[3]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.649      ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clk_divider:divider|out_clk_inner'                                                                                                                                                         ;
+-------+------------------------------------------+------------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+
; Slack ; From Node                                ; To Node                                  ; Launch Clock                      ; Latch Clock                       ; Relationship ; Clock Skew ; Data Delay ;
+-------+------------------------------------------+------------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+
; 0.499 ; SPI_controller:my_SPI|update             ; SPI_controller:my_SPI|update             ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.805      ;
; 0.499 ; SPI_controller:my_SPI|start_clocks[0]    ; SPI_controller:my_SPI|start_clocks[0]    ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.805      ;
; 0.499 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.805      ;
; 0.499 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|hold_start         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.805      ;
; 0.499 ; SPI_controller:my_SPI|table_num[0]       ; SPI_controller:my_SPI|table_num[0]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.805      ;
; 0.499 ; SPI_controller:my_SPI|input_register[12] ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.805      ;
; 0.499 ; SPI_controller:my_SPI|input_register[13] ; SPI_controller:my_SPI|input_register[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.805      ;
; 0.499 ; SPI_controller:my_SPI|input_register[14] ; SPI_controller:my_SPI|input_register[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.805      ;
; 0.499 ; SPI_controller:my_SPI|start_sync         ; SPI_controller:my_SPI|start_sync         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.805      ;
; 0.757 ; SPI_controller:my_SPI|table_num[8]       ; SPI_controller:my_SPI|table_num[8]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.063      ;
; 1.052 ; SPI_controller:my_SPI|inner_ldac         ; SPI_controller:my_SPI|update             ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.358      ;
; 1.056 ; SPI_controller:my_SPI|update             ; SPI_controller:my_SPI|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.362      ;
; 1.163 ; SPI_controller:my_SPI|input_register[7]  ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.469      ;
; 1.164 ; SPI_controller:my_SPI|input_register[5]  ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.470      ;
; 1.181 ; SPI_controller:my_SPI|start_clocks[0]    ; SPI_controller:my_SPI|hold_start         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.487      ;
; 1.182 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.488      ;
; 1.222 ; SPI_controller:my_SPI|input_register[10] ; SPI_controller:my_SPI|input_register[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.528      ;
; 1.223 ; SPI_controller:my_SPI|input_register[12] ; SPI_controller:my_SPI|input_register[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.529      ;
; 1.225 ; SPI_controller:my_SPI|input_register[9]  ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.531      ;
; 1.225 ; SPI_controller:my_SPI|input_register[13] ; SPI_controller:my_SPI|input_register[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.531      ;
; 1.232 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|start_clocks[0]    ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.538      ;
; 1.239 ; SPI_controller:my_SPI|bit_number[0]      ; SPI_controller:my_SPI|bit_number[0]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.545      ;
; 1.239 ; SPI_controller:my_SPI|table_num[1]       ; SPI_controller:my_SPI|table_num[1]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.545      ;
; 1.240 ; SPI_controller:my_SPI|table_num[3]       ; SPI_controller:my_SPI|table_num[3]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.546      ;
; 1.244 ; SPI_controller:my_SPI|table_num[6]       ; SPI_controller:my_SPI|table_num[6]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.550      ;
; 1.244 ; SPI_controller:my_SPI|table_num[7]       ; SPI_controller:my_SPI|table_num[7]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.550      ;
; 1.271 ; SPI_controller:my_SPI|table_num[4]       ; SPI_controller:my_SPI|table_num[4]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.577      ;
; 1.272 ; SPI_controller:my_SPI|table_num[5]       ; SPI_controller:my_SPI|table_num[5]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.578      ;
; 1.274 ; SPI_controller:my_SPI|table_num[2]       ; SPI_controller:my_SPI|table_num[2]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.580      ;
; 1.333 ; SPI_controller:my_SPI|input_register[15] ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.639      ;
; 1.397 ; SPI_controller:my_SPI|update             ; SPI_controller:my_SPI|inner_ldac         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.703      ;
; 1.467 ; SPI_controller:my_SPI|input_register[6]  ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.773      ;
; 1.477 ; SPI_controller:my_SPI|bit_number[3]      ; SPI_controller:my_SPI|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.783      ;
; 1.523 ; SPI_controller:my_SPI|bit_number[1]      ; SPI_controller:my_SPI|bit_number[1]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.829      ;
; 1.540 ; SPI_controller:my_SPI|input_register[11] ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.846      ;
; 1.609 ; SPI_controller:my_SPI|inner_ldac         ; SPI_controller:my_SPI|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.915      ;
; 1.715 ; SPI_controller:my_SPI|bit_number[0]      ; SPI_controller:my_SPI|bit_number[1]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.021      ;
; 1.717 ; SPI_controller:my_SPI|table_num[1]       ; SPI_controller:my_SPI|table_num[2]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.023      ;
; 1.719 ; SPI_controller:my_SPI|table_num[3]       ; SPI_controller:my_SPI|table_num[4]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.025      ;
; 1.724 ; SPI_controller:my_SPI|table_num[7]       ; SPI_controller:my_SPI|table_num[8]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.030      ;
; 1.751 ; SPI_controller:my_SPI|table_num[4]       ; SPI_controller:my_SPI|table_num[5]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.057      ;
; 1.752 ; SPI_controller:my_SPI|table_num[5]       ; SPI_controller:my_SPI|table_num[6]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.058      ;
; 1.754 ; SPI_controller:my_SPI|table_num[2]       ; SPI_controller:my_SPI|table_num[3]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.060      ;
; 1.791 ; SPI_controller:my_SPI|input_register[11] ; SPI_controller:my_SPI|input_register[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.097      ;
; 1.792 ; SPI_controller:my_SPI|input_register[14] ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.098      ;
; 1.801 ; SPI_controller:my_SPI|bit_number[0]      ; SPI_controller:my_SPI|bit_number[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.107      ;
; 1.803 ; SPI_controller:my_SPI|input_register[1]  ; SPI_controller:my_SPI|input_register[2]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.109      ;
; 1.803 ; SPI_controller:my_SPI|table_num[1]       ; SPI_controller:my_SPI|table_num[3]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.109      ;
; 1.805 ; SPI_controller:my_SPI|table_num[3]       ; SPI_controller:my_SPI|table_num[5]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.111      ;
; 1.807 ; SPI_controller:my_SPI|input_register[4]  ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.113      ;
; 1.833 ; SPI_controller:my_SPI|table_num[6]       ; SPI_controller:my_SPI|table_num[7]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.139      ;
; 1.837 ; SPI_controller:my_SPI|table_num[4]       ; SPI_controller:my_SPI|table_num[6]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.143      ;
; 1.838 ; SPI_controller:my_SPI|bit_number[2]      ; SPI_controller:my_SPI|bit_number[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.144      ;
; 1.840 ; SPI_controller:my_SPI|table_num[2]       ; SPI_controller:my_SPI|table_num[4]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.146      ;
; 1.870 ; SPI_controller:my_SPI|input_register[8]  ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.003     ; 2.173      ;
; 1.885 ; SPI_controller:my_SPI|input_register[7]  ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.191      ;
; 1.887 ; SPI_controller:my_SPI|bit_number[0]      ; SPI_controller:my_SPI|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.193      ;
; 1.888 ; SPI_controller:my_SPI|input_register[5]  ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.194      ;
; 1.889 ; SPI_controller:my_SPI|table_num[1]       ; SPI_controller:my_SPI|table_num[4]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.195      ;
; 1.891 ; SPI_controller:my_SPI|table_num[3]       ; SPI_controller:my_SPI|table_num[6]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.197      ;
; 1.919 ; SPI_controller:my_SPI|table_num[6]       ; SPI_controller:my_SPI|table_num[8]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.225      ;
; 1.926 ; SPI_controller:my_SPI|table_num[2]       ; SPI_controller:my_SPI|table_num[5]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.232      ;
; 1.933 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|update             ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.001      ; 1.740      ;
; 1.942 ; SPI_controller:my_SPI|table_num[5]       ; SPI_controller:my_SPI|table_num[7]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.248      ;
; 1.948 ; SPI_controller:my_SPI|input_register[10] ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.254      ;
; 1.951 ; SPI_controller:my_SPI|table_num[0]       ; SPI_controller:my_SPI|table_num[1]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.002      ; 2.259      ;
; 1.956 ; SPI_controller:my_SPI|bit_number[3]      ; SPI_controller:my_SPI|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.262      ;
; 1.973 ; SPI_controller:my_SPI|bit_number[0]      ; SPI_controller:my_SPI|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.279      ;
; 1.975 ; SPI_controller:my_SPI|table_num[1]       ; SPI_controller:my_SPI|table_num[5]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.281      ;
; 1.988 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.005     ; 2.289      ;
; 2.003 ; SPI_controller:my_SPI|bit_number[1]      ; SPI_controller:my_SPI|bit_number[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.309      ;
; 2.012 ; SPI_controller:my_SPI|table_num[2]       ; SPI_controller:my_SPI|table_num[6]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.318      ;
; 2.027 ; SPI_controller:my_SPI|table_num[4]       ; SPI_controller:my_SPI|table_num[7]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.333      ;
; 2.028 ; SPI_controller:my_SPI|table_num[5]       ; SPI_controller:my_SPI|table_num[8]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.334      ;
; 2.061 ; SPI_controller:my_SPI|table_num[1]       ; SPI_controller:my_SPI|table_num[6]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.367      ;
; 2.081 ; SPI_controller:my_SPI|table_num[3]       ; SPI_controller:my_SPI|table_num[7]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.387      ;
; 2.089 ; SPI_controller:my_SPI|bit_number[1]      ; SPI_controller:my_SPI|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.395      ;
; 2.113 ; SPI_controller:my_SPI|table_num[4]       ; SPI_controller:my_SPI|table_num[8]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.419      ;
; 2.158 ; SPI_controller:my_SPI|bit_number[3]      ; SPI_controller:my_SPI|update             ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.001      ; 1.965      ;
; 2.167 ; SPI_controller:my_SPI|table_num[3]       ; SPI_controller:my_SPI|table_num[8]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.473      ;
; 2.175 ; SPI_controller:my_SPI|bit_number[1]      ; SPI_controller:my_SPI|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.481      ;
; 2.179 ; SPI_controller:my_SPI|sin_freq_cnt[4]    ; SPI_controller:my_SPI|sin_freq_cnt[4]    ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.485      ;
; 2.192 ; SPI_controller:my_SPI|sin_freq_cnt[2]    ; SPI_controller:my_SPI|sin_freq_cnt[2]    ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.498      ;
; 2.202 ; SPI_controller:my_SPI|table_num[2]       ; SPI_controller:my_SPI|table_num[7]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.508      ;
; 2.207 ; SPI_controller:my_SPI|sin_freq_cnt[1]    ; SPI_controller:my_SPI|sin_freq_cnt[1]    ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.513      ;
; 2.246 ; SPI_controller:my_SPI|input_register[9]  ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.552      ;
; 2.251 ; SPI_controller:my_SPI|table_num[1]       ; SPI_controller:my_SPI|table_num[7]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.557      ;
; 2.253 ; SPI_controller:my_SPI|sin_freq_cnt[5]    ; SPI_controller:my_SPI|sin_freq_cnt[5]    ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.559      ;
; 2.288 ; SPI_controller:my_SPI|table_num[2]       ; SPI_controller:my_SPI|table_num[8]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.594      ;
; 2.317 ; SPI_controller:my_SPI|bit_number[2]      ; SPI_controller:my_SPI|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.623      ;
; 2.323 ; SPI_controller:my_SPI|sin_freq_cnt[7]    ; SPI_controller:my_SPI|sin_freq_cnt[7]    ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.629      ;
; 2.337 ; SPI_controller:my_SPI|table_num[1]       ; SPI_controller:my_SPI|table_num[8]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.643      ;
; 2.368 ; SPI_controller:my_SPI|input_register[1]  ; SPI_controller:my_SPI|input_register[1]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.674      ;
; 2.383 ; SPI_controller:my_SPI|bit_number[2]      ; SPI_controller:my_SPI|start_sync         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.006     ; 2.683      ;
; 2.397 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|input_register[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.005     ; 2.698      ;
; 2.403 ; SPI_controller:my_SPI|bit_number[2]      ; SPI_controller:my_SPI|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.709      ;
; 2.419 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.001      ; 2.726      ;
; 2.420 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|start_sync         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; -0.007     ; 2.219      ;
; 2.428 ; SPI_controller:my_SPI|table_num[0]       ; SPI_controller:my_SPI|table_num[2]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.002      ; 2.736      ;
; 2.446 ; SPI_controller:my_SPI|bit_number[3]      ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.005     ; 2.747      ;
+-------+------------------------------------------+------------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clk'                                                                              ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                            ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------------+
; -1.941 ; 1.000        ; 2.941          ; Port Rate        ; clk   ; Rise       ; clk                               ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[0]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[0]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[1]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[1]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[2]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[2]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[3]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[3]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[4]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[4]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[5]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[5]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[6]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[6]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[7]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[7]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|out_clk_inner ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|out_clk_inner ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk|combout                       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk|combout                       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|inclk[0]              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|inclk[0]              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|outclk                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|outclk                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[2]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[2]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[3]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[3]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[4]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[4]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[5]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[5]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[6]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[6]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[7]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[7]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|out_clk_inner|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|out_clk_inner|clk         ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clk_divider:divider|out_clk_inner'                                                                                   ;
+--------+--------------+----------------+------------------+-----------------------------------+------------+------------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock                             ; Clock Edge ; Target                                   ;
+--------+--------------+----------------+------------------+-----------------------------------+------------+------------------------------------------+
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[0]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[0]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[1]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[1]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[2]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[2]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[3]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[3]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[4]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[4]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|hold_start         ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|hold_start         ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|inner_ldac         ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|inner_ldac         ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[10] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[10] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[11] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[11] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[12] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[12] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[13] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[13] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[14] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[14] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[15] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[15] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[1]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[1]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[2]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[2]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[3]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[3]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[4]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[4]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[5]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[5]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[6]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[6]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[7]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[7]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[8]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[8]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[9]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[9]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[0]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[0]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[1]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[1]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[2]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[2]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[3]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[3]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[4]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[4]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[5]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[5]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[6]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[6]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[7]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[7]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|start              ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|start              ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|start_clocks[0]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|start_clocks[0]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|start_sync         ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|start_sync         ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[0]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[0]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[1]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[1]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[2]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[2]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[3]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[3]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[4]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[4]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[5]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[5]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[6]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[6]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[7]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[7]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[8]       ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[8]       ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|update             ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|update             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner|regout             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner|regout             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner~clkctrl|inclk[0]   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner~clkctrl|inclk[0]   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner~clkctrl|outclk     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner~clkctrl|outclk     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[0]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[0]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[1]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[1]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[2]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[2]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[3]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[3]|clk                 ;
+--------+--------------+----------------+------------------+-----------------------------------+------------+------------------------------------------+


+---------------------------------------------------------------------------------------------------------------------+
; Setup Times                                                                                                         ;
+--------------+-----------------------------------+--------+--------+------------+-----------------------------------+
; Data Port    ; Clock Port                        ; Rise   ; Fall   ; Clock Edge ; Clock Reference                   ;
+--------------+-----------------------------------+--------+--------+------------+-----------------------------------+
; sin_freq[*]  ; clk_divider:divider|out_clk_inner ; 10.469 ; 10.469 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[0] ; clk_divider:divider|out_clk_inner ; 9.953  ; 9.953  ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[1] ; clk_divider:divider|out_clk_inner ; 9.705  ; 9.705  ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[2] ; clk_divider:divider|out_clk_inner ; 9.640  ; 9.640  ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[3] ; clk_divider:divider|out_clk_inner ; 9.414  ; 9.414  ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[4] ; clk_divider:divider|out_clk_inner ; 10.143 ; 10.143 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[5] ; clk_divider:divider|out_clk_inner ; 10.469 ; 10.469 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[6] ; clk_divider:divider|out_clk_inner ; 9.924  ; 9.924  ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[7] ; clk_divider:divider|out_clk_inner ; 9.963  ; 9.963  ; Fall       ; clk_divider:divider|out_clk_inner ;
+--------------+-----------------------------------+--------+--------+------------+-----------------------------------+


+---------------------------------------------------------------------------------------------------------------------+
; Hold Times                                                                                                          ;
+--------------+-----------------------------------+--------+--------+------------+-----------------------------------+
; Data Port    ; Clock Port                        ; Rise   ; Fall   ; Clock Edge ; Clock Reference                   ;
+--------------+-----------------------------------+--------+--------+------------+-----------------------------------+
; sin_freq[*]  ; clk_divider:divider|out_clk_inner ; -5.797 ; -5.797 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[0] ; clk_divider:divider|out_clk_inner ; -5.797 ; -5.797 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[1] ; clk_divider:divider|out_clk_inner ; -6.813 ; -6.813 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[2] ; clk_divider:divider|out_clk_inner ; -6.790 ; -6.790 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[3] ; clk_divider:divider|out_clk_inner ; -6.139 ; -6.139 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[4] ; clk_divider:divider|out_clk_inner ; -6.562 ; -6.562 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[5] ; clk_divider:divider|out_clk_inner ; -7.162 ; -7.162 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[6] ; clk_divider:divider|out_clk_inner ; -6.172 ; -6.172 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[7] ; clk_divider:divider|out_clk_inner ; -6.470 ; -6.470 ; Fall       ; clk_divider:divider|out_clk_inner ;
+--------------+-----------------------------------+--------+--------+------------+-----------------------------------+


+----------------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                          ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; Data Port ; Clock Port                        ; Rise  ; Fall  ; Clock Edge ; Clock Reference                   ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; din       ; clk_divider:divider|out_clk_inner ; 7.043 ; 7.043 ; Rise       ; clk_divider:divider|out_clk_inner ;
; sclk      ; clk_divider:divider|out_clk_inner ; 7.479 ;       ; Rise       ; clk_divider:divider|out_clk_inner ;
; sync      ; clk_divider:divider|out_clk_inner ; 7.584 ; 7.584 ; Rise       ; clk_divider:divider|out_clk_inner ;
; ldac      ; clk_divider:divider|out_clk_inner ; 7.053 ; 7.053 ; Fall       ; clk_divider:divider|out_clk_inner ;
; sclk      ; clk_divider:divider|out_clk_inner ; 8.508 ; 8.508 ; Fall       ; clk_divider:divider|out_clk_inner ;
; sync      ; clk_divider:divider|out_clk_inner ; 8.521 ; 8.521 ; Fall       ; clk_divider:divider|out_clk_inner ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+


+----------------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                                  ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; Data Port ; Clock Port                        ; Rise  ; Fall  ; Clock Edge ; Clock Reference                   ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; din       ; clk_divider:divider|out_clk_inner ; 7.043 ; 7.043 ; Rise       ; clk_divider:divider|out_clk_inner ;
; sclk      ; clk_divider:divider|out_clk_inner ; 7.479 ;       ; Rise       ; clk_divider:divider|out_clk_inner ;
; sync      ; clk_divider:divider|out_clk_inner ; 7.584 ; 7.584 ; Rise       ; clk_divider:divider|out_clk_inner ;
; ldac      ; clk_divider:divider|out_clk_inner ; 7.053 ; 7.053 ; Fall       ; clk_divider:divider|out_clk_inner ;
; sclk      ; clk_divider:divider|out_clk_inner ; 8.508 ; 7.479 ; Fall       ; clk_divider:divider|out_clk_inner ;
; sync      ; clk_divider:divider|out_clk_inner ; 8.521 ; 8.521 ; Fall       ; clk_divider:divider|out_clk_inner ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+


+------------------------------------------------------------+
; Fast Model Setup Summary                                   ;
+-----------------------------------+--------+---------------+
; Clock                             ; Slack  ; End Point TNS ;
+-----------------------------------+--------+---------------+
; clk_divider:divider|out_clk_inner ; -1.689 ; -34.064       ;
; clk                               ; -0.291 ; -0.581        ;
+-----------------------------------+--------+---------------+


+------------------------------------------------------------+
; Fast Model Hold Summary                                    ;
+-----------------------------------+--------+---------------+
; Clock                             ; Slack  ; End Point TNS ;
+-----------------------------------+--------+---------------+
; clk                               ; -1.399 ; -1.399        ;
; clk_divider:divider|out_clk_inner ; 0.215  ; 0.000         ;
+-----------------------------------+--------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+------------------------------------------------------------+
; Fast Model Minimum Pulse Width Summary                     ;
+-----------------------------------+--------+---------------+
; Clock                             ; Slack  ; End Point TNS ;
+-----------------------------------+--------+---------------+
; clk                               ; -1.380 ; -10.380       ;
; clk_divider:divider|out_clk_inner ; -0.500 ; -43.000       ;
+-----------------------------------+--------+---------------+


+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clk_divider:divider|out_clk_inner'                                                                                                                                                    ;
+--------+-------------------------------------+------------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+
; Slack  ; From Node                           ; To Node                                  ; Launch Clock                      ; Latch Clock                       ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------------------+------------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+
; -1.689 ; SPI_controller:my_SPI|table_num[6]  ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.738      ;
; -1.675 ; SPI_controller:my_SPI|table_num[5]  ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.724      ;
; -1.603 ; SPI_controller:my_SPI|table_num[7]  ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.652      ;
; -1.592 ; SPI_controller:my_SPI|table_num[4]  ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.641      ;
; -1.585 ; SPI_controller:my_SPI|table_num[6]  ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.634      ;
; -1.578 ; SPI_controller:my_SPI|table_num[2]  ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.627      ;
; -1.576 ; SPI_controller:my_SPI|table_num[3]  ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.625      ;
; -1.548 ; SPI_controller:my_SPI|table_num[0]  ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.019      ; 2.599      ;
; -1.545 ; SPI_controller:my_SPI|table_num[3]  ; SPI_controller:my_SPI|input_register[2]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.594      ;
; -1.528 ; SPI_controller:my_SPI|table_num[7]  ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.577      ;
; -1.518 ; SPI_controller:my_SPI|table_num[1]  ; SPI_controller:my_SPI|input_register[2]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.567      ;
; -1.507 ; SPI_controller:my_SPI|table_num[4]  ; SPI_controller:my_SPI|input_register[3]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.556      ;
; -1.502 ; SPI_controller:my_SPI|table_num[5]  ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.551      ;
; -1.499 ; SPI_controller:my_SPI|table_num[5]  ; SPI_controller:my_SPI|input_register[3]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.548      ;
; -1.497 ; SPI_controller:my_SPI|table_num[5]  ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.546      ;
; -1.492 ; SPI_controller:my_SPI|table_num[5]  ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.541      ;
; -1.484 ; SPI_controller:my_SPI|table_num[2]  ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.533      ;
; -1.483 ; SPI_controller:my_SPI|table_num[3]  ; SPI_controller:my_SPI|input_register[3]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.532      ;
; -1.479 ; SPI_controller:my_SPI|table_num[6]  ; SPI_controller:my_SPI|input_register[2]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.528      ;
; -1.474 ; SPI_controller:my_SPI|table_num[6]  ; SPI_controller:my_SPI|input_register[3]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.523      ;
; -1.471 ; SPI_controller:my_SPI|table_num[3]  ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.520      ;
; -1.462 ; SPI_controller:my_SPI|table_num[4]  ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.511      ;
; -1.460 ; SPI_controller:my_SPI|table_num[0]  ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.019      ; 2.511      ;
; -1.459 ; SPI_controller:my_SPI|table_num[6]  ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.508      ;
; -1.455 ; SPI_controller:my_SPI|table_num[4]  ; SPI_controller:my_SPI|input_register[2]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.504      ;
; -1.455 ; SPI_controller:my_SPI|table_num[7]  ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.504      ;
; -1.442 ; SPI_controller:my_SPI|table_num[7]  ; SPI_controller:my_SPI|input_register[2]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.491      ;
; -1.440 ; SPI_controller:my_SPI|table_num[4]  ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.489      ;
; -1.438 ; SPI_controller:my_SPI|table_num[6]  ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.487      ;
; -1.434 ; SPI_controller:my_SPI|table_num[7]  ; SPI_controller:my_SPI|input_register[3]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.483      ;
; -1.432 ; SPI_controller:my_SPI|table_num[7]  ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.481      ;
; -1.419 ; SPI_controller:my_SPI|table_num[2]  ; SPI_controller:my_SPI|input_register[3]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.468      ;
; -1.387 ; SPI_controller:my_SPI|table_num[5]  ; SPI_controller:my_SPI|input_register[2]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.436      ;
; -1.386 ; SPI_controller:my_SPI|table_num[3]  ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.435      ;
; -1.381 ; SPI_controller:my_SPI|table_num[3]  ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.430      ;
; -1.363 ; SPI_controller:my_SPI|table_num[0]  ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.019      ; 2.414      ;
; -1.358 ; SPI_controller:my_SPI|table_num[1]  ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.407      ;
; -1.326 ; SPI_controller:my_SPI|table_num[1]  ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.375      ;
; -1.323 ; SPI_controller:my_SPI|table_num[6]  ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.372      ;
; -1.270 ; SPI_controller:my_SPI|table_num[1]  ; SPI_controller:my_SPI|input_register[3]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.319      ;
; -1.253 ; SPI_controller:my_SPI|table_num[5]  ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.302      ;
; -1.245 ; SPI_controller:my_SPI|table_num[3]  ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.294      ;
; -1.235 ; SPI_controller:my_SPI|table_num[2]  ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.284      ;
; -1.220 ; SPI_controller:my_SPI|table_num[0]  ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.019      ; 2.271      ;
; -1.210 ; SPI_controller:my_SPI|table_num[1]  ; SPI_controller:my_SPI|input_register[1]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.259      ;
; -1.206 ; SPI_controller:my_SPI|table_num[7]  ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.255      ;
; -1.182 ; SPI_controller:my_SPI|table_num[0]  ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.019      ; 2.233      ;
; -1.170 ; SPI_controller:my_SPI|table_num[2]  ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.219      ;
; -1.168 ; SPI_controller:my_SPI|table_num[2]  ; SPI_controller:my_SPI|input_register[1]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.217      ;
; -1.160 ; SPI_controller:my_SPI|table_num[0]  ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.209      ;
; -1.136 ; SPI_controller:my_SPI|table_num[6]  ; SPI_controller:my_SPI|input_register[1]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.185      ;
; -1.135 ; SPI_controller:my_SPI|table_num[4]  ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.184      ;
; -1.127 ; SPI_controller:my_SPI|table_num[4]  ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.176      ;
; -1.117 ; SPI_controller:my_SPI|table_num[4]  ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.015      ; 2.164      ;
; -1.111 ; SPI_controller:my_SPI|table_num[6]  ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.015      ; 2.158      ;
; -1.107 ; SPI_controller:my_SPI|table_num[1]  ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.156      ;
; -1.102 ; SPI_controller:my_SPI|table_num[3]  ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.015      ; 2.149      ;
; -1.025 ; SPI_controller:my_SPI|table_num[4]  ; SPI_controller:my_SPI|input_register[1]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.074      ;
; -1.023 ; SPI_controller:my_SPI|table_num[0]  ; SPI_controller:my_SPI|input_register[1]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.019      ; 2.074      ;
; -1.006 ; SPI_controller:my_SPI|table_num[7]  ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.015      ; 2.053      ;
; -1.005 ; SPI_controller:my_SPI|table_num[2]  ; SPI_controller:my_SPI|input_register[2]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.054      ;
; -0.993 ; SPI_controller:my_SPI|table_num[5]  ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.015      ; 2.040      ;
; -0.983 ; SPI_controller:my_SPI|table_num[7]  ; SPI_controller:my_SPI|input_register[1]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 2.032      ;
; -0.966 ; SPI_controller:my_SPI|table_num[2]  ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.015      ; 2.013      ;
; -0.936 ; SPI_controller:my_SPI|table_num[0]  ; SPI_controller:my_SPI|input_register[2]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.019      ; 1.987      ;
; -0.930 ; SPI_controller:my_SPI|table_num[1]  ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 1.979      ;
; -0.910 ; SPI_controller:my_SPI|table_num[1]  ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.015      ; 1.957      ;
; -0.859 ; SPI_controller:my_SPI|table_num[2]  ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 1.908      ;
; -0.829 ; SPI_controller:my_SPI|table_num[0]  ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.017      ; 1.878      ;
; -0.818 ; SPI_controller:my_SPI|table_num[0]  ; SPI_controller:my_SPI|input_register[3]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.019      ; 1.869      ;
; -0.810 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.001     ; 1.841      ;
; -0.808 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.001     ; 1.839      ;
; -0.805 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.001     ; 1.836      ;
; -0.804 ; SPI_controller:my_SPI|table_num[4]  ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.015      ; 1.851      ;
; -0.803 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.001     ; 1.834      ;
; -0.795 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.001     ; 1.826      ;
; -0.790 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.001     ; 1.821      ;
; -0.780 ; SPI_controller:my_SPI|table_num[6]  ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.015      ; 1.827      ;
; -0.771 ; SPI_controller:my_SPI|table_num[3]  ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; 0.015      ; 1.818      ;
; -0.769 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|table_num[1]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; -0.018     ; 1.283      ;
; -0.769 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|table_num[2]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; -0.018     ; 1.283      ;
; -0.769 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|table_num[3]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; -0.018     ; 1.283      ;
; -0.769 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|table_num[4]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; -0.018     ; 1.283      ;
; -0.769 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|table_num[5]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; -0.018     ; 1.283      ;
; -0.769 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|table_num[6]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; -0.018     ; 1.283      ;
; -0.769 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|table_num[7]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; -0.018     ; 1.283      ;
; -0.769 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|table_num[8]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; -0.018     ; 1.283      ;
; -0.762 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|table_num[1]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.018     ; 1.776      ;
; -0.762 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|table_num[2]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.018     ; 1.776      ;
; -0.762 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|table_num[3]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.018     ; 1.776      ;
; -0.762 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|table_num[4]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.018     ; 1.776      ;
; -0.762 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|table_num[5]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.018     ; 1.776      ;
; -0.762 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|table_num[6]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.018     ; 1.776      ;
; -0.762 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|table_num[7]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.018     ; 1.776      ;
; -0.762 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|table_num[8]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.018     ; 1.776      ;
; -0.760 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|table_num[1]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.018     ; 1.774      ;
; -0.760 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|table_num[2]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.018     ; 1.774      ;
; -0.760 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|table_num[3]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.018     ; 1.774      ;
; -0.760 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|table_num[4]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.018     ; 1.774      ;
; -0.760 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|table_num[5]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.018     ; 1.774      ;
+--------+-------------------------------------+------------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clk'                                                                                                                                                   ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                         ; To Node                           ; Launch Clock                      ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+
; -0.291 ; clk_divider:divider|counter[0]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.323      ;
; -0.290 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.322      ;
; -0.260 ; clk_divider:divider|counter[3]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.292      ;
; -0.259 ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.291      ;
; -0.251 ; clk_divider:divider|counter[1]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.283      ;
; -0.250 ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.282      ;
; -0.231 ; clk_divider:divider|counter[2]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.263      ;
; -0.230 ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.262      ;
; -0.225 ; clk_divider:divider|counter[4]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.257      ;
; -0.224 ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.256      ;
; -0.115 ; clk_divider:divider|counter[5]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.147      ;
; -0.114 ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.146      ;
; -0.095 ; clk_divider:divider|counter[6]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.127      ;
; -0.094 ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.126      ;
; 0.112  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.920      ;
; 0.143  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.889      ;
; 0.147  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.885      ;
; 0.152  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.880      ;
; 0.172  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.860      ;
; 0.174  ; clk_divider:divider|counter[7]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.858      ;
; 0.175  ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.857      ;
; 0.178  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.854      ;
; 0.178  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.854      ;
; 0.182  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.850      ;
; 0.187  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.845      ;
; 0.207  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.825      ;
; 0.213  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.819      ;
; 0.213  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.819      ;
; 0.222  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.810      ;
; 0.242  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.790      ;
; 0.248  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.784      ;
; 0.274  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.758      ;
; 0.276  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.756      ;
; 0.294  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.738      ;
; 0.307  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.725      ;
; 0.309  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.723      ;
; 0.311  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.721      ;
; 0.316  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.716      ;
; 0.336  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.696      ;
; 0.346  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.686      ;
; 0.351  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.681      ;
; 0.371  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.661      ;
; 0.381  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.651      ;
; 0.386  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.646      ;
; 0.434  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.598      ;
; 0.442  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.590      ;
; 0.445  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.587      ;
; 0.447  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.585      ;
; 0.511  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.521      ;
; 0.524  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.508      ;
; 0.563  ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.469      ;
; 1.779  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk         ; 0.500        ; 1.473      ; 0.367      ;
; 2.279  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk         ; 1.000        ; 1.473      ; 0.367      ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clk'                                                                                                                                                    ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                         ; To Node                           ; Launch Clock                      ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+
; -1.399 ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk         ; 0.000        ; 1.473      ; 0.367      ;
; -0.899 ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk         ; -0.500       ; 1.473      ; 0.367      ;
; 0.317  ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.469      ;
; 0.356  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.508      ;
; 0.369  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.521      ;
; 0.433  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.585      ;
; 0.435  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.587      ;
; 0.438  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.590      ;
; 0.446  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.598      ;
; 0.494  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.646      ;
; 0.499  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.651      ;
; 0.509  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.661      ;
; 0.529  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.681      ;
; 0.534  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.686      ;
; 0.544  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.696      ;
; 0.564  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.716      ;
; 0.569  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.721      ;
; 0.571  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.723      ;
; 0.573  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.725      ;
; 0.586  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.738      ;
; 0.604  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.756      ;
; 0.606  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.758      ;
; 0.632  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.784      ;
; 0.638  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.790      ;
; 0.658  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.810      ;
; 0.666  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.818      ;
; 0.667  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.819      ;
; 0.667  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.819      ;
; 0.673  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.825      ;
; 0.693  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.845      ;
; 0.698  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.850      ;
; 0.702  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.854      ;
; 0.702  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.854      ;
; 0.705  ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.857      ;
; 0.706  ; clk_divider:divider|counter[7]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.858      ;
; 0.708  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.860      ;
; 0.728  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.880      ;
; 0.733  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.885      ;
; 0.737  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.889      ;
; 0.768  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.920      ;
; 0.774  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.926      ;
; 0.775  ; clk_divider:divider|counter[6]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.927      ;
; 0.819  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.971      ;
; 0.888  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.040      ;
; 0.891  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.043      ;
; 0.892  ; clk_divider:divider|counter[4]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.044      ;
; 0.899  ; clk_divider:divider|counter[1]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.051      ;
; 0.899  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.051      ;
; 0.900  ; clk_divider:divider|counter[5]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.052      ;
; 0.957  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.109      ;
; 0.968  ; clk_divider:divider|counter[2]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.120      ;
; 1.027  ; clk_divider:divider|counter[3]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.179      ;
; 1.033  ; clk_divider:divider|counter[0]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.185      ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clk_divider:divider|out_clk_inner'                                                                                                                                                         ;
+-------+------------------------------------------+------------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+
; Slack ; From Node                                ; To Node                                  ; Launch Clock                      ; Latch Clock                       ; Relationship ; Clock Skew ; Data Delay ;
+-------+------------------------------------------+------------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+
; 0.215 ; SPI_controller:my_SPI|update             ; SPI_controller:my_SPI|update             ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; SPI_controller:my_SPI|start_clocks[0]    ; SPI_controller:my_SPI|start_clocks[0]    ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|hold_start         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; SPI_controller:my_SPI|table_num[0]       ; SPI_controller:my_SPI|table_num[0]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; SPI_controller:my_SPI|input_register[12] ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; SPI_controller:my_SPI|input_register[13] ; SPI_controller:my_SPI|input_register[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; SPI_controller:my_SPI|input_register[14] ; SPI_controller:my_SPI|input_register[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; SPI_controller:my_SPI|start_sync         ; SPI_controller:my_SPI|start_sync         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.367      ;
; 0.244 ; SPI_controller:my_SPI|table_num[8]       ; SPI_controller:my_SPI|table_num[8]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.396      ;
; 0.362 ; SPI_controller:my_SPI|start_clocks[0]    ; SPI_controller:my_SPI|hold_start         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.514      ;
; 0.362 ; SPI_controller:my_SPI|input_register[7]  ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.514      ;
; 0.363 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.515      ;
; 0.364 ; SPI_controller:my_SPI|input_register[5]  ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.516      ;
; 0.365 ; SPI_controller:my_SPI|inner_ldac         ; SPI_controller:my_SPI|update             ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.517      ;
; 0.370 ; SPI_controller:my_SPI|input_register[12] ; SPI_controller:my_SPI|input_register[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.522      ;
; 0.372 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|start_clocks[0]    ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.524      ;
; 0.373 ; SPI_controller:my_SPI|input_register[9]  ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.525      ;
; 0.374 ; SPI_controller:my_SPI|bit_number[0]      ; SPI_controller:my_SPI|bit_number[0]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.526      ;
; 0.375 ; SPI_controller:my_SPI|update             ; SPI_controller:my_SPI|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.527      ;
; 0.377 ; SPI_controller:my_SPI|input_register[10] ; SPI_controller:my_SPI|input_register[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.529      ;
; 0.379 ; SPI_controller:my_SPI|table_num[7]       ; SPI_controller:my_SPI|table_num[7]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.531      ;
; 0.380 ; SPI_controller:my_SPI|input_register[13] ; SPI_controller:my_SPI|input_register[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.532      ;
; 0.391 ; SPI_controller:my_SPI|table_num[3]       ; SPI_controller:my_SPI|table_num[3]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.543      ;
; 0.392 ; SPI_controller:my_SPI|table_num[1]       ; SPI_controller:my_SPI|table_num[1]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.544      ;
; 0.393 ; SPI_controller:my_SPI|table_num[4]       ; SPI_controller:my_SPI|table_num[4]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.545      ;
; 0.393 ; SPI_controller:my_SPI|table_num[6]       ; SPI_controller:my_SPI|table_num[6]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.545      ;
; 0.394 ; SPI_controller:my_SPI|table_num[2]       ; SPI_controller:my_SPI|table_num[2]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.546      ;
; 0.394 ; SPI_controller:my_SPI|table_num[5]       ; SPI_controller:my_SPI|table_num[5]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.546      ;
; 0.415 ; SPI_controller:my_SPI|input_register[15] ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.567      ;
; 0.425 ; SPI_controller:my_SPI|update             ; SPI_controller:my_SPI|inner_ldac         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.577      ;
; 0.442 ; SPI_controller:my_SPI|bit_number[3]      ; SPI_controller:my_SPI|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.594      ;
; 0.446 ; SPI_controller:my_SPI|input_register[6]  ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.598      ;
; 0.452 ; SPI_controller:my_SPI|bit_number[1]      ; SPI_controller:my_SPI|bit_number[1]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.604      ;
; 0.460 ; SPI_controller:my_SPI|input_register[11] ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.612      ;
; 0.514 ; SPI_controller:my_SPI|bit_number[0]      ; SPI_controller:my_SPI|bit_number[1]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.666      ;
; 0.519 ; SPI_controller:my_SPI|table_num[7]       ; SPI_controller:my_SPI|table_num[8]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.671      ;
; 0.525 ; SPI_controller:my_SPI|inner_ldac         ; SPI_controller:my_SPI|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.677      ;
; 0.527 ; SPI_controller:my_SPI|table_num[1]       ; SPI_controller:my_SPI|table_num[2]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.679      ;
; 0.529 ; SPI_controller:my_SPI|table_num[3]       ; SPI_controller:my_SPI|table_num[4]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.681      ;
; 0.533 ; SPI_controller:my_SPI|table_num[4]       ; SPI_controller:my_SPI|table_num[5]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.685      ;
; 0.534 ; SPI_controller:my_SPI|table_num[2]       ; SPI_controller:my_SPI|table_num[3]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.686      ;
; 0.534 ; SPI_controller:my_SPI|table_num[5]       ; SPI_controller:my_SPI|table_num[6]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.686      ;
; 0.537 ; SPI_controller:my_SPI|input_register[14] ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.689      ;
; 0.538 ; SPI_controller:my_SPI|input_register[1]  ; SPI_controller:my_SPI|input_register[2]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.690      ;
; 0.540 ; SPI_controller:my_SPI|input_register[4]  ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.692      ;
; 0.546 ; SPI_controller:my_SPI|bit_number[2]      ; SPI_controller:my_SPI|bit_number[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.698      ;
; 0.549 ; SPI_controller:my_SPI|bit_number[0]      ; SPI_controller:my_SPI|bit_number[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.701      ;
; 0.551 ; SPI_controller:my_SPI|input_register[8]  ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.002     ; 0.701      ;
; 0.562 ; SPI_controller:my_SPI|table_num[1]       ; SPI_controller:my_SPI|table_num[3]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.714      ;
; 0.564 ; SPI_controller:my_SPI|table_num[3]       ; SPI_controller:my_SPI|table_num[5]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.716      ;
; 0.568 ; SPI_controller:my_SPI|table_num[4]       ; SPI_controller:my_SPI|table_num[6]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.720      ;
; 0.569 ; SPI_controller:my_SPI|table_num[2]       ; SPI_controller:my_SPI|table_num[4]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.721      ;
; 0.580 ; SPI_controller:my_SPI|bit_number[3]      ; SPI_controller:my_SPI|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.732      ;
; 0.583 ; SPI_controller:my_SPI|input_register[11] ; SPI_controller:my_SPI|input_register[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.735      ;
; 0.584 ; SPI_controller:my_SPI|bit_number[0]      ; SPI_controller:my_SPI|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.736      ;
; 0.586 ; SPI_controller:my_SPI|table_num[6]       ; SPI_controller:my_SPI|table_num[7]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.738      ;
; 0.589 ; SPI_controller:my_SPI|table_num[0]       ; SPI_controller:my_SPI|table_num[1]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.002      ; 0.743      ;
; 0.592 ; SPI_controller:my_SPI|bit_number[1]      ; SPI_controller:my_SPI|bit_number[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.744      ;
; 0.597 ; SPI_controller:my_SPI|table_num[1]       ; SPI_controller:my_SPI|table_num[4]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.749      ;
; 0.599 ; SPI_controller:my_SPI|table_num[3]       ; SPI_controller:my_SPI|table_num[6]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.751      ;
; 0.604 ; SPI_controller:my_SPI|table_num[2]       ; SPI_controller:my_SPI|table_num[5]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.756      ;
; 0.611 ; SPI_controller:my_SPI|input_register[7]  ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.763      ;
; 0.615 ; SPI_controller:my_SPI|input_register[5]  ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.767      ;
; 0.619 ; SPI_controller:my_SPI|bit_number[0]      ; SPI_controller:my_SPI|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.771      ;
; 0.621 ; SPI_controller:my_SPI|table_num[6]       ; SPI_controller:my_SPI|table_num[8]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.773      ;
; 0.627 ; SPI_controller:my_SPI|bit_number[1]      ; SPI_controller:my_SPI|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.779      ;
; 0.628 ; SPI_controller:my_SPI|input_register[10] ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.780      ;
; 0.628 ; SPI_controller:my_SPI|table_num[5]       ; SPI_controller:my_SPI|table_num[7]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.780      ;
; 0.632 ; SPI_controller:my_SPI|table_num[1]       ; SPI_controller:my_SPI|table_num[5]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.784      ;
; 0.636 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.003     ; 0.785      ;
; 0.639 ; SPI_controller:my_SPI|table_num[2]       ; SPI_controller:my_SPI|table_num[6]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.791      ;
; 0.657 ; SPI_controller:my_SPI|sin_freq_cnt[4]    ; SPI_controller:my_SPI|sin_freq_cnt[4]    ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.809      ;
; 0.662 ; SPI_controller:my_SPI|bit_number[1]      ; SPI_controller:my_SPI|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.814      ;
; 0.662 ; SPI_controller:my_SPI|table_num[4]       ; SPI_controller:my_SPI|table_num[7]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.814      ;
; 0.663 ; SPI_controller:my_SPI|table_num[5]       ; SPI_controller:my_SPI|table_num[8]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.815      ;
; 0.665 ; SPI_controller:my_SPI|sin_freq_cnt[2]    ; SPI_controller:my_SPI|sin_freq_cnt[2]    ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.817      ;
; 0.667 ; SPI_controller:my_SPI|table_num[1]       ; SPI_controller:my_SPI|table_num[6]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.819      ;
; 0.676 ; SPI_controller:my_SPI|sin_freq_cnt[1]    ; SPI_controller:my_SPI|sin_freq_cnt[1]    ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.828      ;
; 0.684 ; SPI_controller:my_SPI|bit_number[2]      ; SPI_controller:my_SPI|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.836      ;
; 0.685 ; SPI_controller:my_SPI|sin_freq_cnt[5]    ; SPI_controller:my_SPI|sin_freq_cnt[5]    ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.837      ;
; 0.693 ; SPI_controller:my_SPI|table_num[3]       ; SPI_controller:my_SPI|table_num[7]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.845      ;
; 0.697 ; SPI_controller:my_SPI|table_num[4]       ; SPI_controller:my_SPI|table_num[8]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.849      ;
; 0.699 ; SPI_controller:my_SPI|sin_freq_cnt[7]    ; SPI_controller:my_SPI|sin_freq_cnt[7]    ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.851      ;
; 0.701 ; SPI_controller:my_SPI|input_register[1]  ; SPI_controller:my_SPI|input_register[1]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.853      ;
; 0.704 ; SPI_controller:my_SPI|input_register[9]  ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.856      ;
; 0.719 ; SPI_controller:my_SPI|bit_number[2]      ; SPI_controller:my_SPI|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.871      ;
; 0.722 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.001      ; 0.875      ;
; 0.723 ; SPI_controller:my_SPI|bit_number[2]      ; SPI_controller:my_SPI|start_sync         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.004     ; 0.871      ;
; 0.728 ; SPI_controller:my_SPI|table_num[3]       ; SPI_controller:my_SPI|table_num[8]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.880      ;
; 0.729 ; SPI_controller:my_SPI|table_num[0]       ; SPI_controller:my_SPI|table_num[2]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.002      ; 0.883      ;
; 0.733 ; SPI_controller:my_SPI|table_num[2]       ; SPI_controller:my_SPI|table_num[7]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.885      ;
; 0.756 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|input_register[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.003     ; 0.905      ;
; 0.761 ; SPI_controller:my_SPI|table_num[1]       ; SPI_controller:my_SPI|table_num[7]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.913      ;
; 0.764 ; SPI_controller:my_SPI|bit_number[3]      ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.003     ; 0.913      ;
; 0.764 ; SPI_controller:my_SPI|table_num[0]       ; SPI_controller:my_SPI|table_num[3]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.002      ; 0.918      ;
; 0.768 ; SPI_controller:my_SPI|table_num[2]       ; SPI_controller:my_SPI|table_num[8]       ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.920      ;
; 0.777 ; SPI_controller:my_SPI|table_num[8]       ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.017      ; 0.946      ;
; 0.778 ; SPI_controller:my_SPI|table_num[8]       ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.017      ; 0.947      ;
; 0.780 ; SPI_controller:my_SPI|table_num[8]       ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.017      ; 0.949      ;
+-------+------------------------------------------+------------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clk'                                                                              ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                            ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clk   ; Rise       ; clk                               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[0]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[0]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[1]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[1]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[2]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[2]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[3]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[3]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[4]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[4]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[5]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[5]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[6]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[6]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[7]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[7]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|out_clk_inner ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|out_clk_inner ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk|combout                       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk|combout                       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|inclk[0]              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|inclk[0]              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|outclk                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|outclk                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[2]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[2]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[3]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[3]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[4]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[4]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[5]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[5]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[6]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[6]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[7]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[7]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|out_clk_inner|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|out_clk_inner|clk         ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clk_divider:divider|out_clk_inner'                                                                                   ;
+--------+--------------+----------------+------------------+-----------------------------------+------------+------------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock                             ; Clock Edge ; Target                                   ;
+--------+--------------+----------------+------------------+-----------------------------------+------------+------------------------------------------+
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[0]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[0]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[1]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[1]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[2]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[2]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[3]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[3]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[4]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[4]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|hold_start         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|hold_start         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|inner_ldac         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|inner_ldac         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[10] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[10] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[11] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[11] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[12] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[12] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[13] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[13] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[14] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[14] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[15] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[15] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[1]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[1]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[2]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[2]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[3]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[3]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[4]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[4]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[5]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[5]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[6]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[6]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[7]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[7]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[8]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[8]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[9]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[9]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[0]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[0]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[1]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[1]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[2]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[2]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[3]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[3]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[4]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[4]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[5]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[5]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[6]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[6]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[7]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|sin_freq_cnt[7]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|start              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|start              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|start_clocks[0]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|start_clocks[0]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|start_sync         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|start_sync         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[0]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[0]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[1]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[1]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[2]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[2]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[3]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[3]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[4]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[4]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[5]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[5]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[6]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[6]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[7]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[7]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[8]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|table_num[8]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|update             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|update             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner|regout             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner|regout             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner~clkctrl|inclk[0]   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner~clkctrl|inclk[0]   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner~clkctrl|outclk     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner~clkctrl|outclk     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[0]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[0]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[1]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[1]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[2]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[2]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[3]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[3]|clk                 ;
+--------+--------------+----------------+------------------+-----------------------------------+------------+------------------------------------------+


+-------------------------------------------------------------------------------------------------------------------+
; Setup Times                                                                                                       ;
+--------------+-----------------------------------+-------+-------+------------+-----------------------------------+
; Data Port    ; Clock Port                        ; Rise  ; Fall  ; Clock Edge ; Clock Reference                   ;
+--------------+-----------------------------------+-------+-------+------------+-----------------------------------+
; sin_freq[*]  ; clk_divider:divider|out_clk_inner ; 4.178 ; 4.178 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[0] ; clk_divider:divider|out_clk_inner ; 3.980 ; 3.980 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[1] ; clk_divider:divider|out_clk_inner ; 3.917 ; 3.917 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[2] ; clk_divider:divider|out_clk_inner ; 3.882 ; 3.882 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[3] ; clk_divider:divider|out_clk_inner ; 3.830 ; 3.830 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[4] ; clk_divider:divider|out_clk_inner ; 4.084 ; 4.084 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[5] ; clk_divider:divider|out_clk_inner ; 4.178 ; 4.178 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[6] ; clk_divider:divider|out_clk_inner ; 4.039 ; 4.039 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[7] ; clk_divider:divider|out_clk_inner ; 4.003 ; 4.003 ; Fall       ; clk_divider:divider|out_clk_inner ;
+--------------+-----------------------------------+-------+-------+------------+-----------------------------------+


+---------------------------------------------------------------------------------------------------------------------+
; Hold Times                                                                                                          ;
+--------------+-----------------------------------+--------+--------+------------+-----------------------------------+
; Data Port    ; Clock Port                        ; Rise   ; Fall   ; Clock Edge ; Clock Reference                   ;
+--------------+-----------------------------------+--------+--------+------------+-----------------------------------+
; sin_freq[*]  ; clk_divider:divider|out_clk_inner ; -2.673 ; -2.673 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[0] ; clk_divider:divider|out_clk_inner ; -2.673 ; -2.673 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[1] ; clk_divider:divider|out_clk_inner ; -2.963 ; -2.963 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[2] ; clk_divider:divider|out_clk_inner ; -2.948 ; -2.948 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[3] ; clk_divider:divider|out_clk_inner ; -2.790 ; -2.790 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[4] ; clk_divider:divider|out_clk_inner ; -2.928 ; -2.928 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[5] ; clk_divider:divider|out_clk_inner ; -3.105 ; -3.105 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[6] ; clk_divider:divider|out_clk_inner ; -2.831 ; -2.831 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[7] ; clk_divider:divider|out_clk_inner ; -2.900 ; -2.900 ; Fall       ; clk_divider:divider|out_clk_inner ;
+--------------+-----------------------------------+--------+--------+------------+-----------------------------------+


+----------------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                          ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; Data Port ; Clock Port                        ; Rise  ; Fall  ; Clock Edge ; Clock Reference                   ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; din       ; clk_divider:divider|out_clk_inner ; 3.166 ; 3.166 ; Rise       ; clk_divider:divider|out_clk_inner ;
; sclk      ; clk_divider:divider|out_clk_inner ; 2.866 ;       ; Rise       ; clk_divider:divider|out_clk_inner ;
; sync      ; clk_divider:divider|out_clk_inner ; 3.320 ; 3.320 ; Rise       ; clk_divider:divider|out_clk_inner ;
; ldac      ; clk_divider:divider|out_clk_inner ; 3.171 ; 3.171 ; Fall       ; clk_divider:divider|out_clk_inner ;
; sclk      ; clk_divider:divider|out_clk_inner ; 3.626 ; 3.626 ; Fall       ; clk_divider:divider|out_clk_inner ;
; sync      ; clk_divider:divider|out_clk_inner ; 3.607 ; 3.607 ; Fall       ; clk_divider:divider|out_clk_inner ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+


+----------------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                                  ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; Data Port ; Clock Port                        ; Rise  ; Fall  ; Clock Edge ; Clock Reference                   ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; din       ; clk_divider:divider|out_clk_inner ; 3.166 ; 3.166 ; Rise       ; clk_divider:divider|out_clk_inner ;
; sclk      ; clk_divider:divider|out_clk_inner ; 2.866 ;       ; Rise       ; clk_divider:divider|out_clk_inner ;
; sync      ; clk_divider:divider|out_clk_inner ; 3.320 ; 3.320 ; Rise       ; clk_divider:divider|out_clk_inner ;
; ldac      ; clk_divider:divider|out_clk_inner ; 3.171 ; 3.171 ; Fall       ; clk_divider:divider|out_clk_inner ;
; sclk      ; clk_divider:divider|out_clk_inner ; 3.626 ; 2.866 ; Fall       ; clk_divider:divider|out_clk_inner ;
; sync      ; clk_divider:divider|out_clk_inner ; 3.607 ; 3.607 ; Fall       ; clk_divider:divider|out_clk_inner ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+


+---------------------------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                                               ;
+------------------------------------+----------+--------+----------+---------+---------------------+
; Clock                              ; Setup    ; Hold   ; Recovery ; Removal ; Minimum Pulse Width ;
+------------------------------------+----------+--------+----------+---------+---------------------+
; Worst-case Slack                   ; -7.549   ; -2.597 ; N/A      ; N/A     ; -1.941              ;
;  clk                               ; -3.101   ; -2.597 ; N/A      ; N/A     ; -1.941              ;
;  clk_divider:divider|out_clk_inner ; -7.549   ; 0.215  ; N/A      ; N/A     ; -0.742              ;
; Design-wide TNS                    ; -199.963 ; -2.597 ; 0.0      ; 0.0     ; -79.109             ;
;  clk                               ; -14.657  ; -2.597 ; N/A      ; N/A     ; -15.297             ;
;  clk_divider:divider|out_clk_inner ; -185.306 ; 0.000  ; N/A      ; N/A     ; -63.812             ;
+------------------------------------+----------+--------+----------+---------+---------------------+


+---------------------------------------------------------------------------------------------------------------------+
; Setup Times                                                                                                         ;
+--------------+-----------------------------------+--------+--------+------------+-----------------------------------+
; Data Port    ; Clock Port                        ; Rise   ; Fall   ; Clock Edge ; Clock Reference                   ;
+--------------+-----------------------------------+--------+--------+------------+-----------------------------------+
; sin_freq[*]  ; clk_divider:divider|out_clk_inner ; 10.469 ; 10.469 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[0] ; clk_divider:divider|out_clk_inner ; 9.953  ; 9.953  ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[1] ; clk_divider:divider|out_clk_inner ; 9.705  ; 9.705  ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[2] ; clk_divider:divider|out_clk_inner ; 9.640  ; 9.640  ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[3] ; clk_divider:divider|out_clk_inner ; 9.414  ; 9.414  ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[4] ; clk_divider:divider|out_clk_inner ; 10.143 ; 10.143 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[5] ; clk_divider:divider|out_clk_inner ; 10.469 ; 10.469 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[6] ; clk_divider:divider|out_clk_inner ; 9.924  ; 9.924  ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[7] ; clk_divider:divider|out_clk_inner ; 9.963  ; 9.963  ; Fall       ; clk_divider:divider|out_clk_inner ;
+--------------+-----------------------------------+--------+--------+------------+-----------------------------------+


+---------------------------------------------------------------------------------------------------------------------+
; Hold Times                                                                                                          ;
+--------------+-----------------------------------+--------+--------+------------+-----------------------------------+
; Data Port    ; Clock Port                        ; Rise   ; Fall   ; Clock Edge ; Clock Reference                   ;
+--------------+-----------------------------------+--------+--------+------------+-----------------------------------+
; sin_freq[*]  ; clk_divider:divider|out_clk_inner ; -2.673 ; -2.673 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[0] ; clk_divider:divider|out_clk_inner ; -2.673 ; -2.673 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[1] ; clk_divider:divider|out_clk_inner ; -2.963 ; -2.963 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[2] ; clk_divider:divider|out_clk_inner ; -2.948 ; -2.948 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[3] ; clk_divider:divider|out_clk_inner ; -2.790 ; -2.790 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[4] ; clk_divider:divider|out_clk_inner ; -2.928 ; -2.928 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[5] ; clk_divider:divider|out_clk_inner ; -3.105 ; -3.105 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[6] ; clk_divider:divider|out_clk_inner ; -2.831 ; -2.831 ; Fall       ; clk_divider:divider|out_clk_inner ;
;  sin_freq[7] ; clk_divider:divider|out_clk_inner ; -2.900 ; -2.900 ; Fall       ; clk_divider:divider|out_clk_inner ;
+--------------+-----------------------------------+--------+--------+------------+-----------------------------------+


+----------------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                          ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; Data Port ; Clock Port                        ; Rise  ; Fall  ; Clock Edge ; Clock Reference                   ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; din       ; clk_divider:divider|out_clk_inner ; 7.043 ; 7.043 ; Rise       ; clk_divider:divider|out_clk_inner ;
; sclk      ; clk_divider:divider|out_clk_inner ; 7.479 ;       ; Rise       ; clk_divider:divider|out_clk_inner ;
; sync      ; clk_divider:divider|out_clk_inner ; 7.584 ; 7.584 ; Rise       ; clk_divider:divider|out_clk_inner ;
; ldac      ; clk_divider:divider|out_clk_inner ; 7.053 ; 7.053 ; Fall       ; clk_divider:divider|out_clk_inner ;
; sclk      ; clk_divider:divider|out_clk_inner ; 8.508 ; 8.508 ; Fall       ; clk_divider:divider|out_clk_inner ;
; sync      ; clk_divider:divider|out_clk_inner ; 8.521 ; 8.521 ; Fall       ; clk_divider:divider|out_clk_inner ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+


+----------------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                                  ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; Data Port ; Clock Port                        ; Rise  ; Fall  ; Clock Edge ; Clock Reference                   ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; din       ; clk_divider:divider|out_clk_inner ; 3.166 ; 3.166 ; Rise       ; clk_divider:divider|out_clk_inner ;
; sclk      ; clk_divider:divider|out_clk_inner ; 2.866 ;       ; Rise       ; clk_divider:divider|out_clk_inner ;
; sync      ; clk_divider:divider|out_clk_inner ; 3.320 ; 3.320 ; Rise       ; clk_divider:divider|out_clk_inner ;
; ldac      ; clk_divider:divider|out_clk_inner ; 3.171 ; 3.171 ; Fall       ; clk_divider:divider|out_clk_inner ;
; sclk      ; clk_divider:divider|out_clk_inner ; 3.626 ; 2.866 ; Fall       ; clk_divider:divider|out_clk_inner ;
; sync      ; clk_divider:divider|out_clk_inner ; 3.607 ; 3.607 ; Fall       ; clk_divider:divider|out_clk_inner ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+


+-------------------------------------------------------------------------------------------------------------------+
; Setup Transfers                                                                                                   ;
+-----------------------------------+-----------------------------------+----------+----------+----------+----------+
; From Clock                        ; To Clock                          ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+-----------------------------------+-----------------------------------+----------+----------+----------+----------+
; clk                               ; clk                               ; 108      ; 0        ; 0        ; 0        ;
; clk_divider:divider|out_clk_inner ; clk                               ; 1        ; 1        ; 0        ; 0        ;
; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 2763     ; 70       ; 60       ; 371      ;
+-----------------------------------+-----------------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-------------------------------------------------------------------------------------------------------------------+
; Hold Transfers                                                                                                    ;
+-----------------------------------+-----------------------------------+----------+----------+----------+----------+
; From Clock                        ; To Clock                          ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+-----------------------------------+-----------------------------------+----------+----------+----------+----------+
; clk                               ; clk                               ; 108      ; 0        ; 0        ; 0        ;
; clk_divider:divider|out_clk_inner ; clk                               ; 1        ; 1        ; 0        ; 0        ;
; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 2763     ; 70       ; 60       ; 371      ;
+-----------------------------------+-----------------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 8     ; 8    ;
; Unconstrained Input Port Paths  ; 80    ; 80   ;
; Unconstrained Output Ports      ; 4     ; 4    ;
; Unconstrained Output Port Paths ; 6     ; 6    ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 12.1 Build 243 01/31/2013 Service Pack 1 SJ Web Edition
    Info: Processing started: Wed Oct 07 00:50:16 2020
Info: Command: quartus_sta lab3 -c lab3
Info: qsta_default_script.tcl version: #1
Info (11104): Parallel Compilation has detected 8 hyper-threaded processors. However, the extra hyper-threaded processors will not be used by default. Parallel Compilation will use 4 of the 4 physical processors detected instead.
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Critical Warning (332012): Synopsys Design Constraints File file not found: 'lab3.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name clk clk
    Info (332105): create_clock -period 1.000 -name clk_divider:divider|out_clk_inner clk_divider:divider|out_clk_inner
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -7.549
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -7.549      -185.306 clk_divider:divider|out_clk_inner 
    Info (332119):    -3.101       -14.657 clk 
Info (332146): Worst-case hold slack is -2.597
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.597        -2.597 clk 
    Info (332119):     0.499         0.000 clk_divider:divider|out_clk_inner 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.941
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.941       -15.297 clk 
    Info (332119):    -0.742       -63.812 clk_divider:divider|out_clk_inner 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -1.689
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.689       -34.064 clk_divider:divider|out_clk_inner 
    Info (332119):    -0.291        -0.581 clk 
Info (332146): Worst-case hold slack is -1.399
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.399        -1.399 clk 
    Info (332119):     0.215         0.000 clk_divider:divider|out_clk_inner 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -10.380 clk 
    Info (332119):    -0.500       -43.000 clk_divider:divider|out_clk_inner 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 3 warnings
    Info: Peak virtual memory: 474 megabytes
    Info: Processing ended: Wed Oct 07 00:50:19 2020
    Info: Elapsed time: 00:00:03
    Info: Total CPU time (on all processors): 00:00:03


