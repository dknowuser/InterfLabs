TimeQuest Timing Analyzer report for lab2
Tue Oct 06 13:34:00 2020
Quartus II 64-Bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'clk_divider:divider|out_clk_inner'
 12. Slow Model Setup: 'clk'
 13. Slow Model Hold: 'clk'
 14. Slow Model Hold: 'clk_divider:divider|out_clk_inner'
 15. Slow Model Minimum Pulse Width: 'clk'
 16. Slow Model Minimum Pulse Width: 'clk_divider:divider|out_clk_inner'
 17. Setup Times
 18. Hold Times
 19. Clock to Output Times
 20. Minimum Clock to Output Times
 21. Fast Model Setup Summary
 22. Fast Model Hold Summary
 23. Fast Model Recovery Summary
 24. Fast Model Removal Summary
 25. Fast Model Minimum Pulse Width Summary
 26. Fast Model Setup: 'clk_divider:divider|out_clk_inner'
 27. Fast Model Setup: 'clk'
 28. Fast Model Hold: 'clk'
 29. Fast Model Hold: 'clk_divider:divider|out_clk_inner'
 30. Fast Model Minimum Pulse Width: 'clk'
 31. Fast Model Minimum Pulse Width: 'clk_divider:divider|out_clk_inner'
 32. Setup Times
 33. Hold Times
 34. Clock to Output Times
 35. Minimum Clock to Output Times
 36. Multicorner Timing Analysis Summary
 37. Setup Times
 38. Hold Times
 39. Clock to Output Times
 40. Minimum Clock to Output Times
 41. Setup Transfers
 42. Hold Transfers
 43. Report TCCS
 44. Report RSKM
 45. Unconstrained Paths
 46. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+-----------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                       ;
+--------------------+--------------------------------------------------------------------+
; Quartus II Version ; Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version ;
; Revision Name      ; lab2                                                               ;
; Device Family      ; Cyclone II                                                         ;
; Device Name        ; EP2C5Q208C8                                                        ;
; Timing Models      ; Final                                                              ;
; Delay Model        ; Combined                                                           ;
; Rise/Fall Delays   ; Unavailable                                                        ;
+--------------------+--------------------------------------------------------------------+


+------------------------------------------+
; Parallel Compilation                     ;
+----------------------------+-------------+
; Processors                 ; Number      ;
+----------------------------+-------------+
; Number detected on machine ; 2           ;
; Maximum allowed            ; 2           ;
;                            ;             ;
; Average used               ; 1.00        ;
; Maximum used               ; 2           ;
;                            ;             ;
; Usage by Processor         ; % Time Used ;
;     Processor 1            ; 100.0%      ;
;     Processor 2            ; < 0.1%      ;
+----------------------------+-------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                                                                               ;
+-----------------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------------------------------------+
; Clock Name                        ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets                               ;
+-----------------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------------------------------------+
; clk                               ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clk }                               ;
; clk_divider:divider|out_clk_inner ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clk_divider:divider|out_clk_inner } ;
+-----------------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------------------------------------+


+-------------------------------------------------------------------------+
; Slow Model Fmax Summary                                                 ;
+------------+-----------------+-----------------------------------+------+
; Fmax       ; Restricted Fmax ; Clock Name                        ; Note ;
+------------+-----------------+-----------------------------------+------+
; 150.15 MHz ; 150.15 MHz      ; clk_divider:divider|out_clk_inner ;      ;
; 249.0 MHz  ; 249.0 MHz       ; clk                               ;      ;
+------------+-----------------+-----------------------------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+------------------------------------------------------------+
; Slow Model Setup Summary                                   ;
+-----------------------------------+--------+---------------+
; Clock                             ; Slack  ; End Point TNS ;
+-----------------------------------+--------+---------------+
; clk_divider:divider|out_clk_inner ; -3.724 ; -64.026       ;
; clk                               ; -3.016 ; -16.587       ;
+-----------------------------------+--------+---------------+


+------------------------------------------------------------+
; Slow Model Hold Summary                                    ;
+-----------------------------------+--------+---------------+
; Clock                             ; Slack  ; End Point TNS ;
+-----------------------------------+--------+---------------+
; clk                               ; -2.580 ; -2.580        ;
; clk_divider:divider|out_clk_inner ; 0.499  ; 0.000         ;
+-----------------------------------+--------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+------------------------------------------------------------+
; Slow Model Minimum Pulse Width Summary                     ;
+-----------------------------------+--------+---------------+
; Clock                             ; Slack  ; End Point TNS ;
+-----------------------------------+--------+---------------+
; clk                               ; -1.941 ; -15.297       ;
; clk_divider:divider|out_clk_inner ; -0.742 ; -32.648       ;
+-----------------------------------+--------+---------------+


+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clk_divider:divider|out_clk_inner'                                                                                                                                                    ;
+--------+-------------------------------------+------------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+
; Slack  ; From Node                           ; To Node                                  ; Launch Clock                      ; Latch Clock                       ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------------------+------------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+
; -3.724 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.753      ;
; -3.724 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.753      ;
; -3.724 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.753      ;
; -3.685 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.714      ;
; -3.685 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.714      ;
; -3.685 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.714      ;
; -3.685 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.714      ;
; -3.685 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.714      ;
; -3.685 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.714      ;
; -3.685 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.714      ;
; -3.605 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.634      ;
; -3.605 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.634      ;
; -3.605 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.634      ;
; -3.566 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.595      ;
; -3.566 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.595      ;
; -3.566 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.595      ;
; -3.566 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.595      ;
; -3.566 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.595      ;
; -3.566 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.595      ;
; -3.566 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.595      ;
; -3.561 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.590      ;
; -3.561 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.590      ;
; -3.561 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.590      ;
; -3.522 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.551      ;
; -3.522 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.551      ;
; -3.522 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.551      ;
; -3.522 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.551      ;
; -3.522 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.551      ;
; -3.522 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.551      ;
; -3.522 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.551      ;
; -3.316 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.345      ;
; -3.237 ; SPI_controller:my_SPI|bit_number[3] ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.266      ;
; -3.237 ; SPI_controller:my_SPI|bit_number[3] ; SPI_controller:my_SPI|input_register[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.266      ;
; -3.237 ; SPI_controller:my_SPI|bit_number[3] ; SPI_controller:my_SPI|input_register[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.266      ;
; -3.198 ; SPI_controller:my_SPI|bit_number[3] ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.227      ;
; -3.198 ; SPI_controller:my_SPI|bit_number[3] ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.227      ;
; -3.198 ; SPI_controller:my_SPI|bit_number[3] ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.227      ;
; -3.198 ; SPI_controller:my_SPI|bit_number[3] ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.227      ;
; -3.198 ; SPI_controller:my_SPI|bit_number[3] ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.227      ;
; -3.198 ; SPI_controller:my_SPI|bit_number[3] ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.227      ;
; -3.198 ; SPI_controller:my_SPI|bit_number[3] ; SPI_controller:my_SPI|input_register[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.227      ;
; -3.197 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.226      ;
; -3.184 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.213      ;
; -3.153 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.182      ;
; -3.065 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.094      ;
; -3.021 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 4.050      ;
; -2.830 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 3.372      ;
; -2.829 ; SPI_controller:my_SPI|bit_number[3] ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 3.858      ;
; -2.757 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 3.299      ;
; -2.697 ; SPI_controller:my_SPI|bit_number[3] ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 3.726      ;
; -2.607 ; SPI_controller:my_SPI|bit_number[4] ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 3.636      ;
; -2.607 ; SPI_controller:my_SPI|bit_number[4] ; SPI_controller:my_SPI|input_register[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 3.636      ;
; -2.607 ; SPI_controller:my_SPI|bit_number[4] ; SPI_controller:my_SPI|input_register[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 3.636      ;
; -2.568 ; SPI_controller:my_SPI|bit_number[4] ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 3.597      ;
; -2.568 ; SPI_controller:my_SPI|bit_number[4] ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 3.597      ;
; -2.568 ; SPI_controller:my_SPI|bit_number[4] ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 3.597      ;
; -2.568 ; SPI_controller:my_SPI|bit_number[4] ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 3.597      ;
; -2.568 ; SPI_controller:my_SPI|bit_number[4] ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 3.597      ;
; -2.568 ; SPI_controller:my_SPI|bit_number[4] ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 3.597      ;
; -2.568 ; SPI_controller:my_SPI|bit_number[4] ; SPI_controller:my_SPI|input_register[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 3.597      ;
; -2.540 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 3.082      ;
; -2.535 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 3.077      ;
; -2.527 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 3.069      ;
; -2.527 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 3.069      ;
; -2.526 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 3.068      ;
; -2.502 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; -0.013     ; 3.029      ;
; -2.467 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 3.009      ;
; -2.467 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|input_register[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 3.009      ;
; -2.467 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|input_register[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 3.009      ;
; -2.453 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 2.995      ;
; -2.428 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 2.970      ;
; -2.428 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 2.970      ;
; -2.428 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 2.970      ;
; -2.428 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 2.970      ;
; -2.428 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|input_register[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 2.970      ;
; -2.420 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 2.962      ;
; -2.420 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|input_register[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 2.962      ;
; -2.420 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|input_register[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 2.962      ;
; -2.415 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|input_register[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 2.957      ;
; -2.383 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; -0.013     ; 2.910      ;
; -2.376 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 2.918      ;
; -2.339 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; -0.013     ; 2.866      ;
; -2.331 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|hold_start         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; -0.013     ; 2.858      ;
; -2.245 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|bit_number[0]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.013      ; 2.798      ;
; -2.245 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|bit_number[1]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.013      ; 2.798      ;
; -2.245 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|bit_number[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.013      ; 2.798      ;
; -2.245 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.013      ; 2.798      ;
; -2.245 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.013      ; 2.798      ;
; -2.212 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|hold_start         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; -0.013     ; 2.739      ;
; -2.199 ; SPI_controller:my_SPI|bit_number[4] ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 3.228      ;
; -2.168 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|hold_start         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; -0.013     ; 2.695      ;
; -2.123 ; SPI_controller:my_SPI|bit_number[4] ; SPI_controller:my_SPI|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; -0.013     ; 2.650      ;
; -2.072 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 2.614      ;
; -2.067 ; SPI_controller:my_SPI|bit_number[4] ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.011     ; 3.096      ;
; -2.061 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|bit_number[0]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.013      ; 2.614      ;
; -2.061 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|bit_number[1]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.013      ; 2.614      ;
; -2.061 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|bit_number[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.013      ; 2.614      ;
; -2.061 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.013      ; 2.614      ;
; -2.061 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.013      ; 2.614      ;
; -2.059 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 2.601      ;
+--------+-------------------------------------+------------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clk'                                                                                                                                                   ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                         ; To Node                           ; Launch Clock                      ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+
; -3.016 ; clk_divider:divider|counter[0]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 4.056      ;
; -3.015 ; clk_divider:divider|counter[2]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 4.055      ;
; -3.011 ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 4.051      ;
; -3.010 ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 4.050      ;
; -2.943 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.983      ;
; -2.942 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.982      ;
; -2.865 ; clk_divider:divider|counter[1]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.905      ;
; -2.809 ; clk_divider:divider|counter[4]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.849      ;
; -2.805 ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.845      ;
; -2.804 ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.844      ;
; -2.792 ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.832      ;
; -2.791 ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.831      ;
; -2.641 ; clk_divider:divider|counter[3]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.681      ;
; -2.637 ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.677      ;
; -2.636 ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.676      ;
; -2.633 ; clk_divider:divider|counter[5]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.673      ;
; -2.629 ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.669      ;
; -2.628 ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.668      ;
; -2.596 ; clk_divider:divider|counter[6]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.636      ;
; -2.592 ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.632      ;
; -2.591 ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 3.631      ;
; -1.656 ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.696      ;
; -1.646 ; clk_divider:divider|counter[7]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.686      ;
; -1.642 ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.682      ;
; -1.641 ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.681      ;
; -1.588 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.628      ;
; -1.570 ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.610      ;
; -1.502 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.542      ;
; -1.484 ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.524      ;
; -1.450 ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.490      ;
; -1.437 ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.477      ;
; -1.416 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.456      ;
; -1.364 ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.404      ;
; -1.351 ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.391      ;
; -1.294 ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.334      ;
; -1.288 ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.328      ;
; -1.282 ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.322      ;
; -1.278 ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.318      ;
; -1.265 ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.305      ;
; -1.251 ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.291      ;
; -1.226 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.266      ;
; -1.202 ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.242      ;
; -1.196 ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.236      ;
; -1.110 ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.150      ;
; -1.075 ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.115      ;
; -1.054 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 2.094      ;
; -0.920 ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.960      ;
; -0.903 ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.943      ;
; -0.771 ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.811      ;
; -0.729 ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.769      ;
; -0.723 ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.763      ;
; -0.684 ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.724      ;
; -0.492 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.532      ;
; -0.301 ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.341      ;
; 2.814  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk         ; 0.500        ; 2.775      ; 0.805      ;
; 3.314  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk         ; 1.000        ; 2.775      ; 0.805      ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clk'                                                                                                                                                    ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                         ; To Node                           ; Launch Clock                      ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+
; -2.580 ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk         ; 0.000        ; 2.775      ; 0.805      ;
; -2.080 ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk         ; -0.500       ; 2.775      ; 0.805      ;
; 1.035  ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.341      ;
; 1.226  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.532      ;
; 1.418  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.724      ;
; 1.457  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.763      ;
; 1.463  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.769      ;
; 1.505  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.811      ;
; 1.637  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.943      ;
; 1.654  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.960      ;
; 1.788  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.094      ;
; 1.809  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.115      ;
; 1.844  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.150      ;
; 1.930  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.236      ;
; 1.936  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.242      ;
; 1.960  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.266      ;
; 1.985  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.291      ;
; 1.999  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.305      ;
; 2.012  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.318      ;
; 2.016  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.322      ;
; 2.022  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.328      ;
; 2.028  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.334      ;
; 2.085  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.391      ;
; 2.098  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.404      ;
; 2.150  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.456      ;
; 2.161  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.467      ;
; 2.171  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.477      ;
; 2.184  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.490      ;
; 2.218  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.524      ;
; 2.230  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.536      ;
; 2.236  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.542      ;
; 2.304  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.610      ;
; 2.322  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.628      ;
; 2.375  ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.681      ;
; 2.376  ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.682      ;
; 2.380  ; clk_divider:divider|counter[7]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.686      ;
; 2.390  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.696      ;
; 2.519  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.825      ;
; 2.663  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.969      ;
; 2.664  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.970      ;
; 2.668  ; clk_divider:divider|counter[6]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.974      ;
; 2.678  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 2.984      ;
; 2.705  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.011      ;
; 2.815  ; clk_divider:divider|counter[3]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.121      ;
; 2.905  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.211      ;
; 2.906  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.212      ;
; 2.910  ; clk_divider:divider|counter[4]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.216      ;
; 2.929  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.235      ;
; 2.974  ; clk_divider:divider|counter[1]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.280      ;
; 2.983  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.289      ;
; 2.984  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.290      ;
; 2.988  ; clk_divider:divider|counter[5]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.294      ;
; 2.997  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.303      ;
; 3.129  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.435      ;
; 3.399  ; clk_divider:divider|counter[0]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.705      ;
; 3.425  ; clk_divider:divider|counter[2]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 3.731      ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clk_divider:divider|out_clk_inner'                                                                                                                                                         ;
+-------+------------------------------------------+------------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+
; Slack ; From Node                                ; To Node                                  ; Launch Clock                      ; Latch Clock                       ; Relationship ; Clock Skew ; Data Delay ;
+-------+------------------------------------------+------------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+
; 0.499 ; SPI_controller:my_SPI|input_register[15] ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.805      ;
; 0.499 ; SPI_controller:my_SPI|start_sync         ; SPI_controller:my_SPI|start_sync         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.805      ;
; 0.499 ; SPI_controller:my_SPI|update             ; SPI_controller:my_SPI|update             ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.805      ;
; 0.499 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.805      ;
; 0.869 ; SPI_controller:my_SPI|update             ; SPI_controller:my_SPI|inner_ldac         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.175      ;
; 1.056 ; SPI_controller:my_SPI|inner_ldac         ; SPI_controller:my_SPI|update             ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.362      ;
; 1.160 ; SPI_controller:my_SPI|input_register[10] ; SPI_controller:my_SPI|input_register[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.466      ;
; 1.174 ; SPI_controller:my_SPI|input_register[6]  ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.480      ;
; 1.195 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.501      ;
; 1.207 ; SPI_controller:my_SPI|input_register[4]  ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.513      ;
; 1.218 ; SPI_controller:my_SPI|input_register[13] ; SPI_controller:my_SPI|input_register[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.524      ;
; 1.245 ; SPI_controller:my_SPI|bit_number[3]      ; SPI_controller:my_SPI|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.551      ;
; 1.248 ; SPI_controller:my_SPI|bit_number[2]      ; SPI_controller:my_SPI|bit_number[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.554      ;
; 1.251 ; SPI_controller:my_SPI|bit_number[0]      ; SPI_controller:my_SPI|bit_number[0]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.557      ;
; 1.261 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|start_sync         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.000      ; 1.067      ;
; 1.414 ; SPI_controller:my_SPI|update             ; SPI_controller:my_SPI|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.013     ; 1.707      ;
; 1.460 ; SPI_controller:my_SPI|input_register[9]  ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.766      ;
; 1.461 ; SPI_controller:my_SPI|input_register[5]  ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.767      ;
; 1.487 ; SPI_controller:my_SPI|input_register[7]  ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.793      ;
; 1.538 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.844      ;
; 1.545 ; SPI_controller:my_SPI|bit_number[1]      ; SPI_controller:my_SPI|bit_number[1]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 1.851      ;
; 1.596 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|update             ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.013      ; 1.915      ;
; 1.596 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|inner_ldac         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.013      ; 1.915      ;
; 1.681 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|input_register[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 1.489      ;
; 1.685 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 1.493      ;
; 1.687 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|input_register[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 1.495      ;
; 1.725 ; SPI_controller:my_SPI|bit_number[3]      ; SPI_controller:my_SPI|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.031      ;
; 1.727 ; SPI_controller:my_SPI|bit_number[0]      ; SPI_controller:my_SPI|bit_number[1]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.033      ;
; 1.728 ; SPI_controller:my_SPI|bit_number[2]      ; SPI_controller:my_SPI|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.034      ;
; 1.778 ; SPI_controller:my_SPI|input_register[4]  ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.084      ;
; 1.792 ; SPI_controller:my_SPI|input_register[14] ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.098      ;
; 1.796 ; SPI_controller:my_SPI|input_register[8]  ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.102      ;
; 1.813 ; SPI_controller:my_SPI|bit_number[0]      ; SPI_controller:my_SPI|bit_number[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.119      ;
; 1.814 ; SPI_controller:my_SPI|bit_number[2]      ; SPI_controller:my_SPI|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.120      ;
; 1.834 ; SPI_controller:my_SPI|bit_number[3]      ; SPI_controller:my_SPI|update             ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.000      ; 1.640      ;
; 1.836 ; SPI_controller:my_SPI|inner_ldac         ; SPI_controller:my_SPI|hold_start         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.013     ; 2.129      ;
; 1.878 ; SPI_controller:my_SPI|input_register[12] ; SPI_controller:my_SPI|input_register[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.184      ;
; 1.888 ; SPI_controller:my_SPI|input_register[10] ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.194      ;
; 1.899 ; SPI_controller:my_SPI|bit_number[0]      ; SPI_controller:my_SPI|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.205      ;
; 1.908 ; SPI_controller:my_SPI|input_register[6]  ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.214      ;
; 1.942 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|update             ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.000      ; 1.748      ;
; 1.971 ; SPI_controller:my_SPI|inner_ldac         ; SPI_controller:my_SPI|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.013     ; 2.264      ;
; 1.979 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|hold_start         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; -0.013     ; 1.772      ;
; 1.985 ; SPI_controller:my_SPI|bit_number[0]      ; SPI_controller:my_SPI|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.291      ;
; 2.001 ; SPI_controller:my_SPI|update             ; SPI_controller:my_SPI|hold_start         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.013     ; 2.294      ;
; 2.010 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|hold_start         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.316      ;
; 2.025 ; SPI_controller:my_SPI|bit_number[1]      ; SPI_controller:my_SPI|bit_number[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.331      ;
; 2.036 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|start_sync         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.013     ; 2.329      ;
; 2.070 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 1.878      ;
; 2.077 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 1.885      ;
; 2.083 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 1.891      ;
; 2.084 ; SPI_controller:my_SPI|bit_number[3]      ; SPI_controller:my_SPI|start_sync         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.013     ; 2.377      ;
; 2.111 ; SPI_controller:my_SPI|bit_number[1]      ; SPI_controller:my_SPI|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.417      ;
; 2.158 ; SPI_controller:my_SPI|bit_number[1]      ; SPI_controller:my_SPI|update             ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.000      ; 1.964      ;
; 2.166 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|input_register[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 1.974      ;
; 2.167 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|input_register[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 1.975      ;
; 2.194 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|hold_start         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.500      ;
; 2.197 ; SPI_controller:my_SPI|bit_number[1]      ; SPI_controller:my_SPI|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.503      ;
; 2.200 ; SPI_controller:my_SPI|input_register[11] ; SPI_controller:my_SPI|input_register[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.506      ;
; 2.202 ; SPI_controller:my_SPI|bit_number[2]      ; SPI_controller:my_SPI|update             ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.000      ; 2.008      ;
; 2.217 ; SPI_controller:my_SPI|input_register[11] ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.523      ;
; 2.218 ; SPI_controller:my_SPI|input_register[7]  ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.524      ;
; 2.227 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 2.035      ;
; 2.229 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 2.037      ;
; 2.229 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|input_register[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 2.037      ;
; 2.233 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 2.041      ;
; 2.234 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 2.042      ;
; 2.235 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 2.043      ;
; 2.236 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 2.044      ;
; 2.267 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|bit_number[0]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.573      ;
; 2.267 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|bit_number[1]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.573      ;
; 2.267 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|bit_number[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.573      ;
; 2.267 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.573      ;
; 2.321 ; SPI_controller:my_SPI|bit_number[0]      ; SPI_controller:my_SPI|update             ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.000      ; 2.127      ;
; 2.414 ; SPI_controller:my_SPI|input_register[9]  ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.720      ;
; 2.425 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|input_register[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 2.233      ;
; 2.462 ; SPI_controller:my_SPI|bit_number[1]      ; SPI_controller:my_SPI|start_sync         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.013     ; 2.755      ;
; 2.492 ; SPI_controller:my_SPI|input_register[5]  ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.798      ;
; 2.525 ; SPI_controller:my_SPI|bit_number[0]      ; SPI_controller:my_SPI|start_sync         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.013     ; 2.818      ;
; 2.526 ; SPI_controller:my_SPI|input_register[8]  ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 2.832      ;
; 2.531 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 2.339      ;
; 2.533 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 2.341      ;
; 2.537 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 2.345      ;
; 2.538 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 2.346      ;
; 2.539 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 2.347      ;
; 2.540 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 2.348      ;
; 2.565 ; SPI_controller:my_SPI|bit_number[2]      ; SPI_controller:my_SPI|start_sync         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.013     ; 2.858      ;
; 2.578 ; SPI_controller:my_SPI|bit_number[3]      ; SPI_controller:my_SPI|hold_start         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; -0.013     ; 2.371      ;
; 2.659 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 2.467      ;
; 2.661 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 2.469      ;
; 2.664 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|bit_number[0]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.013      ; 2.483      ;
; 2.664 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|bit_number[1]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.013      ; 2.483      ;
; 2.664 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|bit_number[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.013      ; 2.483      ;
; 2.664 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.013      ; 2.483      ;
; 2.664 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.013      ; 2.483      ;
; 2.749 ; SPI_controller:my_SPI|bit_number[3]      ; SPI_controller:my_SPI|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; -0.013     ; 2.542      ;
; 2.786 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|start_sync         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.000      ; 2.592      ;
; 2.799 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.011     ; 3.094      ;
; 2.801 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.011     ; 3.096      ;
; 2.844 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|bit_number[0]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.013      ; 2.663      ;
+-------+------------------------------------------+------------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clk'                                                                              ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                            ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------------+
; -1.941 ; 1.000        ; 2.941          ; Port Rate        ; clk   ; Rise       ; clk                               ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[0]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[0]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[1]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[1]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[2]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[2]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[3]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[3]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[4]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[4]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[5]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[5]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[6]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[6]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[7]    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[7]    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|out_clk_inner ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|out_clk_inner ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk|combout                       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk|combout                       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|inclk[0]              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|inclk[0]              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|outclk                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|outclk                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[2]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[2]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[3]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[3]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[4]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[4]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[5]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[5]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[6]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[6]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[7]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[7]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|out_clk_inner|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|out_clk_inner|clk         ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clk_divider:divider|out_clk_inner'                                                                                   ;
+--------+--------------+----------------+------------------+-----------------------------------+------------+------------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock                             ; Clock Edge ; Target                                   ;
+--------+--------------+----------------+------------------+-----------------------------------+------------+------------------------------------------+
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[0]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[0]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[1]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[1]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[2]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[2]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[3]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[3]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[4]      ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[4]      ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|hold_start         ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|hold_start         ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|inner_ldac         ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|inner_ldac         ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[10] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[10] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[11] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[11] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[12] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[12] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[13] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[13] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[14] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[14] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[15] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[15] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[4]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[4]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[5]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[5]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[6]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[6]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[7]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[7]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[8]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[8]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[9]  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[9]  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|start              ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|start              ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|start_sync         ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|start_sync         ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|update             ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|update             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner|regout             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner|regout             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner~clkctrl|inclk[0]   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner~clkctrl|inclk[0]   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner~clkctrl|outclk     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner~clkctrl|outclk     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[0]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[0]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[1]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[1]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[2]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[2]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[3]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[3]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[4]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[4]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|hold_start|clk                    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|hold_start|clk                    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|inner_ldac|clk                    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|inner_ldac|clk                    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[10]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[10]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[11]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[11]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[12]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[12]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[13]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[13]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[14]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[14]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[15]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[15]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[4]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[4]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[5]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[5]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[6]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[6]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[7]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[7]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[8]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[8]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[9]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[9]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|start_sync|clk                    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|start_sync|clk                    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|start|clk                         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|start|clk                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|update|clk                        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|update|clk                        ;
+--------+--------------+----------------+------------------+-----------------------------------+------------+------------------------------------------+


+-------------------------------------------------------------------------------------------------------------------+
; Setup Times                                                                                                       ;
+--------------+-----------------------------------+-------+-------+------------+-----------------------------------+
; Data Port    ; Clock Port                        ; Rise  ; Fall  ; Clock Edge ; Clock Reference                   ;
+--------------+-----------------------------------+-------+-------+------------+-----------------------------------+
; data_msb[*]  ; clk_divider:divider|out_clk_inner ; 7.216 ; 7.216 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[0] ; clk_divider:divider|out_clk_inner ; 6.414 ; 6.414 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[1] ; clk_divider:divider|out_clk_inner ; 6.858 ; 6.858 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[2] ; clk_divider:divider|out_clk_inner ; 6.551 ; 6.551 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[3] ; clk_divider:divider|out_clk_inner ; 6.975 ; 6.975 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[4] ; clk_divider:divider|out_clk_inner ; 6.964 ; 6.964 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[5] ; clk_divider:divider|out_clk_inner ; 7.216 ; 7.216 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[6] ; clk_divider:divider|out_clk_inner ; 6.921 ; 6.921 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[7] ; clk_divider:divider|out_clk_inner ; 7.026 ; 7.026 ; Rise       ; clk_divider:divider|out_clk_inner ;
+--------------+-----------------------------------+-------+-------+------------+-----------------------------------+


+---------------------------------------------------------------------------------------------------------------------+
; Hold Times                                                                                                          ;
+--------------+-----------------------------------+--------+--------+------------+-----------------------------------+
; Data Port    ; Clock Port                        ; Rise   ; Fall   ; Clock Edge ; Clock Reference                   ;
+--------------+-----------------------------------+--------+--------+------------+-----------------------------------+
; data_msb[*]  ; clk_divider:divider|out_clk_inner ; -5.551 ; -5.551 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[0] ; clk_divider:divider|out_clk_inner ; -5.577 ; -5.577 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[1] ; clk_divider:divider|out_clk_inner ; -5.561 ; -5.561 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[2] ; clk_divider:divider|out_clk_inner ; -5.551 ; -5.551 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[3] ; clk_divider:divider|out_clk_inner ; -5.978 ; -5.978 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[4] ; clk_divider:divider|out_clk_inner ; -5.968 ; -5.968 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[5] ; clk_divider:divider|out_clk_inner ; -5.996 ; -5.996 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[6] ; clk_divider:divider|out_clk_inner ; -5.927 ; -5.927 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[7] ; clk_divider:divider|out_clk_inner ; -6.743 ; -6.743 ; Rise       ; clk_divider:divider|out_clk_inner ;
+--------------+-----------------------------------+--------+--------+------------+-----------------------------------+


+------------------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                            ;
+-----------+-----------------------------------+--------+--------+------------+-----------------------------------+
; Data Port ; Clock Port                        ; Rise   ; Fall   ; Clock Edge ; Clock Reference                   ;
+-----------+-----------------------------------+--------+--------+------------+-----------------------------------+
; din       ; clk_divider:divider|out_clk_inner ; 8.754  ; 8.754  ; Rise       ; clk_divider:divider|out_clk_inner ;
; sclk      ; clk_divider:divider|out_clk_inner ; 5.245  ;        ; Rise       ; clk_divider:divider|out_clk_inner ;
; sync      ; clk_divider:divider|out_clk_inner ; 10.015 ; 10.015 ; Rise       ; clk_divider:divider|out_clk_inner ;
; ldac      ; clk_divider:divider|out_clk_inner ; 8.285  ; 8.285  ; Fall       ; clk_divider:divider|out_clk_inner ;
; sclk      ; clk_divider:divider|out_clk_inner ; 9.612  ; 9.612  ; Fall       ; clk_divider:divider|out_clk_inner ;
; sync      ; clk_divider:divider|out_clk_inner ; 9.975  ; 9.975  ; Fall       ; clk_divider:divider|out_clk_inner ;
+-----------+-----------------------------------+--------+--------+------------+-----------------------------------+


+------------------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                                    ;
+-----------+-----------------------------------+--------+--------+------------+-----------------------------------+
; Data Port ; Clock Port                        ; Rise   ; Fall   ; Clock Edge ; Clock Reference                   ;
+-----------+-----------------------------------+--------+--------+------------+-----------------------------------+
; din       ; clk_divider:divider|out_clk_inner ; 8.754  ; 8.754  ; Rise       ; clk_divider:divider|out_clk_inner ;
; sclk      ; clk_divider:divider|out_clk_inner ; 5.245  ;        ; Rise       ; clk_divider:divider|out_clk_inner ;
; sync      ; clk_divider:divider|out_clk_inner ; 10.015 ; 10.015 ; Rise       ; clk_divider:divider|out_clk_inner ;
; ldac      ; clk_divider:divider|out_clk_inner ; 8.285  ; 8.285  ; Fall       ; clk_divider:divider|out_clk_inner ;
; sclk      ; clk_divider:divider|out_clk_inner ; 9.612  ; 5.245  ; Fall       ; clk_divider:divider|out_clk_inner ;
; sync      ; clk_divider:divider|out_clk_inner ; 9.975  ; 9.975  ; Fall       ; clk_divider:divider|out_clk_inner ;
+-----------+-----------------------------------+--------+--------+------------+-----------------------------------+


+------------------------------------------------------------+
; Fast Model Setup Summary                                   ;
+-----------------------------------+--------+---------------+
; Clock                             ; Slack  ; End Point TNS ;
+-----------------------------------+--------+---------------+
; clk_divider:divider|out_clk_inner ; -0.638 ; -10.780       ;
; clk                               ; -0.316 ; -0.939        ;
+-----------------------------------+--------+---------------+


+------------------------------------------------------------+
; Fast Model Hold Summary                                    ;
+-----------------------------------+--------+---------------+
; Clock                             ; Slack  ; End Point TNS ;
+-----------------------------------+--------+---------------+
; clk                               ; -1.385 ; -1.385        ;
; clk_divider:divider|out_clk_inner ; 0.215  ; 0.000         ;
+-----------------------------------+--------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+------------------------------------------------------------+
; Fast Model Minimum Pulse Width Summary                     ;
+-----------------------------------+--------+---------------+
; Clock                             ; Slack  ; End Point TNS ;
+-----------------------------------+--------+---------------+
; clk                               ; -1.380 ; -10.380       ;
; clk_divider:divider|out_clk_inner ; -0.500 ; -22.000       ;
+-----------------------------------+--------+---------------+


+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clk_divider:divider|out_clk_inner'                                                                                                                                                    ;
+--------+-------------------------------------+------------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+
; Slack  ; From Node                           ; To Node                                  ; Launch Clock                      ; Latch Clock                       ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------------------+------------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+
; -0.638 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.658      ;
; -0.638 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.658      ;
; -0.638 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.658      ;
; -0.635 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.655      ;
; -0.635 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.655      ;
; -0.635 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.655      ;
; -0.621 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.641      ;
; -0.621 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.641      ;
; -0.621 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.641      ;
; -0.621 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.641      ;
; -0.621 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.641      ;
; -0.621 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.641      ;
; -0.621 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.641      ;
; -0.618 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.638      ;
; -0.618 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.638      ;
; -0.618 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.638      ;
; -0.618 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.638      ;
; -0.618 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.638      ;
; -0.618 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.638      ;
; -0.618 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.638      ;
; -0.614 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.634      ;
; -0.614 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.634      ;
; -0.614 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.634      ;
; -0.614 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 1.148      ;
; -0.610 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 1.144      ;
; -0.597 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.617      ;
; -0.597 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.617      ;
; -0.597 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.617      ;
; -0.597 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.617      ;
; -0.597 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.617      ;
; -0.597 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.617      ;
; -0.597 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.617      ;
; -0.581 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 1.115      ;
; -0.581 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|input_register[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 1.115      ;
; -0.581 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|input_register[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 1.115      ;
; -0.574 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 1.108      ;
; -0.574 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|input_register[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 1.108      ;
; -0.574 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|input_register[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 1.108      ;
; -0.564 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 1.098      ;
; -0.564 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 1.098      ;
; -0.564 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 1.098      ;
; -0.564 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 1.098      ;
; -0.564 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 1.098      ;
; -0.564 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 1.098      ;
; -0.564 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|input_register[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 1.098      ;
; -0.541 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 1.075      ;
; -0.536 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 1.070      ;
; -0.534 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 1.068      ;
; -0.534 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 1.068      ;
; -0.534 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|input_register[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 1.068      ;
; -0.498 ; SPI_controller:my_SPI|bit_number[3] ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.518      ;
; -0.498 ; SPI_controller:my_SPI|bit_number[3] ; SPI_controller:my_SPI|input_register[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.518      ;
; -0.498 ; SPI_controller:my_SPI|bit_number[3] ; SPI_controller:my_SPI|input_register[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.518      ;
; -0.481 ; SPI_controller:my_SPI|bit_number[3] ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.501      ;
; -0.481 ; SPI_controller:my_SPI|bit_number[3] ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.501      ;
; -0.481 ; SPI_controller:my_SPI|bit_number[3] ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.501      ;
; -0.481 ; SPI_controller:my_SPI|bit_number[3] ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.501      ;
; -0.481 ; SPI_controller:my_SPI|bit_number[3] ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.501      ;
; -0.481 ; SPI_controller:my_SPI|bit_number[3] ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.501      ;
; -0.481 ; SPI_controller:my_SPI|bit_number[3] ; SPI_controller:my_SPI|input_register[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.501      ;
; -0.462 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|bit_number[0]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.014      ; 1.008      ;
; -0.462 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|bit_number[1]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.014      ; 1.008      ;
; -0.462 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|bit_number[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.014      ; 1.008      ;
; -0.462 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.014      ; 1.008      ;
; -0.462 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.014      ; 1.008      ;
; -0.456 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; -0.014     ; 0.974      ;
; -0.453 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; -0.014     ; 0.971      ;
; -0.449 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 0.983      ;
; -0.432 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; -0.014     ; 0.950      ;
; -0.418 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|hold_start         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; -0.014     ; 0.936      ;
; -0.415 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|hold_start         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; -0.014     ; 0.933      ;
; -0.404 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|bit_number[0]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.014      ; 0.950      ;
; -0.404 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|bit_number[1]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.014      ; 0.950      ;
; -0.404 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|bit_number[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.014      ; 0.950      ;
; -0.404 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.014      ; 0.950      ;
; -0.404 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.014      ; 0.950      ;
; -0.394 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|hold_start         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; -0.014     ; 0.912      ;
; -0.389 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.409      ;
; -0.386 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.406      ;
; -0.370 ; SPI_controller:my_SPI|bit_number[4] ; SPI_controller:my_SPI|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; -0.014     ; 0.888      ;
; -0.365 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.385      ;
; -0.346 ; SPI_controller:my_SPI|bit_number[0] ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.366      ;
; -0.343 ; SPI_controller:my_SPI|bit_number[2] ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.363      ;
; -0.332 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 0.866      ;
; -0.332 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 0.866      ;
; -0.329 ; SPI_controller:my_SPI|bit_number[4] ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.349      ;
; -0.329 ; SPI_controller:my_SPI|bit_number[4] ; SPI_controller:my_SPI|input_register[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.349      ;
; -0.329 ; SPI_controller:my_SPI|bit_number[4] ; SPI_controller:my_SPI|input_register[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.349      ;
; -0.322 ; SPI_controller:my_SPI|bit_number[1] ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.342      ;
; -0.319 ; SPI_controller:my_SPI|hold_start    ; SPI_controller:my_SPI|start_sync         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.000      ; 0.851      ;
; -0.316 ; SPI_controller:my_SPI|bit_number[3] ; SPI_controller:my_SPI|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; -0.014     ; 0.834      ;
; -0.312 ; SPI_controller:my_SPI|bit_number[4] ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.332      ;
; -0.312 ; SPI_controller:my_SPI|bit_number[4] ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.332      ;
; -0.312 ; SPI_controller:my_SPI|bit_number[4] ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.332      ;
; -0.312 ; SPI_controller:my_SPI|bit_number[4] ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.332      ;
; -0.312 ; SPI_controller:my_SPI|bit_number[4] ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.332      ;
; -0.312 ; SPI_controller:my_SPI|bit_number[4] ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.332      ;
; -0.312 ; SPI_controller:my_SPI|bit_number[4] ; SPI_controller:my_SPI|input_register[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 1.000        ; -0.012     ; 1.332      ;
; -0.303 ; SPI_controller:my_SPI|start         ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; 0.002      ; 0.837      ;
; -0.278 ; SPI_controller:my_SPI|bit_number[3] ; SPI_controller:my_SPI|hold_start         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.500        ; -0.014     ; 0.796      ;
+--------+-------------------------------------+------------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clk'                                                                                                                                                   ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                         ; To Node                           ; Launch Clock                      ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+
; -0.316 ; clk_divider:divider|counter[0]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.348      ;
; -0.312 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.344      ;
; -0.311 ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.343      ;
; -0.311 ; clk_divider:divider|counter[2]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.343      ;
; -0.307 ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.339      ;
; -0.306 ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.338      ;
; -0.263 ; clk_divider:divider|counter[1]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.295      ;
; -0.259 ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.291      ;
; -0.258 ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.290      ;
; -0.233 ; clk_divider:divider|counter[4]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.265      ;
; -0.229 ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.261      ;
; -0.228 ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.260      ;
; -0.200 ; clk_divider:divider|counter[3]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.232      ;
; -0.196 ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.228      ;
; -0.195 ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.227      ;
; -0.130 ; clk_divider:divider|counter[5]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.162      ;
; -0.126 ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.158      ;
; -0.125 ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.157      ;
; -0.108 ; clk_divider:divider|counter[6]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.140      ;
; -0.104 ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.136      ;
; -0.103 ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 1.135      ;
; 0.100  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.932      ;
; 0.105  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.927      ;
; 0.135  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.897      ;
; 0.140  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.892      ;
; 0.153  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.879      ;
; 0.160  ; clk_divider:divider|counter[7]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.872      ;
; 0.164  ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.868      ;
; 0.165  ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.867      ;
; 0.170  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.862      ;
; 0.175  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.857      ;
; 0.183  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.849      ;
; 0.188  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.844      ;
; 0.216  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.816      ;
; 0.218  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.814      ;
; 0.223  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.809      ;
; 0.251  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.781      ;
; 0.253  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.779      ;
; 0.264  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.768      ;
; 0.269  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.763      ;
; 0.273  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.759      ;
; 0.286  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.746      ;
; 0.295  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.737      ;
; 0.308  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.724      ;
; 0.317  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.715      ;
; 0.334  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.698      ;
; 0.380  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.652      ;
; 0.387  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.645      ;
; 0.435  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.597      ;
; 0.442  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.590      ;
; 0.446  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.586      ;
; 0.447  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.585      ;
; 0.509  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.523      ;
; 0.563  ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 1.000        ; 0.000      ; 0.469      ;
; 1.765  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk         ; 0.500        ; 1.459      ; 0.367      ;
; 2.265  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk         ; 1.000        ; 1.459      ; 0.367      ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clk'                                                                                                                                                    ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                         ; To Node                           ; Launch Clock                      ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+
; -1.385 ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk         ; 0.000        ; 1.459      ; 0.367      ;
; -0.885 ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; clk         ; -0.500       ; 1.459      ; 0.367      ;
; 0.317  ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.469      ;
; 0.371  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[0]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.523      ;
; 0.433  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.585      ;
; 0.434  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.586      ;
; 0.438  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.590      ;
; 0.445  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.597      ;
; 0.493  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.645      ;
; 0.500  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.652      ;
; 0.546  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[2]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.698      ;
; 0.563  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.715      ;
; 0.572  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.724      ;
; 0.585  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.737      ;
; 0.594  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.746      ;
; 0.607  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.759      ;
; 0.611  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.763      ;
; 0.616  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[4]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.768      ;
; 0.627  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.779      ;
; 0.629  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.781      ;
; 0.648  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.800      ;
; 0.657  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.809      ;
; 0.662  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.814      ;
; 0.664  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.816      ;
; 0.668  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.820      ;
; 0.692  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.844      ;
; 0.697  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.849      ;
; 0.705  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.857      ;
; 0.710  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[5]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.862      ;
; 0.715  ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.867      ;
; 0.716  ; clk_divider:divider|counter[7]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.868      ;
; 0.720  ; clk_divider:divider|counter[7]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.872      ;
; 0.727  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.879      ;
; 0.740  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.892      ;
; 0.745  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[6]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.897      ;
; 0.762  ; clk_divider:divider|counter[3]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.914      ;
; 0.775  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.927      ;
; 0.780  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[7]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.932      ;
; 0.787  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.939      ;
; 0.788  ; clk_divider:divider|counter[6]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.940      ;
; 0.792  ; clk_divider:divider|counter[6]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.944      ;
; 0.804  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.956      ;
; 0.830  ; clk_divider:divider|counter[1]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.982      ;
; 0.834  ; clk_divider:divider|counter[3]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 0.986      ;
; 0.882  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.034      ;
; 0.887  ; clk_divider:divider|counter[0]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.039      ;
; 0.895  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.047      ;
; 0.896  ; clk_divider:divider|counter[4]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.048      ;
; 0.900  ; clk_divider:divider|counter[4]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.052      ;
; 0.903  ; clk_divider:divider|counter[1]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.055      ;
; 0.914  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.066      ;
; 0.915  ; clk_divider:divider|counter[5]    ; clk_divider:divider|counter[3]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.067      ;
; 0.919  ; clk_divider:divider|counter[5]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.071      ;
; 0.965  ; clk_divider:divider|counter[2]    ; clk_divider:divider|counter[1]    ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.117      ;
; 1.037  ; clk_divider:divider|counter[2]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.189      ;
; 1.037  ; clk_divider:divider|counter[0]    ; clk_divider:divider|out_clk_inner ; clk                               ; clk         ; 0.000        ; 0.000      ; 1.189      ;
+--------+-----------------------------------+-----------------------------------+-----------------------------------+-------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clk_divider:divider|out_clk_inner'                                                                                                                                                         ;
+-------+------------------------------------------+------------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+
; Slack ; From Node                                ; To Node                                  ; Launch Clock                      ; Latch Clock                       ; Relationship ; Clock Skew ; Data Delay ;
+-------+------------------------------------------+------------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+
; 0.215 ; SPI_controller:my_SPI|input_register[15] ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; SPI_controller:my_SPI|start_sync         ; SPI_controller:my_SPI|start_sync         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; SPI_controller:my_SPI|update             ; SPI_controller:my_SPI|update             ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.367      ;
; 0.318 ; SPI_controller:my_SPI|update             ; SPI_controller:my_SPI|inner_ldac         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.470      ;
; 0.358 ; SPI_controller:my_SPI|input_register[10] ; SPI_controller:my_SPI|input_register[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.510      ;
; 0.365 ; SPI_controller:my_SPI|input_register[6]  ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.517      ;
; 0.366 ; SPI_controller:my_SPI|inner_ldac         ; SPI_controller:my_SPI|update             ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.518      ;
; 0.368 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.520      ;
; 0.377 ; SPI_controller:my_SPI|input_register[13] ; SPI_controller:my_SPI|input_register[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.529      ;
; 0.381 ; SPI_controller:my_SPI|input_register[4]  ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.533      ;
; 0.382 ; SPI_controller:my_SPI|bit_number[0]      ; SPI_controller:my_SPI|bit_number[0]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.534      ;
; 0.382 ; SPI_controller:my_SPI|bit_number[2]      ; SPI_controller:my_SPI|bit_number[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.534      ;
; 0.383 ; SPI_controller:my_SPI|bit_number[3]      ; SPI_controller:my_SPI|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.535      ;
; 0.439 ; SPI_controller:my_SPI|input_register[5]  ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.591      ;
; 0.439 ; SPI_controller:my_SPI|input_register[9]  ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.591      ;
; 0.452 ; SPI_controller:my_SPI|input_register[7]  ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.604      ;
; 0.466 ; SPI_controller:my_SPI|bit_number[1]      ; SPI_controller:my_SPI|bit_number[1]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.618      ;
; 0.480 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.632      ;
; 0.493 ; SPI_controller:my_SPI|update             ; SPI_controller:my_SPI|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.014     ; 0.631      ;
; 0.522 ; SPI_controller:my_SPI|bit_number[2]      ; SPI_controller:my_SPI|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.674      ;
; 0.522 ; SPI_controller:my_SPI|bit_number[0]      ; SPI_controller:my_SPI|bit_number[1]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.674      ;
; 0.523 ; SPI_controller:my_SPI|bit_number[3]      ; SPI_controller:my_SPI|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.675      ;
; 0.544 ; SPI_controller:my_SPI|input_register[14] ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.696      ;
; 0.547 ; SPI_controller:my_SPI|input_register[4]  ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.699      ;
; 0.557 ; SPI_controller:my_SPI|bit_number[0]      ; SPI_controller:my_SPI|bit_number[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.709      ;
; 0.557 ; SPI_controller:my_SPI|bit_number[2]      ; SPI_controller:my_SPI|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.709      ;
; 0.562 ; SPI_controller:my_SPI|input_register[8]  ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.714      ;
; 0.562 ; SPI_controller:my_SPI|input_register[12] ; SPI_controller:my_SPI|input_register[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.714      ;
; 0.592 ; SPI_controller:my_SPI|bit_number[0]      ; SPI_controller:my_SPI|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.744      ;
; 0.598 ; SPI_controller:my_SPI|inner_ldac         ; SPI_controller:my_SPI|hold_start         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.014     ; 0.736      ;
; 0.606 ; SPI_controller:my_SPI|bit_number[1]      ; SPI_controller:my_SPI|bit_number[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.758      ;
; 0.610 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|update             ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.014      ; 0.776      ;
; 0.610 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|inner_ldac         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.014      ; 0.776      ;
; 0.611 ; SPI_controller:my_SPI|input_register[10] ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.763      ;
; 0.618 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|hold_start         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.770      ;
; 0.622 ; SPI_controller:my_SPI|input_register[6]  ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.774      ;
; 0.627 ; SPI_controller:my_SPI|bit_number[0]      ; SPI_controller:my_SPI|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.779      ;
; 0.641 ; SPI_controller:my_SPI|bit_number[1]      ; SPI_controller:my_SPI|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.793      ;
; 0.644 ; SPI_controller:my_SPI|inner_ldac         ; SPI_controller:my_SPI|start              ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.014     ; 0.782      ;
; 0.646 ; SPI_controller:my_SPI|update             ; SPI_controller:my_SPI|hold_start         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.014     ; 0.784      ;
; 0.649 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|start_sync         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.014     ; 0.787      ;
; 0.657 ; SPI_controller:my_SPI|bit_number[3]      ; SPI_controller:my_SPI|start_sync         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.014     ; 0.795      ;
; 0.676 ; SPI_controller:my_SPI|bit_number[1]      ; SPI_controller:my_SPI|bit_number[4]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.828      ;
; 0.676 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|hold_start         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.828      ;
; 0.690 ; SPI_controller:my_SPI|input_register[11] ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.842      ;
; 0.701 ; SPI_controller:my_SPI|input_register[11] ; SPI_controller:my_SPI|input_register[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.853      ;
; 0.706 ; SPI_controller:my_SPI|input_register[7]  ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.858      ;
; 0.745 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|start_sync         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.000      ; 0.397      ;
; 0.768 ; SPI_controller:my_SPI|input_register[9]  ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.920      ;
; 0.771 ; SPI_controller:my_SPI|bit_number[1]      ; SPI_controller:my_SPI|start_sync         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.014     ; 0.909      ;
; 0.775 ; SPI_controller:my_SPI|input_register[5]  ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.927      ;
; 0.790 ; SPI_controller:my_SPI|bit_number[0]      ; SPI_controller:my_SPI|start_sync         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.014     ; 0.928      ;
; 0.803 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|bit_number[0]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.955      ;
; 0.803 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|bit_number[1]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.955      ;
; 0.803 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|bit_number[2]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.955      ;
; 0.803 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|bit_number[3]      ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.955      ;
; 0.817 ; SPI_controller:my_SPI|input_register[8]  ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; 0.000      ; 0.969      ;
; 0.817 ; SPI_controller:my_SPI|bit_number[2]      ; SPI_controller:my_SPI|start_sync         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.014     ; 0.955      ;
; 0.890 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|input_register[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 0.544      ;
; 0.892 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 0.546      ;
; 0.892 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|input_register[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 0.546      ;
; 0.917 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.012     ; 1.057      ;
; 0.918 ; SPI_controller:my_SPI|bit_number[3]      ; SPI_controller:my_SPI|update             ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.000      ; 0.570      ;
; 0.923 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.012     ; 1.063      ;
; 0.960 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.012     ; 1.100      ;
; 0.972 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|update             ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.000      ; 0.624      ;
; 0.986 ; SPI_controller:my_SPI|bit_number[4]      ; SPI_controller:my_SPI|hold_start         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; -0.014     ; 0.624      ;
; 0.999 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 0.653      ;
; 1.012 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 0.666      ;
; 1.013 ; SPI_controller:my_SPI|bit_number[3]      ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.012     ; 1.153      ;
; 1.014 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 0.668      ;
; 1.019 ; SPI_controller:my_SPI|bit_number[3]      ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.012     ; 1.159      ;
; 1.020 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|input_register[14] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 0.674      ;
; 1.022 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|input_register[13] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 0.676      ;
; 1.034 ; SPI_controller:my_SPI|bit_number[1]      ; SPI_controller:my_SPI|update             ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.000      ; 0.686      ;
; 1.038 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 0.692      ;
; 1.040 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|input_register[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 0.694      ;
; 1.041 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 0.695      ;
; 1.044 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 0.698      ;
; 1.045 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 0.699      ;
; 1.046 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 0.700      ;
; 1.047 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 0.701      ;
; 1.055 ; SPI_controller:my_SPI|bit_number[2]      ; SPI_controller:my_SPI|update             ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.000      ; 0.707      ;
; 1.056 ; SPI_controller:my_SPI|bit_number[3]      ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.012     ; 1.196      ;
; 1.058 ; SPI_controller:my_SPI|bit_number[0]      ; SPI_controller:my_SPI|update             ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.000      ; 0.710      ;
; 1.127 ; SPI_controller:my_SPI|bit_number[1]      ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.012     ; 1.267      ;
; 1.133 ; SPI_controller:my_SPI|bit_number[1]      ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.012     ; 1.273      ;
; 1.146 ; SPI_controller:my_SPI|bit_number[0]      ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.012     ; 1.286      ;
; 1.152 ; SPI_controller:my_SPI|bit_number[0]      ; SPI_controller:my_SPI|input_register[12] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.012     ; 1.292      ;
; 1.154 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|input_register[11] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 0.808      ;
; 1.155 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|input_register[9]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 0.809      ;
; 1.158 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|input_register[6]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 0.812      ;
; 1.158 ; SPI_controller:my_SPI|bit_number[3]      ; SPI_controller:my_SPI|hold_start         ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; -0.014     ; 0.796      ;
; 1.161 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|input_register[10] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 0.815      ;
; 1.162 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|input_register[8]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 0.816      ;
; 1.163 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|input_register[5]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 0.817      ;
; 1.164 ; SPI_controller:my_SPI|start              ; SPI_controller:my_SPI|input_register[7]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 0.818      ;
; 1.169 ; SPI_controller:my_SPI|hold_start         ; SPI_controller:my_SPI|input_register[4]  ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; -0.500       ; 0.002      ; 0.823      ;
; 1.170 ; SPI_controller:my_SPI|bit_number[1]      ; SPI_controller:my_SPI|input_register[15] ; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 0.000        ; -0.012     ; 1.310      ;
+-------+------------------------------------------+------------------------------------------+-----------------------------------+-----------------------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clk'                                                                              ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                            ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clk   ; Rise       ; clk                               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[0]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[0]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[1]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[1]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[2]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[2]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[3]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[3]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[4]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[4]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[5]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[5]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[6]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[6]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|counter[7]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|counter[7]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; clk_divider:divider|out_clk_inner ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; clk_divider:divider|out_clk_inner ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk|combout                       ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk|combout                       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|inclk[0]              ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|inclk[0]              ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|outclk                ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|outclk                ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[2]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[2]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[3]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[3]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[4]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[4]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[5]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[5]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[6]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[6]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|counter[7]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|counter[7]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; divider|out_clk_inner|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; divider|out_clk_inner|clk         ;
+--------+--------------+----------------+------------------+-------+------------+-----------------------------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clk_divider:divider|out_clk_inner'                                                                                   ;
+--------+--------------+----------------+------------------+-----------------------------------+------------+------------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock                             ; Clock Edge ; Target                                   ;
+--------+--------------+----------------+------------------+-----------------------------------+------------+------------------------------------------+
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[0]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[0]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[1]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[1]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[2]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[2]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[3]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[3]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[4]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|bit_number[4]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|hold_start         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|hold_start         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|inner_ldac         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|inner_ldac         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[10] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[10] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[11] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[11] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[12] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[12] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[13] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[13] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[14] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[14] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[15] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[15] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[4]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[4]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[5]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[5]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[6]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[6]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[7]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[7]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[8]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[8]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[9]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|input_register[9]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|start              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|start              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|start_sync         ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; SPI_controller:my_SPI|start_sync         ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|update             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Fall       ; SPI_controller:my_SPI|update             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner|regout             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner|regout             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner~clkctrl|inclk[0]   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner~clkctrl|inclk[0]   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner~clkctrl|outclk     ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; divider|out_clk_inner~clkctrl|outclk     ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[0]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[0]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[1]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[1]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[2]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[2]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[3]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[3]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[4]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|bit_number[4]|clk                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|hold_start|clk                    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|hold_start|clk                    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|inner_ldac|clk                    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|inner_ldac|clk                    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[10]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[10]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[11]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[11]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[12]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[12]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[13]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[13]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[14]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[14]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[15]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[15]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[4]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[4]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[5]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[5]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[6]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[6]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[7]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[7]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[8]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[8]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[9]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|input_register[9]|clk             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|start_sync|clk                    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|start_sync|clk                    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|start|clk                         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|start|clk                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|update|clk                        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk_divider:divider|out_clk_inner ; Rise       ; my_SPI|update|clk                        ;
+--------+--------------+----------------+------------------+-----------------------------------+------------+------------------------------------------+


+-------------------------------------------------------------------------------------------------------------------+
; Setup Times                                                                                                       ;
+--------------+-----------------------------------+-------+-------+------------+-----------------------------------+
; Data Port    ; Clock Port                        ; Rise  ; Fall  ; Clock Edge ; Clock Reference                   ;
+--------------+-----------------------------------+-------+-------+------------+-----------------------------------+
; data_msb[*]  ; clk_divider:divider|out_clk_inner ; 3.149 ; 3.149 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[0] ; clk_divider:divider|out_clk_inner ; 2.771 ; 2.771 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[1] ; clk_divider:divider|out_clk_inner ; 2.939 ; 2.939 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[2] ; clk_divider:divider|out_clk_inner ; 2.850 ; 2.850 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[3] ; clk_divider:divider|out_clk_inner ; 3.002 ; 3.002 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[4] ; clk_divider:divider|out_clk_inner ; 2.993 ; 2.993 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[5] ; clk_divider:divider|out_clk_inner ; 3.149 ; 3.149 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[6] ; clk_divider:divider|out_clk_inner ; 3.035 ; 3.035 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[7] ; clk_divider:divider|out_clk_inner ; 3.078 ; 3.078 ; Rise       ; clk_divider:divider|out_clk_inner ;
+--------------+-----------------------------------+-------+-------+------------+-----------------------------------+


+---------------------------------------------------------------------------------------------------------------------+
; Hold Times                                                                                                          ;
+--------------+-----------------------------------+--------+--------+------------+-----------------------------------+
; Data Port    ; Clock Port                        ; Rise   ; Fall   ; Clock Edge ; Clock Reference                   ;
+--------------+-----------------------------------+--------+--------+------------+-----------------------------------+
; data_msb[*]  ; clk_divider:divider|out_clk_inner ; -2.473 ; -2.473 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[0] ; clk_divider:divider|out_clk_inner ; -2.485 ; -2.485 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[1] ; clk_divider:divider|out_clk_inner ; -2.483 ; -2.483 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[2] ; clk_divider:divider|out_clk_inner ; -2.473 ; -2.473 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[3] ; clk_divider:divider|out_clk_inner ; -2.628 ; -2.628 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[4] ; clk_divider:divider|out_clk_inner ; -2.618 ; -2.618 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[5] ; clk_divider:divider|out_clk_inner ; -2.700 ; -2.700 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[6] ; clk_divider:divider|out_clk_inner ; -2.662 ; -2.662 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[7] ; clk_divider:divider|out_clk_inner ; -2.947 ; -2.947 ; Rise       ; clk_divider:divider|out_clk_inner ;
+--------------+-----------------------------------+--------+--------+------------+-----------------------------------+


+----------------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                          ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; Data Port ; Clock Port                        ; Rise  ; Fall  ; Clock Edge ; Clock Reference                   ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; din       ; clk_divider:divider|out_clk_inner ; 3.761 ; 3.761 ; Rise       ; clk_divider:divider|out_clk_inner ;
; sclk      ; clk_divider:divider|out_clk_inner ; 2.167 ;       ; Rise       ; clk_divider:divider|out_clk_inner ;
; sync      ; clk_divider:divider|out_clk_inner ; 4.267 ; 4.267 ; Rise       ; clk_divider:divider|out_clk_inner ;
; ldac      ; clk_divider:divider|out_clk_inner ; 3.679 ; 3.679 ; Fall       ; clk_divider:divider|out_clk_inner ;
; sclk      ; clk_divider:divider|out_clk_inner ; 4.046 ; 4.046 ; Fall       ; clk_divider:divider|out_clk_inner ;
; sync      ; clk_divider:divider|out_clk_inner ; 4.179 ; 4.179 ; Fall       ; clk_divider:divider|out_clk_inner ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+


+----------------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                                  ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; Data Port ; Clock Port                        ; Rise  ; Fall  ; Clock Edge ; Clock Reference                   ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; din       ; clk_divider:divider|out_clk_inner ; 3.761 ; 3.761 ; Rise       ; clk_divider:divider|out_clk_inner ;
; sclk      ; clk_divider:divider|out_clk_inner ; 2.167 ;       ; Rise       ; clk_divider:divider|out_clk_inner ;
; sync      ; clk_divider:divider|out_clk_inner ; 4.267 ; 4.267 ; Rise       ; clk_divider:divider|out_clk_inner ;
; ldac      ; clk_divider:divider|out_clk_inner ; 3.679 ; 3.679 ; Fall       ; clk_divider:divider|out_clk_inner ;
; sclk      ; clk_divider:divider|out_clk_inner ; 4.046 ; 2.167 ; Fall       ; clk_divider:divider|out_clk_inner ;
; sync      ; clk_divider:divider|out_clk_inner ; 4.179 ; 4.179 ; Fall       ; clk_divider:divider|out_clk_inner ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+


+--------------------------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                                              ;
+------------------------------------+---------+--------+----------+---------+---------------------+
; Clock                              ; Setup   ; Hold   ; Recovery ; Removal ; Minimum Pulse Width ;
+------------------------------------+---------+--------+----------+---------+---------------------+
; Worst-case Slack                   ; -3.724  ; -2.580 ; N/A      ; N/A     ; -1.941              ;
;  clk                               ; -3.016  ; -2.580 ; N/A      ; N/A     ; -1.941              ;
;  clk_divider:divider|out_clk_inner ; -3.724  ; 0.215  ; N/A      ; N/A     ; -0.742              ;
; Design-wide TNS                    ; -80.613 ; -2.58  ; 0.0      ; 0.0     ; -47.945             ;
;  clk                               ; -16.587 ; -2.580 ; N/A      ; N/A     ; -15.297             ;
;  clk_divider:divider|out_clk_inner ; -64.026 ; 0.000  ; N/A      ; N/A     ; -32.648             ;
+------------------------------------+---------+--------+----------+---------+---------------------+


+-------------------------------------------------------------------------------------------------------------------+
; Setup Times                                                                                                       ;
+--------------+-----------------------------------+-------+-------+------------+-----------------------------------+
; Data Port    ; Clock Port                        ; Rise  ; Fall  ; Clock Edge ; Clock Reference                   ;
+--------------+-----------------------------------+-------+-------+------------+-----------------------------------+
; data_msb[*]  ; clk_divider:divider|out_clk_inner ; 7.216 ; 7.216 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[0] ; clk_divider:divider|out_clk_inner ; 6.414 ; 6.414 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[1] ; clk_divider:divider|out_clk_inner ; 6.858 ; 6.858 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[2] ; clk_divider:divider|out_clk_inner ; 6.551 ; 6.551 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[3] ; clk_divider:divider|out_clk_inner ; 6.975 ; 6.975 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[4] ; clk_divider:divider|out_clk_inner ; 6.964 ; 6.964 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[5] ; clk_divider:divider|out_clk_inner ; 7.216 ; 7.216 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[6] ; clk_divider:divider|out_clk_inner ; 6.921 ; 6.921 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[7] ; clk_divider:divider|out_clk_inner ; 7.026 ; 7.026 ; Rise       ; clk_divider:divider|out_clk_inner ;
+--------------+-----------------------------------+-------+-------+------------+-----------------------------------+


+---------------------------------------------------------------------------------------------------------------------+
; Hold Times                                                                                                          ;
+--------------+-----------------------------------+--------+--------+------------+-----------------------------------+
; Data Port    ; Clock Port                        ; Rise   ; Fall   ; Clock Edge ; Clock Reference                   ;
+--------------+-----------------------------------+--------+--------+------------+-----------------------------------+
; data_msb[*]  ; clk_divider:divider|out_clk_inner ; -2.473 ; -2.473 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[0] ; clk_divider:divider|out_clk_inner ; -2.485 ; -2.485 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[1] ; clk_divider:divider|out_clk_inner ; -2.483 ; -2.483 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[2] ; clk_divider:divider|out_clk_inner ; -2.473 ; -2.473 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[3] ; clk_divider:divider|out_clk_inner ; -2.628 ; -2.628 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[4] ; clk_divider:divider|out_clk_inner ; -2.618 ; -2.618 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[5] ; clk_divider:divider|out_clk_inner ; -2.700 ; -2.700 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[6] ; clk_divider:divider|out_clk_inner ; -2.662 ; -2.662 ; Rise       ; clk_divider:divider|out_clk_inner ;
;  data_msb[7] ; clk_divider:divider|out_clk_inner ; -2.947 ; -2.947 ; Rise       ; clk_divider:divider|out_clk_inner ;
+--------------+-----------------------------------+--------+--------+------------+-----------------------------------+


+------------------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                            ;
+-----------+-----------------------------------+--------+--------+------------+-----------------------------------+
; Data Port ; Clock Port                        ; Rise   ; Fall   ; Clock Edge ; Clock Reference                   ;
+-----------+-----------------------------------+--------+--------+------------+-----------------------------------+
; din       ; clk_divider:divider|out_clk_inner ; 8.754  ; 8.754  ; Rise       ; clk_divider:divider|out_clk_inner ;
; sclk      ; clk_divider:divider|out_clk_inner ; 5.245  ;        ; Rise       ; clk_divider:divider|out_clk_inner ;
; sync      ; clk_divider:divider|out_clk_inner ; 10.015 ; 10.015 ; Rise       ; clk_divider:divider|out_clk_inner ;
; ldac      ; clk_divider:divider|out_clk_inner ; 8.285  ; 8.285  ; Fall       ; clk_divider:divider|out_clk_inner ;
; sclk      ; clk_divider:divider|out_clk_inner ; 9.612  ; 9.612  ; Fall       ; clk_divider:divider|out_clk_inner ;
; sync      ; clk_divider:divider|out_clk_inner ; 9.975  ; 9.975  ; Fall       ; clk_divider:divider|out_clk_inner ;
+-----------+-----------------------------------+--------+--------+------------+-----------------------------------+


+----------------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                                  ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; Data Port ; Clock Port                        ; Rise  ; Fall  ; Clock Edge ; Clock Reference                   ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+
; din       ; clk_divider:divider|out_clk_inner ; 3.761 ; 3.761 ; Rise       ; clk_divider:divider|out_clk_inner ;
; sclk      ; clk_divider:divider|out_clk_inner ; 2.167 ;       ; Rise       ; clk_divider:divider|out_clk_inner ;
; sync      ; clk_divider:divider|out_clk_inner ; 4.267 ; 4.267 ; Rise       ; clk_divider:divider|out_clk_inner ;
; ldac      ; clk_divider:divider|out_clk_inner ; 3.679 ; 3.679 ; Fall       ; clk_divider:divider|out_clk_inner ;
; sclk      ; clk_divider:divider|out_clk_inner ; 4.046 ; 2.167 ; Fall       ; clk_divider:divider|out_clk_inner ;
; sync      ; clk_divider:divider|out_clk_inner ; 4.179 ; 4.179 ; Fall       ; clk_divider:divider|out_clk_inner ;
+-----------+-----------------------------------+-------+-------+------------+-----------------------------------+


+-------------------------------------------------------------------------------------------------------------------+
; Setup Transfers                                                                                                   ;
+-----------------------------------+-----------------------------------+----------+----------+----------+----------+
; From Clock                        ; To Clock                          ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+-----------------------------------+-----------------------------------+----------+----------+----------+----------+
; clk                               ; clk                               ; 144      ; 0        ; 0        ; 0        ;
; clk_divider:divider|out_clk_inner ; clk                               ; 1        ; 1        ; 0        ; 0        ;
; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 164      ; 89       ; 15       ; 13       ;
+-----------------------------------+-----------------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-------------------------------------------------------------------------------------------------------------------+
; Hold Transfers                                                                                                    ;
+-----------------------------------+-----------------------------------+----------+----------+----------+----------+
; From Clock                        ; To Clock                          ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+-----------------------------------+-----------------------------------+----------+----------+----------+----------+
; clk                               ; clk                               ; 144      ; 0        ; 0        ; 0        ;
; clk_divider:divider|out_clk_inner ; clk                               ; 1        ; 1        ; 0        ; 0        ;
; clk_divider:divider|out_clk_inner ; clk_divider:divider|out_clk_inner ; 164      ; 89       ; 15       ; 13       ;
+-----------------------------------+-----------------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 8     ; 8    ;
; Unconstrained Input Port Paths  ; 16    ; 16   ;
; Unconstrained Output Ports      ; 4     ; 4    ;
; Unconstrained Output Port Paths ; 6     ; 6    ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version
    Info: Processing started: Tue Oct 06 13:34:00 2020
Info: Command: quartus_sta lab2 -c lab2
Info: qsta_default_script.tcl version: #1
Info (20030): Parallel compilation is enabled and will use 2 of the 2 processors detected
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Critical Warning (332012): Synopsys Design Constraints File file not found: 'lab2.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name clk clk
    Info (332105): create_clock -period 1.000 -name clk_divider:divider|out_clk_inner clk_divider:divider|out_clk_inner
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -3.724
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -3.724       -64.026 clk_divider:divider|out_clk_inner 
    Info (332119):    -3.016       -16.587 clk 
Info (332146): Worst-case hold slack is -2.580
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.580        -2.580 clk 
    Info (332119):     0.499         0.000 clk_divider:divider|out_clk_inner 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.941
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.941       -15.297 clk 
    Info (332119):    -0.742       -32.648 clk_divider:divider|out_clk_inner 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -0.638
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.638       -10.780 clk_divider:divider|out_clk_inner 
    Info (332119):    -0.316        -0.939 clk 
Info (332146): Worst-case hold slack is -1.385
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.385        -1.385 clk 
    Info (332119):     0.215         0.000 clk_divider:divider|out_clk_inner 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -10.380 clk 
    Info (332119):    -0.500       -22.000 clk_divider:divider|out_clk_inner 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 3 warnings
    Info: Peak virtual memory: 4574 megabytes
    Info: Processing ended: Tue Oct 06 13:34:00 2020
    Info: Elapsed time: 00:00:00
    Info: Total CPU time (on all processors): 00:00:01


